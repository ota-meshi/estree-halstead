// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test for halstead complexity measures /js/array-pattern.js ArrayExpression\`
[1, 2]
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/array-pattern.js ArrayPattern\`
[a, b]
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/array-pattern.js Literal\`
1
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/array-pattern.js Literal\`
2
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/array-pattern.js Program\`
const [a, b] = [1, 2]

\` 1`] = `
Object {
  "deliveredBugs": 0.01,
  "difficulty": 2,
  "effort": 60,
  "length": 10,
  "time": 3.3333333333333335,
  "vocabulary": 8,
  "volume": 30,
}
`;

exports[`test for halstead complexity measures /js/array-pattern.js VariableDeclaration\`
const [a, b] = [1, 2]
\` 1`] = `
Object {
  "deliveredBugs": 0.01,
  "difficulty": 2,
  "effort": 60,
  "length": 10,
  "time": 3.3333333333333335,
  "vocabulary": 8,
  "volume": 30,
}
`;

exports[`test for halstead complexity measures /js/array-pattern.js VariableDeclarator\`
[a, b] = [1, 2]
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1.5,
  "effort": 37.89929144777766,
  "length": 9,
  "time": 2.1055161915432032,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js ArrowFunctionExpression\`
() => ({})
\` 1`] = `
Object {
  "deliveredBugs": 0.002113283334294875,
  "difficulty": 1.5,
  "effort": 9.509775004326936,
  "length": 4,
  "time": 0.5283208335737187,
  "vocabulary": 3,
  "volume": 6.339850002884624,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js ArrowFunctionExpression\`
() => {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1.5,
  "effort": 7.132331253245202,
  "length": 3,
  "time": 0.396240625180289,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js ArrowFunctionExpression\`
() => 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js ArrowFunctionExpression\`
(a, b) => 42
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js ArrowFunctionExpression\`
a => 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js ArrowFunctionExpression\`
async () => {
    await 42
}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2.5,
  "effort": 38.77443751081734,
  "length": 6,
  "time": 2.1541354172676304,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js BlockStatement\`
{
    await 42
}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js ExpressionStatement\`
await 42
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js Program\`
const a = () => 42
const b = a => 42
const c = (a, b) => 42

const d = () => {}
const e = () => ({})

const f = async () => {
    await 42
}

\` 1`] = `
Object {
  "deliveredBugs": 0.05599876520372211,
  "difficulty": 7.428571428571429,
  "effort": 1247.9724816829498,
  "length": 43,
  "time": 69.33180453794165,
  "vocabulary": 15,
  "volume": 167.99629561116632,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclaration\`
const a = () => 42
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclaration\`
const b = a => 42
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclaration\`
const c = (a, b) => 42
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclaration\`
const d = () => {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2.5,
  "effort": 38.77443751081734,
  "length": 6,
  "time": 2.1541354172676304,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclaration\`
const e = () => ({})
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 2.5,
  "effort": 45.23684376262024,
  "length": 7,
  "time": 2.5131579868122356,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclaration\`
const f = async () => {
    await 42
}
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 3.5,
  "effort": 99.85263754543284,
  "length": 9,
  "time": 5.547368752524047,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclarator\`
a = () => 42
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclarator\`
b = a => 42
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclarator\`
c = (a, b) => 42
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2,
  "effort": 48,
  "length": 8,
  "time": 2.6666666666666665,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclarator\`
d = () => {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 2,
  "effort": 23.21928094887362,
  "length": 5,
  "time": 1.289960052715201,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclarator\`
e = () => ({})
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 2,
  "effort": 27.863137138648348,
  "length": 6,
  "time": 1.5479520632582415,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /js/arrow-function-expression.js VariableDeclarator\`
f = async () => {
    await 42
}
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 3,
  "effort": 72,
  "length": 8,
  "time": 4,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /js/assignment-expression.js ExpressionStatement\`
a *= (42, 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/assignment-expression.js ExpressionStatement\`
a += 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/assignment-expression.js ExpressionStatement\`
a = 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/assignment-expression.js Literal\`
1
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/assignment-expression.js Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/assignment-expression.js Program\`
a = 42
a += 42
a *= (42, 1)

\` 1`] = `
Object {
  "deliveredBugs": 0.012,
  "difficulty": 5.833333333333334,
  "effort": 210.00000000000003,
  "length": 12,
  "time": 11.666666666666668,
  "vocabulary": 8,
  "volume": 36,
}
`;

exports[`test for halstead complexity measures /js/assignment-expression.js SequenceExpression\`
42, 1
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/await-expression.js BinaryExpression\`
42 ** 1
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/await-expression.js BlockStatement\`
{
    await 42
    await await 42
    await (42 ** 1)
}
\` 1`] = `
Object {
  "deliveredBugs": 0.009478195835977574,
  "difficulty": 4,
  "effort": 113.73835003173087,
  "length": 11,
  "time": 6.318797223985048,
  "vocabulary": 6,
  "volume": 28.43458750793272,
}
`;

exports[`test for halstead complexity measures /js/await-expression.js ExpressionStatement\`
await (42 ** 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/await-expression.js ExpressionStatement\`
await 42
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/await-expression.js ExpressionStatement\`
await await 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001,
  "difficulty": 0.5,
  "effort": 1.5,
  "length": 3,
  "time": 0.08333333333333333,
  "vocabulary": 2,
  "volume": 3,
}
`;

exports[`test for halstead complexity measures /js/await-expression.js FunctionDeclaration\`
async function fn () {
    await 42
    await await 42
    await (42 ** 1)
}
\` 1`] = `
Object {
  "deliveredBugs": 0.01584962500721156,
  "difficulty": 5,
  "effort": 237.74437510817341,
  "length": 15,
  "time": 13.208020839342968,
  "vocabulary": 9,
  "volume": 47.548875021634686,
}
`;

exports[`test for halstead complexity measures /js/await-expression.js Literal\`
1
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/await-expression.js Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/await-expression.js Program\`
async function fn () {
    await 42
    await await 42
    await (42 ** 1)
}

\` 1`] = `
Object {
  "deliveredBugs": 0.01584962500721156,
  "difficulty": 5,
  "effort": 237.74437510817341,
  "length": 15,
  "time": 13.208020839342968,
  "vocabulary": 9,
  "volume": 47.548875021634686,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js BlockStatement\`
{
            break
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 1,
  "effort": 2,
  "length": 2,
  "time": 0.1111111111111111,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js BlockStatement\`
{
            break foo
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js BlockStatement\`
{
            continue
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 1,
  "effort": 2,
  "length": 2,
  "time": 0.1111111111111111,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js BlockStatement\`
{
            continue foo
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js BlockStatement\`
{
        if (a) {
            break
        }
        if (a) {
            break foo
        }
        if (a) {
            continue
        }
        if (a) {
            continue foo
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.01637142917123399,
  "difficulty": 6,
  "effort": 294.6857250822118,
  "length": 19,
  "time": 16.371429171233988,
  "vocabulary": 6,
  "volume": 49.11428751370197,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js BlockStatement\`
{
        return
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 1,
  "effort": 2,
  "length": 2,
  "time": 0.1111111111111111,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js BlockStatement\`
{
        return foo
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js BlockStatement\`
{
    foo: for (const e of list) {
        if (a) {
            break
        }
        if (a) {
            break foo
        }
        if (a) {
            continue
        }
        if (a) {
            continue foo
        }
    }
    if (a) {
        return
    }
    if (a) {
        return foo
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.04440527661769311,
  "difficulty": 13.5,
  "effort": 1798.413703016571,
  "length": 36,
  "time": 99.9118723898095,
  "vocabulary": 13,
  "volume": 133.21582985307933,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js BreakStatement\`
break
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js BreakStatement\`
break foo
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js ContinueStatement\`
continue
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js ContinueStatement\`
continue foo
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js ForOfStatement\`
for (const e of list) {
        if (a) {
            break
        }
        if (a) {
            break foo
        }
        if (a) {
            continue
        }
        if (a) {
            continue foo
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.02767545294909838,
  "difficulty": 7,
  "effort": 581.184511931066,
  "length": 24,
  "time": 32.28802844061478,
  "vocabulary": 11,
  "volume": 83.02635884729514,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js FunctionDeclaration\`
function fn() {
    foo: for (const e of list) {
        if (a) {
            break
        }
        if (a) {
            break foo
        }
        if (a) {
            continue
        }
        if (a) {
            continue foo
        }
    }
    if (a) {
        return
    }
    if (a) {
        return foo
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.052,
  "difficulty": 14.3,
  "effort": 2230.8,
  "length": 39,
  "time": 123.93333333333334,
  "vocabulary": 16,
  "volume": 156,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js IfStatement\`
if (a) {
            break
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js IfStatement\`
if (a) {
            break foo
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js IfStatement\`
if (a) {
            continue
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js IfStatement\`
if (a) {
            continue foo
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js IfStatement\`
if (a) {
        return
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js IfStatement\`
if (a) {
        return foo
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js LabeledStatement\`
foo: for (const e of list) {
        if (a) {
            break
        }
        if (a) {
            break foo
        }
        if (a) {
            continue
        }
        if (a) {
            continue foo
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.031069675006250023,
  "difficulty": 9,
  "effort": 838.8812251687506,
  "length": 26,
  "time": 46.604512509375034,
  "vocabulary": 12,
  "volume": 93.20902501875007,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js Program\`
function fn() {
    foo: for (const e of list) {
        if (a) {
            break
        }
        if (a) {
            break foo
        }
        if (a) {
            continue
        }
        if (a) {
            continue foo
        }
    }
    if (a) {
        return
    }
    if (a) {
        return foo
    }
}

\` 1`] = `
Object {
  "deliveredBugs": 0.052,
  "difficulty": 14.3,
  "effort": 2230.8,
  "length": 39,
  "time": 123.93333333333334,
  "vocabulary": 16,
  "volume": 156,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js ReturnStatement\`
return
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js ReturnStatement\`
return foo
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js VariableDeclaration\`
const e
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/break-continue-return.js VariableDeclarator\`
e
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/call-espression.js ExpressionStatement\`
call()
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/call-espression.js ExpressionStatement\`
call(a)
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/call-espression.js ExpressionStatement\`
call(a, b)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/call-espression.js ExpressionStatement\`
call?.()
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/call-espression.js Program\`
call()
call(a)
call(a, b)
call?.()

\` 1`] = `
Object {
  "deliveredBugs": 0.011201504169791677,
  "difficulty": 3.5,
  "effort": 117.6157937828126,
  "length": 13,
  "time": 6.534210765711811,
  "vocabulary": 6,
  "volume": 33.60451250937503,
}
`;

exports[`test for halstead complexity measures /js/catch-clause.js BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/catch-clause.js CatchClause\`
catch(e){}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/catch-clause.js CatchClause\`
catch{}
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 1,
  "effort": 2,
  "length": 2,
  "time": 0.1111111111111111,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/catch-clause.js Program\`
try{}catch{}
try{}catch(e){}

\` 1`] = `
Object {
  "deliveredBugs": 0.007739760316291207,
  "difficulty": 2,
  "effort": 46.43856189774724,
  "length": 10,
  "time": 2.579920105430402,
  "vocabulary": 5,
  "volume": 23.21928094887362,
}
`;

exports[`test for halstead complexity measures /js/catch-clause.js TryStatement\`
try{}catch(e){}
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 2,
  "effort": 27.863137138648348,
  "length": 6,
  "time": 1.5479520632582415,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /js/catch-clause.js TryStatement\`
try{}catch{}
\` 1`] = `
Object {
  "deliveredBugs": 0.002113283334294875,
  "difficulty": 1.5,
  "effort": 9.509775004326936,
  "length": 4,
  "time": 0.5283208335737187,
  "vocabulary": 3,
  "volume": 6.339850002884624,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js ClassBody\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js ClassDeclaration\`
class A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js ClassDeclaration\`
class B extends A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js ClassExpression\`
class {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 1,
  "effort": 2,
  "length": 2,
  "time": 0.1111111111111111,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js ClassExpression\`
class extends A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js Program\`
class A {}
class B extends A {}
const a = class A {}
const b = class B extends A {}
const c = class {}
const d = class extends A {}

\` 1`] = `
Object {
  "deliveredBugs": 0.03920689167788937,
  "difficulty": 4.583333333333333,
  "effort": 539.0947605709789,
  "length": 34,
  "time": 29.94970892060994,
  "vocabulary": 11,
  "volume": 117.62067503366812,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js VariableDeclaration\`
const a = class A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js VariableDeclaration\`
const b = class B extends A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2.5,
  "effort": 60,
  "length": 8,
  "time": 3.3333333333333335,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js VariableDeclaration\`
const c = class {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 2,
  "effort": 23.21928094887362,
  "length": 5,
  "time": 1.289960052715201,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js VariableDeclaration\`
const d = class extends A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2.5,
  "effort": 49.12871113600807,
  "length": 7,
  "time": 2.7293728408893374,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js VariableDeclarator\`
a = class A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js VariableDeclarator\`
b = class B extends A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js VariableDeclarator\`
c = class {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/class-declaration-expression.js VariableDeclarator\`
d = class extends A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/conditional-expression.js AssignmentExpression\`
a = 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/conditional-expression.js ConditionalExpression\`
(a = 42) ? a : b
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 2,
  "effort": 36.18947501009619,
  "length": 7,
  "time": 2.0105263894497885,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /js/conditional-expression.js ConditionalExpression\`
a ? a : b
\` 1`] = `
Object {
  "deliveredBugs": 0.002113283334294875,
  "difficulty": 0.75,
  "effort": 4.754887502163468,
  "length": 4,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 6.339850002884624,
}
`;

exports[`test for halstead complexity measures /js/conditional-expression.js ExpressionStatement\`
v = (a = 42) ? a : b
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1.875,
  "effort": 47.374114309722074,
  "length": 9,
  "time": 2.6318952394290043,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /js/conditional-expression.js ExpressionStatement\`
v = a ? a : b
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 1.3333333333333333,
  "effort": 18.575424759098897,
  "length": 6,
  "time": 1.0319680421721609,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /js/conditional-expression.js Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/conditional-expression.js Program\`
v = a ? a : b
v = (a = 42) ? a : b

\` 1`] = `
Object {
  "deliveredBugs": 0.01403677461028802,
  "difficulty": 3.375,
  "effort": 142.1223429291662,
  "length": 15,
  "time": 7.895685718287011,
  "vocabulary": 7,
  "volume": 42.11032383086406,
}
`;

exports[`test for halstead complexity measures /js/debugger-statement.js Program\`
debugger
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/do-while-statement.js BlockStatement\`
{

}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/do-while-statement.js BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/do-while-statement.js DoWhileStatement\`
do {

} while (a)
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/do-while-statement.js Program\`
do {

} while (a) {}

\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 1.5,
  "effort": 15,
  "length": 5,
  "time": 0.8333333333333334,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /js/empty-statement.js EmptyStatement\`
;
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/empty-statement.js Program\`
;

\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/export-all-declaration.js ExportAllDeclaration\`
export * as Foo from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/export-all-declaration.js ExportAllDeclaration\`
export * from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/export-all-declaration.js Literal\`
"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/export-all-declaration.js Program\`
export * from "foo"
export * as Foo from "foo"

\` 1`] = `
Object {
  "deliveredBugs": 0.00861654166907052,
  "difficulty": 3,
  "effort": 77.54887502163469,
  "length": 10,
  "time": 4.308270834535261,
  "vocabulary": 6,
  "volume": 25.84962500721156,
}
`;

exports[`test for halstead complexity measures /js/export-default-declaration.js ExportDefaultDeclaration\`
export default {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1.5,
  "effort": 7.132331253245202,
  "length": 3,
  "time": 0.396240625180289,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/export-default-declaration.js ObjectExpression\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/export-default-declaration.js Program\`
export default {}

\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1.5,
  "effort": 7.132331253245202,
  "length": 3,
  "time": 0.396240625180289,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ClassBody\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ClassDeclaration\`
class A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportNamedDeclaration\`
export {a} from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportNamedDeclaration\`
export {b as c} from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportNamedDeclaration\`
export {d}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportNamedDeclaration\`
export {e, f}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportNamedDeclaration\`
export class A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportNamedDeclaration\`
export const g = 42
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportNamedDeclaration\`
export function h() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 2,
  "effort": 23.21928094887362,
  "length": 5,
  "time": 1.289960052715201,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportSpecifier\`
a
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportSpecifier\`
b as c
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportSpecifier\`
d
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportSpecifier\`
e
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js ExportSpecifier\`
f
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js FunctionDeclaration\`
function h() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js Literal\`
"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js Program\`
export {a} from "foo"
export {b as c} from "foo"

export {d}
export {e, f}

export const g = 42
export class A {}
export function h() {}

\` 1`] = `
Object {
  "deliveredBugs": 0.04977959745815929,
  "difficulty": 5.454545454545454,
  "effort": 814.5752311335156,
  "length": 34,
  "time": 45.25417950741753,
  "vocabulary": 21,
  "volume": 149.33879237447786,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js VariableDeclaration\`
const g = 42
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/export-named-declaration.js VariableDeclarator\`
g = 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js BlockStatement\`
{
        const element = object[key];
        
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js BlockStatement\`
{
    if (Object.hasOwnProperty.call(object, key)) {
        const element = object[key];
        
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.022844129532345624,
  "difficulty": 5.333333333333333,
  "effort": 365.50607251752996,
  "length": 18,
  "time": 20.305892917640552,
  "vocabulary": 14,
  "volume": 68.53238859703687,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js CallExpression\`
Object.hasOwnProperty.call(object, key)
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 1.5,
  "effort": 40.5,
  "length": 9,
  "time": 2.25,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js ForInStatement\`
for (const key in object) {
    if (Object.hasOwnProperty.call(object, key)) {
        const element = object[key];
        
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.030666666666666665,
  "difficulty": 8.333333333333334,
  "effort": 766.6666666666667,
  "length": 23,
  "time": 42.592592592592595,
  "vocabulary": 16,
  "volume": 92,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js IfStatement\`
if (Object.hasOwnProperty.call(object, key)) {
        const element = object[key];
        
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.021575011224993085,
  "difficulty": 5.333333333333333,
  "effort": 345.20017959988934,
  "length": 17,
  "time": 19.177787755549407,
  "vocabulary": 14,
  "volume": 64.72503367497926,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js MemberExpression\`
Object.hasOwnProperty
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js MemberExpression\`
Object.hasOwnProperty.call
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js MemberExpression\`
object[key]
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js Program\`
for (const key in object) {
    if (Object.hasOwnProperty.call(object, key)) {
        const element = object[key];
        
    }
}

\` 1`] = `
Object {
  "deliveredBugs": 0.030666666666666665,
  "difficulty": 8.333333333333334,
  "effort": 766.6666666666667,
  "length": 23,
  "time": 42.592592592592595,
  "vocabulary": 16,
  "volume": 92,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js VariableDeclaration\`
const element = object[key];
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js VariableDeclaration\`
const key
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js VariableDeclarator\`
element = object[key]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/for-in-statement.js VariableDeclarator\`
key
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/for-of-statement.js BlockStatement\`
{
    }
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/for-of-statement.js BlockStatement\`
{
    for await (variable of iterable) {
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 2,
  "effort": 36.18947501009619,
  "length": 7,
  "time": 2.0105263894497885,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /js/for-of-statement.js BlockStatement\`
{
}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/for-of-statement.js ForOfStatement\`
for (const iterator of object) {
}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/for-of-statement.js ForOfStatement\`
for await (variable of iterable) {
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/for-of-statement.js FunctionDeclaration\`
async function f() {
    for await (variable of iterable) {
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.012180403014586996,
  "difficulty": 3.5,
  "effort": 127.89423165316344,
  "length": 11,
  "time": 7.105235091842413,
  "vocabulary": 10,
  "volume": 36.541209043760986,
}
`;

exports[`test for halstead complexity measures /js/for-of-statement.js Program\`
for (const iterator of object) {
}
async function f() {
    for await (variable of iterable) {
    }
}

\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 4,
  "effort": 251.62990083359426,
  "length": 17,
  "time": 13.979438935199681,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /js/for-of-statement.js VariableDeclaration\`
const iterator
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/for-of-statement.js VariableDeclarator\`
iterator
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/function-declaration.js BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/function-declaration.js FunctionDeclaration\`
async function * fn5() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2.5,
  "effort": 38.77443751081734,
  "length": 6,
  "time": 2.1541354172676304,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/function-declaration.js FunctionDeclaration\`
function * fn4() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 2,
  "effort": 23.21928094887362,
  "length": 5,
  "time": 1.289960052715201,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/function-declaration.js FunctionDeclaration\`
function fn1() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/function-declaration.js FunctionDeclaration\`
function fn2(a) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/function-declaration.js FunctionDeclaration\`
function fn3(a, a2) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/function-declaration.js Program\`
function fn1() {}
function fn2(a) {}
function fn3(a, a2) {}
function * fn4() {}
async function * fn5() {}

\` 1`] = `
Object {
  "deliveredBugs": 0.03330395746326983,
  "difficulty": 3.4285714285714284,
  "effort": 342.55499105077536,
  "length": 27,
  "time": 19.030832836154186,
  "vocabulary": 13,
  "volume": 99.91187238980949,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js ExpressionStatement\`
v = async function * fn5() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 3,
  "effort": 72,
  "length": 8,
  "time": 4,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js ExpressionStatement\`
v = function * fn4() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2.5,
  "effort": 49.12871113600807,
  "length": 7,
  "time": 2.7293728408893374,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js ExpressionStatement\`
v = function fn1() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js ExpressionStatement\`
v = function fn2(a) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js ExpressionStatement\`
v = function fn3(a, a2) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js FunctionExpression\`
() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1.5,
  "effort": 7.132331253245202,
  "length": 3,
  "time": 0.396240625180289,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js FunctionExpression\`
(a) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js FunctionExpression\`
(a, a2) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js FunctionExpression\`
async function * fn5() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2.5,
  "effort": 38.77443751081734,
  "length": 6,
  "time": 2.1541354172676304,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js FunctionExpression\`
function * fn4() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 2,
  "effort": 23.21928094887362,
  "length": 5,
  "time": 1.289960052715201,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js FunctionExpression\`
function fn1() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js FunctionExpression\`
function fn2(a) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js FunctionExpression\`
function fn3(a, a2) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js ObjectExpression\`
{
    fn1() {},
    fn2(a) {},
    fn3(a, a2) {},
    *fn4() {},
    async fn5() {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.031069675006250023,
  "difficulty": 2.8571428571428568,
  "effort": 266.3115000535716,
  "length": 26,
  "time": 14.795083336309533,
  "vocabulary": 12,
  "volume": 93.20902501875007,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js Program\`
v = function fn1() {}
v = function fn2(a) {}
v = function fn3(a, a2) {}
v = function * fn4() {}
v = async function * fn5() {}
const object = {
    fn1() {},
    fn2(a) {},
    fn3(a, a2) {},
    *fn4() {},
    async fn5() {}
}

\` 1`] = `
Object {
  "deliveredBugs": 0.08992418250750747,
  "difficulty": 9.777777777777779,
  "effort": 2637.7760202202194,
  "length": 66,
  "time": 146.54311223445663,
  "vocabulary": 17,
  "volume": 269.7725475225224,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js Property\`
*fn4() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js Property\`
async fn5() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js Property\`
fn1() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js Property\`
fn2(a) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js Property\`
fn3(a, a2) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js VariableDeclaration\`
const object = {
    fn1() {},
    fn2(a) {},
    fn3(a, a2) {},
    *fn4() {},
    async fn5() {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.03776660909088234,
  "difficulty": 3.9375,
  "effort": 446.1180698860477,
  "length": 29,
  "time": 24.78433721589154,
  "vocabulary": 15,
  "volume": 113.29982727264704,
}
`;

exports[`test for halstead complexity measures /js/function-expression.js VariableDeclarator\`
object = {
    fn1() {},
    fn2(a) {},
    fn3(a, a2) {},
    *fn4() {},
    async fn5() {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.035535312605870964,
  "difficulty": 3.375,
  "effort": 359.7950401344435,
  "length": 28,
  "time": 19.988613340802416,
  "vocabulary": 14,
  "volume": 106.6059378176129,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportDeclaration\`
import "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportDeclaration\`
import * as All from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportDeclaration\`
import {C, D as d} from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportDeclaration\`
import B, {C} from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportDeclaration\`
import E, * as All2 from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2.5,
  "effort": 60,
  "length": 8,
  "time": 3.3333333333333335,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportDefaultSpecifier\`
B
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportDefaultSpecifier\`
E
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportNamespaceSpecifier\`
* as All
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportNamespaceSpecifier\`
* as All2
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportSpecifier\`
C
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js ImportSpecifier\`
D as d
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js Literal\`
"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/import-declaration.js Program\`
import "foo"
import B, {C} from "foo"
import {C, D as d} from "foo"
import * as All from "foo"
import E, * as All2 from "foo"

\` 1`] = `
Object {
  "deliveredBugs": 0.040611785835281106,
  "difficulty": 4.875,
  "effort": 593.9473678409862,
  "length": 32,
  "time": 32.9970759911659,
  "vocabulary": 14,
  "volume": 121.83535750584332,
}
`;

exports[`test for halstead complexity measures /js/import-expression.js ExpressionStatement\`
import("foo")
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/import-expression.js Literal\`
"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/import-expression.js Program\`
import("foo")

\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/literal.js Literal\`
/regexp/ig
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/literal.js Program\`
v = /regexp/ig
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/member-expression.js ChainExpression\`
c?.[d]
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/member-expression.js ChainExpression\`
c?.d
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/member-expression.js ExpressionStatement\`
a.b = c.d
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /js/member-expression.js ExpressionStatement\`
a.b = c?.[d]
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2,
  "effort": 48,
  "length": 8,
  "time": 2.6666666666666665,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /js/member-expression.js ExpressionStatement\`
a.b = c?.d
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 1.5,
  "effort": 29.47722668160484,
  "length": 7,
  "time": 1.6376237045336022,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/member-expression.js ExpressionStatement\`
a.b = c[d]
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 1.5,
  "effort": 29.47722668160484,
  "length": 7,
  "time": 1.6376237045336022,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/member-expression.js MemberExpression\`
a.b
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/member-expression.js MemberExpression\`
c.d
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/member-expression.js MemberExpression\`
c[d]
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/member-expression.js Program\`
a.b = c.d
a.b = c[d]
a.b = c?.d
a.b = c?.[d]

\` 1`] = `
Object {
  "deliveredBugs": 0.029,
  "difficulty": 8,
  "effort": 696,
  "length": 29,
  "time": 38.666666666666664,
  "vocabulary": 8,
  "volume": 87,
}
`;

exports[`test for halstead complexity measures /js/meta-property.js ExpressionStatement\`
import.meta.url
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /js/meta-property.js MetaProperty\`
import.meta
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/meta-property.js Program\`
import.meta.url

\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /js/method-definition.js BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/method-definition.js ClassBody\`
{
    a () {}
    static b () {}
    [c] () {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.011229419688230418,
  "difficulty": 2,
  "effort": 67.3765181293825,
  "length": 12,
  "time": 3.743139896076806,
  "vocabulary": 7,
  "volume": 33.68825906469125,
}
`;

exports[`test for halstead complexity measures /js/method-definition.js FunctionExpression\`
() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1.5,
  "effort": 7.132331253245202,
  "length": 3,
  "time": 0.396240625180289,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/method-definition.js MethodDefinition\`
[c] () {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/method-definition.js MethodDefinition\`
a () {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/method-definition.js MethodDefinition\`
static b () {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/method-definition.js Program\`
class A {
    a () {}
    static b () {}
    [c] () {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.014792983340064125,
  "difficulty": 2.5,
  "effort": 110.94737505048094,
  "length": 14,
  "time": 6.163743058360052,
  "vocabulary": 9,
  "volume": 44.37895002019238,
}
`;

exports[`test for halstead complexity measures /js/new-expression.js CallExpression\`
A()
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/new-expression.js CallExpression\`
new A()()
\` 1`] = `
Object {
  "deliveredBugs": 0.002113283334294875,
  "difficulty": 1,
  "effort": 6.339850002884624,
  "length": 4,
  "time": 0.3522138890491458,
  "vocabulary": 3,
  "volume": 6.339850002884624,
}
`;

exports[`test for halstead complexity measures /js/new-expression.js ExpressionStatement\`
v = new (A())()
\` 1`] = `
Object {
  "deliveredBugs": 0.005417832221403845,
  "difficulty": 1.5,
  "effort": 24.380244996317302,
  "length": 7,
  "time": 1.3544580553509613,
  "vocabulary": 5,
  "volume": 16.253496664211536,
}
`;

exports[`test for halstead complexity measures /js/new-expression.js ExpressionStatement\`
v = new A()
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/new-expression.js ExpressionStatement\`
v = new A()()
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 1.5,
  "effort": 20.897352853986263,
  "length": 6,
  "time": 1.1609640474436813,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /js/new-expression.js NewExpression\`
new (A())()
\` 1`] = `
Object {
  "deliveredBugs": 0.0026416041678685932,
  "difficulty": 1,
  "effort": 7.92481250360578,
  "length": 5,
  "time": 0.44026736131143224,
  "vocabulary": 3,
  "volume": 7.92481250360578,
}
`;

exports[`test for halstead complexity measures /js/new-expression.js NewExpression\`
new A()
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/new-expression.js Program\`
v = new A()
v = new A()()
v = new (A())()

\` 1`] = `
Object {
  "deliveredBugs": 0.013931568569324173,
  "difficulty": 4.5,
  "effort": 188.07617568587634,
  "length": 18,
  "time": 10.44867642699313,
  "vocabulary": 5,
  "volume": 41.79470570797252,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js ObjectPattern\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js ObjectPattern\`
{a}
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js ObjectPattern\`
{b, c}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js Program\`
const {} = a
const {a} = a
const {b, c} = a

\` 1`] = `
Object {
  "deliveredBugs": 0.014972559584307222,
  "difficulty": 4,
  "effort": 179.67071501168667,
  "length": 16,
  "time": 9.981706389538148,
  "vocabulary": 7,
  "volume": 44.91767875292167,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js Property\`
a
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js Property\`
b
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js Property\`
c
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js VariableDeclaration\`
const {} = a
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js VariableDeclaration\`
const {a} = a
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 3,
  "effort": 30,
  "length": 5,
  "time": 1.6666666666666667,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js VariableDeclaration\`
const {b, c} = a
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js VariableDeclarator\`
{} = a
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js VariableDeclarator\`
{a} = a
\` 1`] = `
Object {
  "deliveredBugs": 0.002113283334294875,
  "difficulty": 2,
  "effort": 12.679700005769249,
  "length": 4,
  "time": 0.7044277780982916,
  "vocabulary": 3,
  "volume": 6.339850002884624,
}
`;

exports[`test for halstead complexity measures /js/object-pattern.js VariableDeclarator\`
{b, c} = a
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js ClassBody\`
{
    #x
    #y = 42
    static #z
    #fx() {}
    static #fy() {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.01550233110947436,
  "difficulty": 2,
  "effort": 93.01398665684616,
  "length": 14,
  "time": 5.16744370315812,
  "vocabulary": 10,
  "volume": 46.50699332842308,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js ClassDeclaration\`
class A {
    #x
    #y = 42
    static #z
    #fx() {}
    static #fy() {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.01911980000384617,
  "difficulty": 2.5,
  "effort": 143.39850002884626,
  "length": 16,
  "time": 7.966583334935903,
  "vocabulary": 12,
  "volume": 57.359400011538504,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js FunctionExpression\`
() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1.5,
  "effort": 7.132331253245202,
  "length": 3,
  "time": 0.396240625180289,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js MethodDefinition\`
#fx() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js MethodDefinition\`
static #fy() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js PrivateIdentifier\`
#fx
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js PrivateIdentifier\`
#fy
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js PrivateIdentifier\`
#y
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js PrivateIdentifier\`
#z
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js Program\`
class A {
    #x
    #y = 42
    static #z
    #fx() {}
    static #fy() {}
}

\` 1`] = `
Object {
  "deliveredBugs": 0.01911980000384617,
  "difficulty": 2.5,
  "effort": 143.39850002884626,
  "length": 16,
  "time": 7.966583334935903,
  "vocabulary": 12,
  "volume": 57.359400011538504,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js PropertyDefinition\`
#x
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js PropertyDefinition\`
#y = 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/private-identifier.js PropertyDefinition\`
static #z
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/property.js BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/property.js FunctionExpression\`
(){}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1.5,
  "effort": 7.132331253245202,
  "length": 3,
  "time": 0.396240625180289,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/property.js Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/property.js ObjectExpression\`
{
    a: 42,
    b,
    c(){},
    get d(){},
    set e(){},
    [a]: 42,
    [c](){},
    get [d](){},
    set [e](){}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.05180615605397529,
  "difficulty": 6.416666666666666,
  "effort": 997.2685040390242,
  "length": 42,
  "time": 55.403805779945785,
  "vocabulary": 13,
  "volume": 155.41846816192586,
}
`;

exports[`test for halstead complexity measures /js/property.js Program\`
o = {
    a: 42,
    b,
    c(){},
    get d(){},
    set e(){},
    [a]: 42,
    [c](){},
    get [d](){},
    set [e](){}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.05730106206892494,
  "difficulty": 6.857142857142857,
  "effort": 1178.7647054178844,
  "length": 44,
  "time": 65.48692807877136,
  "vocabulary": 15,
  "volume": 171.90318620677482,
}
`;

exports[`test for halstead complexity measures /js/property.js Property\`
[a]: 42
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/property.js Property\`
[c](){}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/property.js Property\`
a: 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/property.js Property\`
b
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/property.js Property\`
c(){}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/property.js Property\`
get [d](){}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 2,
  "effort": 23.21928094887362,
  "length": 5,
  "time": 1.289960052715201,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/property.js Property\`
get d(){}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/property.js Property\`
set [e](){}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 2,
  "effort": 23.21928094887362,
  "length": 5,
  "time": 1.289960052715201,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/property.js Property\`
set e(){}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/property-definition.js ClassBody\`
{
    a = 42
    b
    [a] = 42
    [b]
}
\` 1`] = `
Object {
  "deliveredBugs": 0.009478195835977574,
  "difficulty": 3,
  "effort": 85.30376252379816,
  "length": 11,
  "time": 4.739097917988786,
  "vocabulary": 6,
  "volume": 28.43458750793272,
}
`;

exports[`test for halstead complexity measures /js/property-definition.js Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/property-definition.js MemberExpression\`
42
    [b]
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/property-definition.js Program\`
class A {
    a = 42
    b
    [a] = 42
    [b]
}
\` 1`] = `
Object {
  "deliveredBugs": 0.013,
  "difficulty": 3.5,
  "effort": 136.5,
  "length": 13,
  "time": 7.583333333333333,
  "vocabulary": 8,
  "volume": 39,
}
`;

exports[`test for halstead complexity measures /js/property-definition.js PropertyDefinition\`
[a] = 42
    [b]
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 1,
  "effort": 13.931568569324174,
  "length": 6,
  "time": 0.7739760316291208,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /js/property-definition.js PropertyDefinition\`
a = 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/property-definition.js PropertyDefinition\`
b
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/rest-element.js BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/rest-element.js FunctionDeclaration\`
function fn (...rest) {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/rest-element.js Program\`
function fn (...rest) {}

\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/rest-element.js RestElement\`
...rest
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/static-block.js ClassBody\`
{
    static {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.001,
  "difficulty": 1,
  "effort": 3,
  "length": 3,
  "time": 0.16666666666666666,
  "vocabulary": 2,
  "volume": 3,
}
`;

exports[`test for halstead complexity measures /js/static-block.js ClassDeclaration\`
class A {
    static {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 1.5,
  "effort": 15,
  "length": 5,
  "time": 0.8333333333333334,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /js/static-block.js Program\`
class A {
    static {}
}

\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 1.5,
  "effort": 15,
  "length": 5,
  "time": 0.8333333333333334,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /js/static-block.js StaticBlock\`
static {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 1,
  "effort": 2,
  "length": 2,
  "time": 0.1111111111111111,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/super.js BlockStatement\`
{
        super()
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/super.js BlockStatement\`
{
        super.fn()
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/super.js ClassBody\`
{
    constructor(){
        super()
    }
    fn() {
        super.fn()
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.011201504169791677,
  "difficulty": 2.5,
  "effort": 84.01128127343756,
  "length": 13,
  "time": 4.667293404079865,
  "vocabulary": 6,
  "volume": 33.60451250937503,
}
`;

exports[`test for halstead complexity measures /js/super.js ClassDeclaration\`
class A extends B {
    constructor(){
        super()
    }
    fn() {
        super.fn()
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.01882425920436172,
  "difficulty": 3.5,
  "effort": 197.65472164579808,
  "length": 17,
  "time": 10.980817869211004,
  "vocabulary": 10,
  "volume": 56.472777613085164,
}
`;

exports[`test for halstead complexity measures /js/super.js ExpressionStatement\`
super()
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/super.js ExpressionStatement\`
super.fn()
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/super.js FunctionExpression\`
() {
        super.fn()
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 2,
  "effort": 36.18947501009619,
  "length": 7,
  "time": 2.0105263894497885,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /js/super.js FunctionExpression\`
(){
        super()
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 1.5,
  "effort": 15,
  "length": 5,
  "time": 0.8333333333333334,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /js/super.js MemberExpression\`
super.fn
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/super.js MethodDefinition\`
constructor(){
        super()
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 1,
  "effort": 10,
  "length": 5,
  "time": 0.5555555555555556,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /js/super.js MethodDefinition\`
fn() {
        super.fn()
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.005417832221403845,
  "difficulty": 2.25,
  "effort": 36.57036749447595,
  "length": 7,
  "time": 2.031687083026442,
  "vocabulary": 5,
  "volume": 16.253496664211536,
}
`;

exports[`test for halstead complexity measures /js/super.js Program\`
class A extends B {
    constructor(){
        super()
    }
    fn() {
        super.fn()
    }
}

\` 1`] = `
Object {
  "deliveredBugs": 0.01882425920436172,
  "difficulty": 3.5,
  "effort": 197.65472164579808,
  "length": 17,
  "time": 10.980817869211004,
  "vocabulary": 10,
  "volume": 56.472777613085164,
}
`;

exports[`test for halstead complexity measures /js/super.js Super\`
super
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/switch-statement.js BreakStatement\`
break;
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/switch-statement.js Program\`
switch (key) {
    case value:
        break;

    default:
        break;
}
\` 1`] = `
Object {
  "deliveredBugs": 0.01,
  "difficulty": 3,
  "effort": 90,
  "length": 10,
  "time": 5,
  "vocabulary": 8,
  "volume": 30,
}
`;

exports[`test for halstead complexity measures /js/switch-statement.js SwitchCase\`
case value:
        break;
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/switch-statement.js SwitchCase\`
default:
        break;
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1.5,
  "effort": 7.132331253245202,
  "length": 3,
  "time": 0.396240625180289,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/try-statement.js BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/try-statement.js Program\`
try{}finally{}

\` 1`] = `
Object {
  "deliveredBugs": 0.002113283334294875,
  "difficulty": 1.5,
  "effort": 9.509775004326936,
  "length": 4,
  "time": 0.5283208335737187,
  "vocabulary": 3,
  "volume": 6.339850002884624,
}
`;

exports[`test for halstead complexity measures /js/try-statement.js TryStatement\`
try{}finally{}
\` 1`] = `
Object {
  "deliveredBugs": 0.002113283334294875,
  "difficulty": 1.5,
  "effort": 9.509775004326936,
  "length": 4,
  "time": 0.5283208335737187,
  "vocabulary": 3,
  "volume": 6.339850002884624,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js BinaryExpression\`
1 + 2
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js BinaryExpression\`
typeof 1 + 2
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js ExpressionStatement\`
v = typeof (1 + 2)
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js ExpressionStatement\`
v = typeof 1 + 2
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js ExpressionStatement\`
v = typeof a
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js ExpressionStatement\`
v = typeof typeof a
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 1,
  "effort": 10,
  "length": 5,
  "time": 0.5555555555555556,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js Literal\`
1
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js Literal\`
2
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js Program\`
v = typeof a
v = typeof 1 + 2
v = typeof (1 + 2)
v = typeof typeof a

\` 1`] = `
Object {
  "deliveredBugs": 0.022,
  "difficulty": 5,
  "effort": 330,
  "length": 22,
  "time": 18.333333333333332,
  "vocabulary": 8,
  "volume": 66,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js UnaryExpression\`
typeof (1 + 2)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js UnaryExpression\`
typeof 1
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js UnaryExpression\`
typeof a
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/unary-expression.js UnaryExpression\`
typeof typeof a
\` 1`] = `
Object {
  "deliveredBugs": 0.001,
  "difficulty": 0.5,
  "effort": 1.5,
  "length": 3,
  "time": 0.08333333333333333,
  "vocabulary": 2,
  "volume": 3,
}
`;

exports[`test for halstead complexity measures /js/update-expression.js ExpressionStatement\`
--i
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/update-expression.js ExpressionStatement\`
i++
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/update-expression.js Program\`
i++
--i

\` 1`] = `
Object {
  "deliveredBugs": 0.002113283334294875,
  "difficulty": 2,
  "effort": 12.679700005769249,
  "length": 4,
  "time": 0.7044277780982916,
  "vocabulary": 3,
  "volume": 6.339850002884624,
}
`;

exports[`test for halstead complexity measures /js/with-statement.js BlockStatement\`
{

}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/with-statement.js Program\`
with(window) {

}

\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/with-statement.js WithStatement\`
with(window) {

}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /js/yield-expression.js ArrayExpression\`
[42]
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/yield-expression.js BlockStatement\`
{
    yield 42
    yield * [42]
    yield (42, 1)
}
\` 1`] = `
Object {
  "deliveredBugs": 0.012,
  "difficulty": 6,
  "effort": 216,
  "length": 12,
  "time": 12,
  "vocabulary": 8,
  "volume": 36,
}
`;

exports[`test for halstead complexity measures /js/yield-expression.js ExpressionStatement\`
yield (42, 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /js/yield-expression.js ExpressionStatement\`
yield * [42]
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /js/yield-expression.js ExpressionStatement\`
yield 42
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /js/yield-expression.js FunctionDeclaration\`
function * fn () {
    yield 42
    yield * [42]
    yield (42, 1)
}
\` 1`] = `
Object {
  "deliveredBugs": 0.017716949839399268,
  "difficulty": 5.833333333333334,
  "effort": 310.0466221894872,
  "length": 16,
  "time": 17.2248123438604,
  "vocabulary": 10,
  "volume": 53.1508495181978,
}
`;

exports[`test for halstead complexity measures /js/yield-expression.js Literal\`
1
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/yield-expression.js Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /js/yield-expression.js Program\`
function * fn () {
    yield 42
    yield * [42]
    yield (42, 1)
}

\` 1`] = `
Object {
  "deliveredBugs": 0.017716949839399268,
  "difficulty": 5.833333333333334,
  "effort": 310.0466221894872,
  "length": 16,
  "time": 17.2248123438604,
  "vocabulary": 10,
  "volume": 53.1508495181978,
}
`;

exports[`test for halstead complexity measures /js/yield-expression.js SequenceExpression\`
42, 1
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/abstract-accessor-property.ts ClassBody\`
{
    abstract accessor foo: number
}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/abstract-accessor-property.ts Program\`
abstract class Foo {
    abstract accessor foo: number
}
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 2.5,
  "effort": 67.5,
  "length": 9,
  "time": 3.75,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/abstract-accessor-property.ts TSAbstractAccessorProperty\`
abstract accessor foo: number
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/abstract-accessor-property.ts TSNumberKeyword\`
number
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/abstract-accessor-property.ts TSTypeAnnotation\`
: number
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/accessor-property.ts AccessorProperty\`
accessor bar
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/accessor-property.ts AccessorProperty\`
accessor foo = 2
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/accessor-property.ts ClassBody\`
{
  accessor foo = 2
  accessor bar
}
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1.5,
  "effort": 27.14210625757214,
  "length": 7,
  "time": 1.5078947920873411,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/accessor-property.ts Literal\`
2
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/accessor-property.ts Program\`
class Foo {
  accessor foo = 2
  accessor bar
}
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 2,
  "effort": 54,
  "length": 9,
  "time": 3,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts ClassBody\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts ClassDeclaration\`
abstract class C {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts ClassDeclaration\`
class B implements A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts ClassDeclaration\`
declare class A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts ClassExpression\`
class A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts ClassExpression\`
class B extends A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts Program\`
declare class A {}
class B implements A {}
abstract class C {}
const a = class A {}
const b = class B extends A {}
// const c = abstract class C {}
// const d = declare class D {}

\` 1`] = `
Object {
  "deliveredBugs": 0.03330395746326983,
  "difficulty": 7.2,
  "effort": 719.3654812066284,
  "length": 27,
  "time": 39.964748955923795,
  "vocabulary": 13,
  "volume": 99.91187238980949,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts TSClassImplements\`
A
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts VariableDeclaration\`
const a = class A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts VariableDeclaration\`
const b = class B extends A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2.5,
  "effort": 60,
  "length": 8,
  "time": 3.3333333333333335,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts VariableDeclarator\`
a = class A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/class-declaration-expression.ts VariableDeclarator\`
b = class B extends A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/decorator.ts ClassBody\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/decorator.ts Decorator\`
@D
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/decorator.ts Program\`
@D
class A {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/export-all-declaration.ts ExportAllDeclaration\`
export * from "foo" assert { type: "json" }
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 3,
  "effort": 85.58797503894243,
  "length": 9,
  "time": 4.754887502163468,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/export-all-declaration.ts ExportAllDeclaration\`
export type * as Foo from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2.5,
  "effort": 49.12871113600807,
  "length": 7,
  "time": 2.7293728408893374,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/export-all-declaration.ts ExportAllDeclaration\`
export type * from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 2,
  "effort": 23.21928094887362,
  "length": 5,
  "time": 1.289960052715201,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/export-all-declaration.ts ImportAttribute\`
type: "json"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/export-all-declaration.ts Literal\`
"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/export-all-declaration.ts Literal\`
"json"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/export-all-declaration.ts Program\`
export type * from "foo"
export type * as Foo from "foo"
export * from "foo" assert { type: "json" }

\` 1`] = `
Object {
  "deliveredBugs": 0.025094737505048096,
  "difficulty": 6,
  "effort": 451.7052750908657,
  "length": 21,
  "time": 25.094737505048094,
  "vocabulary": 12,
  "volume": 75.28421251514429,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportNamedDeclaration\`
export {a} from "foo" assert { type: "json" }
\` 1`] = `
Object {
  "deliveredBugs": 0.010566416671474375,
  "difficulty": 2.5,
  "effort": 79.24812503605781,
  "length": 10,
  "time": 4.402673613114323,
  "vocabulary": 9,
  "volume": 31.699250014423125,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportNamedDeclaration\`
export {type d, e, g}
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 2,
  "effort": 44.91767875292167,
  "length": 8,
  "time": 2.495426597384537,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportNamedDeclaration\`
export type {b as c} from "foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2.5,
  "effort": 60,
  "length": 8,
  "time": 3.3333333333333335,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportNamedDeclaration\`
export type {d, e}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportNamedDeclaration\`
export type {d}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportNamedDeclaration\`
export type f = number
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportSpecifier\`
a
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportSpecifier\`
b as c
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportSpecifier\`
d
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportSpecifier\`
e
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportSpecifier\`
g
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ExportSpecifier\`
type d
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts ImportAttribute\`
type: "json"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts Literal\`
"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts Literal\`
"json"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts Program\`
export {a} from "foo" assert { type: "json" }
export type {b as c} from "foo"

export type {d}
export type {d, e}
export {type d, e, g}

export type f = number

\` 1`] = `
Object {
  "deliveredBugs": 0.05906635063012729,
  "difficulty": 6.136363636363636,
  "effort": 1087.3578184182522,
  "length": 41,
  "time": 60.4087676899029,
  "vocabulary": 20,
  "volume": 177.19905189038187,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts TSNumberKeyword\`
number
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/export-named-declaration.ts TSTypeAliasDeclaration\`
type f = number
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/function-declaration.ts BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/function-declaration.ts Program\`
declare function fn1() {}

\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 2,
  "effort": 23.21928094887362,
  "length": 5,
  "time": 1.289960052715201,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/function-declaration.ts TSDeclareFunction\`
declare function fn1() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 2,
  "effort": 23.21928094887362,
  "length": 5,
  "time": 1.289960052715201,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/import-declaration.ts ImportAttribute\`
type: "json"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/import-declaration.ts ImportDeclaration\`
import {type B} from "bar"
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/import-declaration.ts ImportDeclaration\`
import A from "foo" assert { type: "json" }
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/import-declaration.ts ImportDefaultSpecifier\`
A
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/import-declaration.ts ImportSpecifier\`
type B
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/import-declaration.ts Literal\`
"bar"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/import-declaration.ts Literal\`
"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/import-declaration.ts Literal\`
"json"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/import-declaration.ts Program\`
import A from "foo" assert { type: "json" }
import {type B} from "bar"

\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 3,
  "effort": 161.32331253245206,
  "length": 15,
  "time": 8.962406251802893,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/import-expression.ts ExpressionStatement\`
import("foo", { assert: { type: "json" } })
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 2.5,
  "effort": 87.1729375396636,
  "length": 11,
  "time": 4.842940974425755,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/import-expression.ts Literal\`
"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/import-expression.ts Literal\`
"json"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/import-expression.ts ObjectExpression\`
{ assert: { type: "json" } }
\` 1`] = `
Object {
  "deliveredBugs": 0.005417832221403845,
  "difficulty": 1,
  "effort": 16.253496664211536,
  "length": 7,
  "time": 0.9029720369006409,
  "vocabulary": 5,
  "volume": 16.253496664211536,
}
`;

exports[`test for halstead complexity measures /ts/import-expression.ts ObjectExpression\`
{ type: "json" }
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/import-expression.ts Program\`
import("foo", { assert: { type: "json" } })

\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 2.5,
  "effort": 87.1729375396636,
  "length": 11,
  "time": 4.842940974425755,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/import-expression.ts Property\`
assert: { type: "json" }
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 1,
  "effort": 13.931568569324174,
  "length": 6,
  "time": 0.7739760316291208,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /ts/import-expression.ts Property\`
type: "json"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts BinaryExpression\`
b + (c + d)
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 1,
  "effort": 13.931568569324174,
  "length": 6,
  "time": 0.7739760316291208,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /ts/input.ts BinaryExpression\`
b + c
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts BinaryExpression\`
b + c + d
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/input.ts BinaryExpression\`
c + d
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts ClassBody\`
{
    abstract m(this: Abs, a: number): void {}

    abstract me(this: Abs, a: string): void

    static abstract sm(this: Abs, a: boolean): void {}

    static abstract sme(this: Abs, a: null): void

    abstract x: number
    // abstract xv: number = 42

    static abstract sx: number
    // static abstract sxv: number = 42
}
\` 1`] = `
Object {
  "deliveredBugs": 0.08931984729433882,
  "difficulty": 6,
  "effort": 1607.7572512980987,
  "length": 62,
  "time": 89.31984729433881,
  "vocabulary": 20,
  "volume": 267.95954188301647,
}
`;

exports[`test for halstead complexity measures /ts/input.ts ClassBody\`
{
    constructor(private a)
}
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/input.ts ClassDeclaration\`
abstract class Abs {
    abstract m(this: Abs, a: number): void {}

    abstract me(this: Abs, a: string): void

    static abstract sm(this: Abs, a: boolean): void {}

    static abstract sme(this: Abs, a: null): void

    abstract x: number
    // abstract xv: number = 42

    static abstract sx: number
    // static abstract sxv: number = 42
}
\` 1`] = `
Object {
  "deliveredBugs": 0.09516687749353982,
  "difficulty": 7.250000000000001,
  "effort": 2069.879585484491,
  "length": 65,
  "time": 114.99331030469395,
  "vocabulary": 21,
  "volume": 285.50063248061946,
}
`;

exports[`test for halstead complexity measures /ts/input.ts ClassDeclaration\`
class Class {
    constructor(private a)
}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/input.ts ClassDeclaration\`
class IMPL implements T, T2 {}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/input.ts ExpressionStatement\`
a = b + (c + d)
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/input.ts ExpressionStatement\`
a = b + c + d
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/input.ts FunctionDeclaration\`
function fn(): void {}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts FunctionExpression\`
(this: Abs, a: boolean): void {}
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2.5,
  "effort": 99.6578428466209,
  "length": 12,
  "time": 5.536546824812272,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/input.ts FunctionExpression\`
(this: Abs, a: number): void {}
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2.5,
  "effort": 99.6578428466209,
  "length": 12,
  "time": 5.536546824812272,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/input.ts Literal\`
"C"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts Literal\`
"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts Literal\`
42n
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts MethodDefinition\`
constructor(private a)
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts Program\`
a = b + c + d
a = b + (c + d)

abstract class Abs {
    abstract m(this: Abs, a: number): void {}

    abstract me(this: Abs, a: string): void

    static abstract sm(this: Abs, a: boolean): void {}

    static abstract sme(this: Abs, a: null): void

    abstract x: number
    // abstract xv: number = 42

    static abstract sx: number
    // static abstract sxv: number = 42
}
const a:any=42, b: bigint = 42n
type T = any
type T2 = {}
type T3 = { [k: string ]: void };
type T4 = T3[string]
type T5 = {key:number}
type A = T[]
type R = Array<string>
interface CallSignature { <T> (e: T): R }
interface ConstructSignature { new <T> (e: T): R }
class IMPL implements T, T2 {}
type ConditionalType<T> = T extends Foo ? T : U
type ConstructorType = new ()=>void
type FunctionType = ()=>void
function fn(a: unknown): void;
function fn(a: unknown, b: never): void;
function fn(): void {}
enum Enum {
    B,
    C = "C"
}
export = foo
import a = require("foo")
type ImportType = import("foo").B
type UnpackedPromise<T=string> = T extends Promise<infer U>
  ? U
  : T
interface I extends E implements T {}
type IntersectionType = A & B
type UnionType = A | B
type Uppercase<S extends string> = intrinsic;
type MappedType = {[key in foo]: bar}
type Required<T> = {
    [P in keyof T]-?: T[P];
};
type Readonly<T> = {
    readonly [P in keyof T]: T[P];
};
type MethodSignature = {
    fn(arg: A): R | null;
}
declare global { }
declare module "foo" { }
export
as
namespace
a
;
type NamedTuple = [a: symbol, ...b: string[]]
const foo = bar!
type OptionalType = [number?]
class Class {
    constructor(private a)
}
type QualifiedName = A.B
type TemplateLiteralType = \`A\${B}C\`
const typeAssertion = <string>"foo"
type Keyof = keyof T
type Typeof = typeof typeAssertion
type TypePredicate = (v:any)=>v is T

\` 1`] = `
Object {
  "deliveredBugs": 0.9696378592457139,
  "difficulty": 46.00000000000001,
  "effort": 133810.02457590852,
  "length": 419,
  "time": 7433.89025421714,
  "vocabulary": 123,
  "volume": 2908.9135777371416,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSAbstractMethodDefinition\`
abstract m(this: Abs, a: number): void {}
\` 1`] = `
Object {
  "deliveredBugs": 0.01499087034742829,
  "difficulty": 2.5,
  "effort": 112.43152760571218,
  "length": 13,
  "time": 6.246195978095121,
  "vocabulary": 11,
  "volume": 44.97261104228487,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSAbstractMethodDefinition\`
abstract me(this: Abs, a: string): void
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSAbstractMethodDefinition\`
static abstract sm(this: Abs, a: boolean): void {}
\` 1`] = `
Object {
  "deliveredBugs": 0.016729825003365395,
  "difficulty": 3,
  "effort": 150.56842503028855,
  "length": 14,
  "time": 8.364912501682698,
  "vocabulary": 12,
  "volume": 50.18947501009619,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSAbstractMethodDefinition\`
static abstract sme(this: Abs, a: null): void
\` 1`] = `
Object {
  "deliveredBugs": 0.01499087034742829,
  "difficulty": 2.5,
  "effort": 112.43152760571218,
  "length": 13,
  "time": 6.246195978095121,
  "vocabulary": 11,
  "volume": 44.97261104228487,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSAbstractPropertyDefinition\`
abstract x: number
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSAbstractPropertyDefinition\`
static abstract sx: number
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSAnyKeyword\`
any
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSArrayType\`
T[]
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSArrayType\`
string[]
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSBigIntKeyword\`
bigint
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSBooleanKeyword\`
boolean
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSCallSignatureDeclaration\`
<T> (e: T): R
\` 1`] = `
Object {
  "deliveredBugs": 0.006893233335256416,
  "difficulty": 2,
  "effort": 41.3594000115385,
  "length": 8,
  "time": 2.2977444450854723,
  "vocabulary": 6,
  "volume": 20.67970000576925,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSClassImplements\`
T2
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSConditionalType\`
T extends Foo ? T : U
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 1.3333333333333333,
  "effort": 18.575424759098897,
  "length": 6,
  "time": 1.0319680421721609,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSConditionalType\`
T extends Promise<infer U>
  ? U
  : T
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 3.3333333333333335,
  "effort": 84.22064766172814,
  "length": 9,
  "time": 4.678924870096008,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSConstructSignatureDeclaration\`
new <T> (e: T): R
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 2.6666666666666665,
  "effort": 67.3765181293825,
  "length": 9,
  "time": 3.743139896076806,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSConstructorType\`
new ()=>void
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSDeclareFunction\`
function fn(a: unknown): void;
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSDeclareFunction\`
function fn(a: unknown, b: never): void;
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSEmptyBodyFunctionExpression\`
(private a)
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSEmptyBodyFunctionExpression\`
(this: Abs, a: null): void
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 2,
  "effort": 69.73835003173087,
  "length": 11,
  "time": 3.874352779540604,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSEmptyBodyFunctionExpression\`
(this: Abs, a: string): void
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 2,
  "effort": 69.73835003173087,
  "length": 11,
  "time": 3.874352779540604,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSEnumDeclaration\`
enum Enum {
    B,
    C = "C"
}
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2,
  "effort": 48,
  "length": 8,
  "time": 2.6666666666666665,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSEnumMember\`
B
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSEnumMember\`
C = "C"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSExportAssignment\`
export = foo
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSExternalModuleReference\`
require("foo")
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSFunctionType\`
()=>void
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSFunctionType\`
(v:any)=>v is T
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 2.6666666666666665,
  "effort": 59.89023833722889,
  "length": 8,
  "time": 3.327235463179383,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSImportEqualsDeclaration\`
import a = require("foo")
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSImportType\`
import("foo").B
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSIndexSignature\`
[k: string ]: void
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 1,
  "effort": 13.931568569324174,
  "length": 6,
  "time": 0.7739760316291208,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSIndexedAccessType\`
T[P]
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSIndexedAccessType\`
T3[string]
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSInferType\`
infer U
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSInterfaceBody\`
{ <T> (e: T): R }
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 2.6666666666666665,
  "effort": 67.3765181293825,
  "length": 9,
  "time": 3.743139896076806,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSInterfaceBody\`
{ new <T> (e: T): R }
\` 1`] = `
Object {
  "deliveredBugs": 0.01,
  "difficulty": 3.333333333333333,
  "effort": 99.99999999999999,
  "length": 10,
  "time": 5.5555555555555545,
  "vocabulary": 8,
  "volume": 30,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSInterfaceDeclaration\`
interface CallSignature { <T> (e: T): R }
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 3.125,
  "effort": 108.9661719245795,
  "length": 11,
  "time": 6.053676218032194,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSInterfaceDeclaration\`
interface ConstructSignature { new <T> (e: T): R }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 3.75,
  "effort": 149.48676426993134,
  "length": 12,
  "time": 8.304820237218408,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSInterfaceDeclaration\`
interface I extends E implements T {}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSInterfaceHeritage\`
E
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSIntersectionType\`
A & B
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSIntrinsicKeyword\`
intrinsic
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSMappedType\`
{
    [P in keyof T]-?: T[P];
}
\` 1`] = `
Object {
  "deliveredBugs": 0.012679700005769252,
  "difficulty": 7,
  "effort": 266.27370012115426,
  "length": 12,
  "time": 14.792983340064126,
  "vocabulary": 9,
  "volume": 38.03910001730775,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSMappedType\`
{
    readonly [P in keyof T]: T[P];
}
\` 1`] = `
Object {
  "deliveredBugs": 0.011,
  "difficulty": 6,
  "effort": 198,
  "length": 11,
  "time": 11,
  "vocabulary": 8,
  "volume": 33,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSMappedType\`
{[key in foo]: bar}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSMethodSignature\`
fn(arg: A): R | null;
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 1.5,
  "effort": 40.5,
  "length": 9,
  "time": 2.25,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSModuleBlock\`
{ }
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSModuleDeclaration\`
declare global { }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSModuleDeclaration\`
declare module "foo" { }
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSNamedTupleMember\`
a: symbol
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSNamedTupleMember\`
b: string[]
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSNamespaceExportDeclaration\`
export
as
namespace
a
;
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSNeverKeyword\`
never
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSNonNullExpression\`
bar!
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSNullKeyword\`
null
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSNumberKeyword\`
number
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSOptionalType\`
number?
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSParameterProperty\`
private a
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSPropertySignature\`
key:number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSRestType\`
...b: string[]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSStringKeyword\`
string
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSSymbolKeyword\`
symbol
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTemplateLiteralType\`
\`A\${B}C\`
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0,
  "effort": 0,
  "length": 3,
  "time": 0,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTupleType\`
[a: symbol, ...b: string[]]
\` 1`] = `
Object {
  "deliveredBugs": 0.01,
  "difficulty": 2,
  "effort": 60,
  "length": 10,
  "time": 3.3333333333333335,
  "vocabulary": 8,
  "volume": 30,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTupleType\`
[number?]
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type A = T[]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type ConditionalType<T> = T extends Foo ? T : U
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 3.75,
  "effort": 130.75940630949538,
  "length": 11,
  "time": 7.264411461638632,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type ConstructorType = new ()=>void
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2.5,
  "effort": 49.12871113600807,
  "length": 7,
  "time": 2.7293728408893374,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type FunctionType = ()=>void
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type ImportType = import("foo").B
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2.5,
  "effort": 60,
  "length": 8,
  "time": 3.3333333333333335,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type IntersectionType = A & B
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type Keyof = keyof T
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type MappedType = {[key in foo]: bar}
\` 1`] = `
Object {
  "deliveredBugs": 0.01107309364962454,
  "difficulty": 3,
  "effort": 99.65784284662087,
  "length": 10,
  "time": 5.5365468248122705,
  "vocabulary": 10,
  "volume": 33.219280948873624,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type MethodSignature = {
    fn(arg: A): R | null;
}
\` 1`] = `
Object {
  "deliveredBugs": 0.015534837503125011,
  "difficulty": 3,
  "effort": 139.8135375281251,
  "length": 13,
  "time": 7.767418751562506,
  "vocabulary": 12,
  "volume": 46.604512509375034,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type NamedTuple = [a: symbol, ...b: string[]]
\` 1`] = `
Object {
  "deliveredBugs": 0.01499087034742829,
  "difficulty": 3,
  "effort": 134.9178331268546,
  "length": 13,
  "time": 7.495435173714144,
  "vocabulary": 11,
  "volume": 44.97261104228487,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type OptionalType = [number?]
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type QualifiedName = A.B
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type R = Array<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type Readonly<T> = {
    readonly [P in keyof T]: T[P];
};
\` 1`] = `
Object {
  "deliveredBugs": 0.01911980000384617,
  "difficulty": 9,
  "effort": 516.2346001038466,
  "length": 16,
  "time": 28.679700005769252,
  "vocabulary": 12,
  "volume": 57.359400011538504,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type Required<T> = {
    [P in keyof T]-?: T[P];
};
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 10,
  "effort": 629.0747520839857,
  "length": 17,
  "time": 34.9485973379992,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type T = any
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type T2 = {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type T3 = { [k: string ]: void };
\` 1`] = `
Object {
  "deliveredBugs": 0.010566416671474375,
  "difficulty": 2.5,
  "effort": 79.24812503605781,
  "length": 10,
  "time": 4.402673613114323,
  "vocabulary": 9,
  "volume": 31.699250014423125,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type T4 = T3[string]
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type T5 = {key:number}
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type TemplateLiteralType = \`A\${B}C\`
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1,
  "effort": 15.509775004326936,
  "length": 6,
  "time": 0.861654166907052,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type TypePredicate = (v:any)=>v is T
\` 1`] = `
Object {
  "deliveredBugs": 0.012180403014586996,
  "difficulty": 3.75,
  "effort": 137.0295339141037,
  "length": 11,
  "time": 7.6127518841168715,
  "vocabulary": 10,
  "volume": 36.541209043760986,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type Typeof = typeof typeAssertion
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type UnionType = A | B
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type UnpackedPromise<T=string> = T extends Promise<infer U>
  ? U
  : T
\` 1`] = `
Object {
  "deliveredBugs": 0.018450301966065587,
  "difficulty": 4.800000000000001,
  "effort": 265.6843483113445,
  "length": 16,
  "time": 14.760241572852472,
  "vocabulary": 11,
  "volume": 55.350905898196764,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAliasDeclaration\`
type Uppercase<S extends string> = intrinsic;
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2,
  "effort": 48,
  "length": 8,
  "time": 2.6666666666666665,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: A
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: Abs
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: R
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: R | null
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: T
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: bigint
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: boolean
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: never
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: null
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: number
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: string
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: unknown
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
: void
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
:any
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
:number
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
=>v is T
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAnnotation\`
=>void
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeAssertion\`
<string>"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeLiteral\`
{
    fn(arg: A): R | null;
}
\` 1`] = `
Object {
  "deliveredBugs": 0.010566416671474375,
  "difficulty": 2,
  "effort": 63.39850002884625,
  "length": 10,
  "time": 3.5221388904914583,
  "vocabulary": 9,
  "volume": 31.699250014423125,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeLiteral\`
{ [k: string ]: void }
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1.5,
  "effort": 27.14210625757214,
  "length": 7,
  "time": 1.5078947920873411,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeLiteral\`
{key:number}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeOperator\`
keyof T
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeParameter\`
P in keyof T
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeParameter\`
S extends string
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeParameter\`
T=string
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeParameter\`
key in foo
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeParameterDeclaration\`
<S extends string>
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeParameterDeclaration\`
<T=string>
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeParameterDeclaration\`
<T>
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeParameterInstantiation\`
<infer U>
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeParameterInstantiation\`
<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypePredicate\`
v is T
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeQuery\`
typeof typeAssertion
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
A
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
A.B
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
Abs
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
Array<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
Foo
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
P
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
Promise<infer U>
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
R
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
T
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
T3
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
U
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
bar
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSTypeReference\`
foo
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSUnionType\`
A | B
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSUnionType\`
R | null
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSUnknownKeyword\`
unknown
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TSVoidKeyword\`
void
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TemplateElement\`
\`A\${
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts TemplateElement\`
}C\`
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/input.ts VariableDeclaration\`
const a:any=42, b: bigint = 42n
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/input.ts VariableDeclaration\`
const foo = bar!
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/input.ts VariableDeclaration\`
const typeAssertion = <string>"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/input.ts VariableDeclarator\`
a:any=42
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/input.ts VariableDeclarator\`
b: bigint = 42n
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/input.ts VariableDeclarator\`
foo = bar!
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/input.ts VariableDeclarator\`
typeAssertion = <string>"foo"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts BlockStatement\`
{
    return { value };
}
\` 1`] = `
Object {
  "deliveredBugs": 0.002113283334294875,
  "difficulty": 1,
  "effort": 6.339850002884624,
  "length": 4,
  "time": 0.3522138890491458,
  "vocabulary": 3,
  "volume": 6.339850002884624,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts CallExpression\`
makeStringBox('abc')
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts EmptyStatement\`
;
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts FunctionDeclaration\`
function makeBox<T>(value: T) {
    return { value };
}
\` 1`] = `
Object {
  "deliveredBugs": 0.012679700005769252,
  "difficulty": 5,
  "effort": 190.19550008653877,
  "length": 12,
  "time": 10.566416671474377,
  "vocabulary": 9,
  "volume": 38.03910001730775,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts Literal\`
'abc'
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts NewExpression\`
new ErrorMap()
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts ObjectExpression\`
{ value }
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts Program\`
function makeBox<T>(value: T) {
    return { value };
};

// TODO: https://github.com/microsoft/TypeScript/issues/50161#issuecomment-1249500875
const makeStringBox = /*@__IGNORE__*/(makeBox/*@__IGNORE__*/)<string>;  // (value: string) => { value: string }
const stringBox = makeStringBox('abc');  // { value: string }

const ErrorMap = Map<string, Error>;  // new () => Map<string, Error>
const errorMap = new ErrorMap();  // Map<string, Error>

\` 1`] = `
Object {
  "deliveredBugs": 0.05797261104228486,
  "difficulty": 8.5,
  "effort": 1478.301581578264,
  "length": 39,
  "time": 82.12786564323689,
  "vocabulary": 22,
  "volume": 173.9178331268546,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts Property\`
value
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts ReturnStatement\`
return { value };
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts TSInstantiationExpression\`
(makeBox/*@__IGNORE__*/)<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts TSInstantiationExpression\`
Map<string, Error>
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts TSStringKeyword\`
string
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts TSTypeAnnotation\`
: T
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts TSTypeParameter\`
T
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts TSTypeParameterDeclaration\`
<T>
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts TSTypeParameterInstantiation\`
<string, Error>
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts TSTypeParameterInstantiation\`
<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts TSTypeReference\`
Error
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts VariableDeclaration\`
const ErrorMap = Map<string, Error>;
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2,
  "effort": 48,
  "length": 8,
  "time": 2.6666666666666665,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts VariableDeclaration\`
const errorMap = new ErrorMap();
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts VariableDeclaration\`
const makeStringBox = /*@__IGNORE__*/(makeBox/*@__IGNORE__*/)<string>;
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts VariableDeclaration\`
const stringBox = makeStringBox('abc');
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts VariableDeclarator\`
ErrorMap = Map<string, Error>
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 1.5,
  "effort": 29.47722668160484,
  "length": 7,
  "time": 1.6376237045336022,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts VariableDeclarator\`
errorMap = new ErrorMap()
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts VariableDeclarator\`
makeStringBox = /*@__IGNORE__*/(makeBox/*@__IGNORE__*/)<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/instantiation-expression.ts VariableDeclarator\`
stringBox = makeStringBox('abc')
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/method-definition.ts BlockStatement\`
{}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/method-definition.ts ClassBody\`
{
    public a () {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 1.5,
  "effort": 15,
  "length": 5,
  "time": 0.8333333333333334,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/method-definition.ts FunctionExpression\`
() {}
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1.5,
  "effort": 7.132331253245202,
  "length": 3,
  "time": 0.396240625180289,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/method-definition.ts MethodDefinition\`
public a () {}
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1.5,
  "effort": 12,
  "length": 4,
  "time": 0.6666666666666666,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/method-definition.ts Program\`
class A {
    public a () {}
}
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 2,
  "effort": 36.18947501009619,
  "length": 7,
  "time": 2.0105263894497885,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts ArrayExpression\`
[0, 0, 255]
\` 1`] = `
Object {
  "deliveredBugs": 0.004,
  "difficulty": 1.5,
  "effort": 18,
  "length": 6,
  "time": 1,
  "vocabulary": 4,
  "volume": 12,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts ArrayExpression\`
[255, 0, 0]
\` 1`] = `
Object {
  "deliveredBugs": 0.004,
  "difficulty": 1.5,
  "effort": 18,
  "length": 6,
  "time": 1,
  "vocabulary": 4,
  "volume": 12,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts Literal\`
"#00ff00"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts Literal\`
0
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts Literal\`
255
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts ObjectExpression\`
{
    red: [255, 0, 0],
    green: "#00ff00",
    blue: [0, 0, 255]
}
\` 1`] = `
Object {
  "deliveredBugs": 0.024360806029173992,
  "difficulty": 3.3333333333333335,
  "effort": 243.60806029173992,
  "length": 22,
  "time": 13.533781127318884,
  "vocabulary": 10,
  "volume": 73.08241808752197,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts Program\`
type Colors = "red" | "green" | "blue";

type RGB = [red: number, green: number, blue: number];

const palette = {
    red: [255, 0, 0],
    green: "#00ff00",
    blue: [0, 0, 255]
} satisfies Record<Colors, string | RGB>;

\` 1`] = `
Object {
  "deliveredBugs": 0.08668531554246152,
  "difficulty": 8.666666666666668,
  "effort": 2253.818204104,
  "length": 56,
  "time": 125.21212245022222,
  "vocabulary": 25,
  "volume": 260.05594662738457,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts Property\`
blue: [0, 0, 255]
\` 1`] = `
Object {
  "deliveredBugs": 0.006893233335256416,
  "difficulty": 2,
  "effort": 41.3594000115385,
  "length": 8,
  "time": 2.2977444450854723,
  "vocabulary": 6,
  "volume": 20.67970000576925,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts Property\`
green: "#00ff00"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts Property\`
red: [255, 0, 0]
\` 1`] = `
Object {
  "deliveredBugs": 0.006893233335256416,
  "difficulty": 2,
  "effort": 41.3594000115385,
  "length": 8,
  "time": 2.2977444450854723,
  "vocabulary": 6,
  "volume": 20.67970000576925,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSLiteralType\`
"blue"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSLiteralType\`
"green"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSLiteralType\`
"red"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSNamedTupleMember\`
blue: number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSNamedTupleMember\`
green: number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSNamedTupleMember\`
red: number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSNumberKeyword\`
number
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSSatisfiesExpression\`
{
    red: [255, 0, 0],
    green: "#00ff00",
    blue: [0, 0, 255]
} satisfies Record<Colors, string | RGB>
\` 1`] = `
Object {
  "deliveredBugs": 0.040874628412503396,
  "difficulty": 4.8999999999999995,
  "effort": 600.8570376637999,
  "length": 30,
  "time": 33.38094653687777,
  "vocabulary": 17,
  "volume": 122.6238852375102,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSStringKeyword\`
string
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSTupleType\`
[red: number, green: number, blue: number]
\` 1`] = `
Object {
  "deliveredBugs": 0.011229419688230418,
  "difficulty": 2.25,
  "effort": 75.79858289555531,
  "length": 12,
  "time": 4.2110323830864065,
  "vocabulary": 7,
  "volume": 33.68825906469125,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSTypeAliasDeclaration\`
type Colors = "red" | "green" | "blue";
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSTypeAliasDeclaration\`
type RGB = [red: number, green: number, blue: number];
\` 1`] = `
Object {
  "deliveredBugs": 0.016609640474436815,
  "difficulty": 3.5,
  "effort": 174.40122498158655,
  "length": 15,
  "time": 9.688956943421475,
  "vocabulary": 10,
  "volume": 49.82892142331044,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSTypeParameterInstantiation\`
<Colors, string | RGB>
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSTypeReference\`
Colors
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSTypeReference\`
RGB
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSTypeReference\`
Record<Colors, string | RGB>
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 1.5,
  "effort": 29.47722668160484,
  "length": 7,
  "time": 1.6376237045336022,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSUnionType\`
"red" | "green" | "blue"
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts TSUnionType\`
string | RGB
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts VariableDeclaration\`
const palette = {
    red: [255, 0, 0],
    green: "#00ff00",
    blue: [0, 0, 255]
} satisfies Record<Colors, string | RGB>;
\` 1`] = `
Object {
  "deliveredBugs": 0.04754120904376099,
  "difficulty": 6.136363636363636,
  "effort": 875.1904392146909,
  "length": 33,
  "time": 48.62169106748283,
  "vocabulary": 20,
  "volume": 142.62362713128297,
}
`;

exports[`test for halstead complexity measures /ts/satisfies-operators.ts VariableDeclarator\`
palette = {
    red: [255, 0, 0],
    green: "#00ff00",
    blue: [0, 0, 255]
} satisfies Record<Colors, string | RGB>
\` 1`] = `
Object {
  "deliveredBugs": 0.04531122681006491,
  "difficulty": 5.454545454545454,
  "effort": 741.456438710153,
  "length": 32,
  "time": 41.19202437278628,
  "vocabulary": 19,
  "volume": 135.93368043019473,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ArrayExpression\`
[]
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ArrowFunctionExpression\`
(node: TSESTree.Node, parent: TSESTree.Node | null) => {
            const extract = EXTRACT_TOKENS[node.type] as any
            if (
                extract &&
                Object.prototype.hasOwnProperty.call(EXTRACT_TOKENS, node.type)
            ) {
                extract.call(context, node, parent)
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.08241805003750013,
  "difficulty": 11.607142857142858,
  "effort": 2869.914242377237,
  "length": 52,
  "time": 159.4396801320687,
  "vocabulary": 27,
  "volume": 247.25415011250038,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ArrowFunctionExpression\`
(spec) => spec.type === AST_NODE_TYPES.ImportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1.875,
  "effort": 47.374114309722074,
  "length": 9,
  "time": 2.6318952394290043,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts AssignmentPattern\`
count = 1
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
"bigint" in node
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
"regex" in node
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
count === 1
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
getPrecedence(node) > getPrecedence(node.argument)
\` 1`] = `
Object {
  "deliveredBugs": 0.007754887502163467,
  "difficulty": 2.5,
  "effort": 58.161656266226004,
  "length": 9,
  "time": 3.2312031259014447,
  "vocabulary": 6,
  "volume": 23.264662506490403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
getPrecedence(node) > getPrecedence(node.object)
\` 1`] = `
Object {
  "deliveredBugs": 0.007754887502163467,
  "difficulty": 2.5,
  "effort": 58.161656266226004,
  "length": 9,
  "time": 3.2312031259014447,
  "vocabulary": 6,
  "volume": 23.264662506490403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
getPrecedence(node) >= getPrecedence(node.argument)
\` 1`] = `
Object {
  "deliveredBugs": 0.007754887502163467,
  "difficulty": 2.5,
  "effort": 58.161656266226004,
  "length": 9,
  "time": 3.2312031259014447,
  "vocabulary": 6,
  "volume": 23.264662506490403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
getPrecedence(node) >= getPrecedence(node.callee)
\` 1`] = `
Object {
  "deliveredBugs": 0.007754887502163467,
  "difficulty": 2.5,
  "effort": 58.161656266226004,
  "length": 9,
  "time": 3.2312031259014447,
  "vocabulary": 6,
  "volume": 23.264662506490403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
getPrecedence(node) >= getPrecedence(node.right)
\` 1`] = `
Object {
  "deliveredBugs": 0.007754887502163467,
  "difficulty": 2.5,
  "effort": 58.161656266226004,
  "length": 9,
  "time": 3.2312031259014447,
  "vocabulary": 6,
  "volume": 23.264662506490403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
getPrecedence(node) >= getPrecedence(node.test)
\` 1`] = `
Object {
  "deliveredBugs": 0.007754887502163467,
  "difficulty": 2.5,
  "effort": 58.161656266226004,
  "length": 9,
  "time": 3.2312031259014447,
  "vocabulary": 6,
  "volume": 23.264662506490403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
index < count
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
index < parent.quasis.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 1.5,
  "effort": 40.5,
  "length": 9,
  "time": 2.25,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
index > 0
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.arguments.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.body.type === AST_NODE_TYPES.ObjectExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1,
  "effort": 25.26619429851844,
  "length": 9,
  "time": 1.403677461028802,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.declarations.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.elementTypes.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.elements.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.exportKind === "type"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.expressions.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.extends.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.implements.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.importKind === "type"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.kind === "get"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.kind === "set"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.local.name !== node.exported.name
\` 1`] = `
Object {
  "deliveredBugs": 0.009478195835977574,
  "difficulty": 1.5,
  "effort": 42.65188126189908,
  "length": 11,
  "time": 2.369548958994393,
  "vocabulary": 6,
  "volume": 28.43458750793272,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.local.name !== node.imported.name
\` 1`] = `
Object {
  "deliveredBugs": 0.009478195835977574,
  "difficulty": 1.5,
  "effort": 42.65188126189908,
  "length": 11,
  "time": 2.369548958994393,
  "vocabulary": 6,
  "volume": 28.43458750793272,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.members.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "!="
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "!=="
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "%"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "&"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "&&"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "*"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "**"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "+"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "/"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "<"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "<<"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "<="
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "=="
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "==="
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === ">"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === ">="
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === ">>"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === ">>>"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "??"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "^"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "|"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "||"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "-"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "in"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.operator === "instanceof"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.params.length !== 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.params.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.params[0].type !== AST_NODE_TYPES.Identifier
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 1.5,
  "effort": 52.303762523798156,
  "length": 11,
  "time": 2.905764584655453,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.properties.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.specifiers.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.ArrowFunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.AssignmentExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.AwaitExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.BinaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.CallExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.ChainExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.ConditionalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.ImportExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.LogicalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.MemberExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.NewExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.SequenceExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.TSAsExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.UnaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.UpdateExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.type === AST_NODE_TYPES.YieldExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
node.types.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.exported === node
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.imported.name === node.name
\` 1`] = `
Object {
  "deliveredBugs": 0.007754887502163467,
  "difficulty": 1.25,
  "effort": 29.080828133113002,
  "length": 9,
  "time": 1.6156015629507223,
  "vocabulary": 6,
  "volume": 23.264662506490403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.local === node
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.local.name === node.name
\` 1`] = `
Object {
  "deliveredBugs": 0.007754887502163467,
  "difficulty": 1.25,
  "effort": 29.080828133113002,
  "length": 9,
  "time": 1.6156015629507223,
  "vocabulary": 6,
  "volume": 23.264662506490403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.quasis.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.returnType === node
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type !== AST_NODE_TYPES.MethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type !== AST_NODE_TYPES.Property
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type === AST_NODE_TYPES.ExportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type === AST_NODE_TYPES.ImportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type === AST_NODE_TYPES.Property
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type === AST_NODE_TYPES.TSConstructorType
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type === AST_NODE_TYPES.TSFunctionType
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type === AST_NODE_TYPES.TSMappedType
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type === AST_NODE_TYPES.TSTemplateLiteralType
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type === AST_NODE_TYPES.TSTypePredicate
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.type === AST_NODE_TYPES.TemplateLiteral
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.typeParameter === node
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
parent.value === node
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
spec.type === AST_NODE_TYPES.ImportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
typeof node.optional === "string"
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BinaryExpression\`
typeof node.readonly === "string"
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                close = "\${"
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                extract.call(context, node, parent)
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.010566416671474375,
  "difficulty": 2,
  "effort": 63.39850002884625,
  "length": 10,
  "time": 3.5221388904914583,
  "vocabulary": 9,
  "volume": 31.699250014423125,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                open = "}"
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                return
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 1,
  "effort": 2,
  "length": 2,
  "time": 0.1111111111111111,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                this.operators.add("=>")
                return
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 2,
  "effort": 54,
  "length": 9,
  "time": 3,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                this.operators.add("[]")
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                this.operators.add("extends")
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                this.operators.add("in")
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                this.operators.add("type")
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                this.operators.add(node.optional)
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.01,
  "difficulty": 1.5,
  "effort": 45,
  "length": 10,
  "time": 2.5,
  "vocabulary": 8,
  "volume": 30,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                this.operators.add(node.readonly)
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.01,
  "difficulty": 1.5,
  "effort": 45,
  "length": 10,
  "time": 2.5,
  "vocabulary": 8,
  "volume": 30,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
                this.total.push(e)
                this.distinct.add(e)
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.01584962500721156,
  "difficulty": 2,
  "effort": 95.09775004326937,
  "length": 15,
  "time": 5.2832083357371875,
  "vocabulary": 9,
  "volume": 47.548875021634686,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            // It cannot actually be used.
            this.operators.add("*")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            const extract = EXTRACT_TOKENS[node.type] as any
            if (
                extract &&
                Object.prototype.hasOwnProperty.call(EXTRACT_TOKENS, node.type)
            ) {
                extract.call(context, node, parent)
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.05417191488093805,
  "difficulty": 8.181818181818182,
  "effort": 1329.6742743502975,
  "length": 37,
  "time": 73.87079301946098,
  "vocabulary": 21,
  "volume": 162.51574464281416,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            const index = parent.quasis.indexOf(node)
            if (index > 0) {
                open = "}"
            }
            if (index < parent.quasis.length - 1) {
                close = "\${"
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.048315491650566374,
  "difficulty": 6,
  "effort": 869.6788497101948,
  "length": 33,
  "time": 48.31549165056637,
  "vocabulary": 21,
  "volume": 144.94647495169912,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            for (let index = 0; index < count; index++) {
                this.total.push(e)
                this.distinct.add(e)
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.03891930001346158,
  "difficulty": 6.5,
  "effort": 758.9263502625008,
  "length": 28,
  "time": 42.16257501458338,
  "vocabulary": 18,
  "volume": 116.75790004038474,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            if (
                parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
            ) {
                this.operators.add("in")
            } else {
                this.operators.add("extends")
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.0472591500163462,
  "difficulty": 5.090909090909091,
  "effort": 721.7761093405602,
  "length": 34,
  "time": 40.09867274114223,
  "vocabulary": 18,
  "volume": 141.7774500490386,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            if (
                parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
            )
                return
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.09911830864701698,
  "difficulty": 7.615384615384615,
  "effort": 2264.472128320311,
  "length": 70,
  "time": 125.80400712890618,
  "vocabulary": 19,
  "volume": 297.35492594105096,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            if (
                parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
            ) {
                this.operators.add("=>")
                return
            }
            if (parent.type === AST_NODE_TYPES.TSTypePredicate) {
                return
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.0691508495181978,
  "difficulty": 7.333333333333333,
  "effort": 1521.3186894003518,
  "length": 48,
  "time": 84.51770496668621,
  "vocabulary": 20,
  "volume": 207.45254855459342,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            if (node.exportKind === "type") {
                this.operators.add("type")
            }
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.05142907501778852,
  "difficulty": 6.045454545454546,
  "effort": 932.7364060044372,
  "length": 37,
  "time": 51.818689222468734,
  "vocabulary": 18,
  "volume": 154.28722505336555,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            if (typeof node.optional === "string") {
                this.operators.add(node.optional)
            }
            this.operators.add("?")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.030836997651175767,
  "difficulty": 5.142857142857142,
  "effort": 475.77082090385466,
  "length": 25,
  "time": 26.43171227243637,
  "vocabulary": 13,
  "volume": 92.5109929535273,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            if (typeof node.readonly === "string") {
                this.operators.add(node.readonly)
            }
            this.operators.add("readonly")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.030836997651175767,
  "difficulty": 5.142857142857142,
  "effort": 475.77082090385466,
  "length": 25,
  "time": 26.43171227243637,
  "vocabulary": 13,
  "volume": 92.5109929535273,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 4
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 5
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 6
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 7
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 8
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 9
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 10
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 11
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 12
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 13
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 14
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            return 15
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operands.add(\`\${node.bigint}n\`)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 1.5,
  "effort": 59.79470570797253,
  "length": 12,
  "time": 3.321928094887363,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.024669598120940616,
  "difficulty": 1.7999999999999998,
  "effort": 133.2158298530793,
  "length": 20,
  "time": 7.4008794362821835,
  "vocabulary": 13,
  "volume": 74.00879436282185,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operands.add(JSON.stringify(node.value))
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.01550233110947436,
  "difficulty": 1.5,
  "effort": 69.76048999263462,
  "length": 14,
  "time": 3.87558277736859,
  "vocabulary": 10,
  "volume": 46.50699332842308,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("*")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add(",")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add(".")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add(":")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("=")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("?.")
            if (node.computed) {
                this.operators.add("[]")
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 2.857142857142857,
  "effort": 197.68180677927415,
  "length": 20,
  "time": 10.982322598848564,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("?.")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("[]")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.029189721069108297,
  "difficulty": 3.333333333333333,
  "effort": 291.89721069108293,
  "length": 23,
  "time": 16.216511705060164,
  "vocabulary": 14,
  "volume": 87.56916320732489,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("abstract")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("as")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("assert")
            this.operators.add("{}")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("async")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("case")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("default")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("else")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("extends")
            this.operators.add(",", node.extends.length - 1)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.029189721069108297,
  "difficulty": 3.333333333333333,
  "effort": 291.89721069108293,
  "length": 23,
  "time": 16.216511705060164,
  "vocabulary": 14,
  "volume": 87.56916320732489,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("extends")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("finally")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("from")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("function")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.029189721069108297,
  "difficulty": 3.333333333333333,
  "effort": 291.89721069108293,
  "length": 23,
  "time": 16.216511705060164,
  "vocabulary": 14,
  "volume": 87.56916320732489,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("implements")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("module")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.operators.add("type")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
            this.total.push(e)
            this.distinct.add(e)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.01584962500721156,
  "difficulty": 2,
  "effort": 95.09775004326937,
  "length": 15,
  "time": 5.2832083357371875,
  "vocabulary": 9,
  "volume": 47.548875021634686,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if ("bigint" in node && node.bigint) {
            this.operands.add(\`\${node.bigint}n\`)
        } else if ("regex" in node && node.regex) {
            this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
        } else {
            this.operands.add(JSON.stringify(node.value))
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.1006168841117857,
  "difficulty": 6.611111111111111,
  "effort": 1995.5682015504162,
  "length": 65,
  "time": 110.86490008613424,
  "vocabulary": 25,
  "volume": 301.8506523353571,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (count === 1) {
            this.total.push(e)
            this.distinct.add(e)
        } else {
            for (let index = 0; index < count; index++) {
                this.total.push(e)
                this.distinct.add(e)
            }
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0728373831044092,
  "difficulty": 13.799999999999999,
  "effort": 3015.4676605225404,
  "length": 49,
  "time": 167.52598114014114,
  "vocabulary": 22,
  "volume": 218.51214931322758,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (getPrecedence(node) > getPrecedence(node.object)) {
            this.operators.add("()")
        }
        if (node.optional) {
            this.operators.add("?.")
            if (node.computed) {
                this.operators.add("[]")
            }
        } else if (node.computed) {
            this.operators.add("[]")
        } else {
            this.operators.add(".")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0903483750312501,
  "difficulty": 7.75,
  "effort": 2100.599719476565,
  "length": 65,
  "time": 116.69998441536472,
  "vocabulary": 18,
  "volume": 271.0451250937503,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (getPrecedence(node) >= getPrecedence(node.test)) {
            this.operators.add("()")
        }
        this.operators.add("?:")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.032070477557222796,
  "difficulty": 4.0625,
  "effort": 390.85894522865283,
  "length": 26,
  "time": 21.71438584603627,
  "vocabulary": 13,
  "volume": 96.21143267166839,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09770233280920246,
  "difficulty": 4.933333333333334,
  "effort": 1445.9945255761966,
  "length": 69,
  "time": 80.3330291986776,
  "vocabulary": 19,
  "volume": 293.1069984276074,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")

        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.18495666225444335,
  "difficulty": 10.434782608695652,
  "effort": 5789.947687965184,
  "length": 112,
  "time": 321.66376044251024,
  "vocabulary": 31,
  "volume": 554.8699867633301,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06120795266453346,
  "difficulty": 4.545454545454546,
  "effort": 834.6538999709109,
  "length": 47,
  "time": 46.36966110949505,
  "vocabulary": 15,
  "volume": 183.62385799360038,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0806185500278847,
  "difficulty": 7.5,
  "effort": 1813.9173756274058,
  "length": 58,
  "time": 100.77318753485588,
  "vocabulary": 18,
  "volume": 241.8556500836541,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.readonly) this.operators.add("readonly")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.08174925682500679,
  "difficulty": 4.769230769230769,
  "effort": 1169.6432130347125,
  "length": 60,
  "time": 64.98017850192848,
  "vocabulary": 17,
  "volume": 245.2477704750204,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.16646500593882896,
  "difficulty": 10.652173913043478,
  "effort": 5319.642581088665,
  "length": 99,
  "time": 295.53569894937027,
  "vocabulary": 33,
  "volume": 499.39501781648687,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.async) {
            this.operators.add("async")
        }
        if (node.generator) {
            // It cannot actually be used.
            this.operators.add("*")
        }
        if (
            node.params.length !== 1 ||
            node.params[0].type !== AST_NODE_TYPES.Identifier ||
            node.params[0].typeAnnotation
        ) {
            this.operators.add("()")
        }
        this.operators.add(",", node.params.length - 1)

        this.operators.add("=>")

        if (node.body.type === AST_NODE_TYPES.ObjectExpression) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.16679127578302483,
  "difficulty": 12.142857142857142,
  "effort": 6075.967903524475,
  "length": 101,
  "time": 337.5537724180264,
  "vocabulary": 31,
  "volume": 500.3738273490745,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09662101840380811,
  "difficulty": 6.375,
  "effort": 1847.8769769728303,
  "length": 65,
  "time": 102.65983205404613,
  "vocabulary": 22,
  "volume": 289.86305521142435,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.07779470570797252,
  "difficulty": 6,
  "effort": 1400.3047027435055,
  "length": 54,
  "time": 77.79470570797253,
  "vocabulary": 20,
  "volume": 233.38411712391758,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.initializer) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.029874687506009637,
  "difficulty": 3,
  "effort": 268.87218755408674,
  "length": 25,
  "time": 14.937343753004818,
  "vocabulary": 12,
  "volume": 89.62406251802891,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.const) this.operators.add("const")
        this.operators.add("enum")
        this.operators.add("{}")
        this.operators.add(",", node.members.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.07491342031138096,
  "difficulty": 6,
  "effort": 1348.4415656048573,
  "length": 52,
  "time": 74.91342031138096,
  "vocabulary": 20,
  "volume": 224.74026093414287,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.constraint) {
            if (
                parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
            ) {
                this.operators.add("in")
            } else {
                this.operators.add("extends")
            }
        }
        if (node.default) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.07466939618723893,
  "difficulty": 6,
  "effort": 1344.0491313703008,
  "length": 51,
  "time": 74.66939618723893,
  "vocabulary": 21,
  "volume": 224.0081885617168,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.declare) this.operators.add("declare")
        if (!node.global) {
            this.operators.add("module")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.030836997651175767,
  "difficulty": 3.75,
  "effort": 346.9162235757274,
  "length": 25,
  "time": 19.273123531984854,
  "vocabulary": 13,
  "volume": 92.5109929535273,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.exported.name) {
            this.operators.add("as")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04666666666666667,
  "difficulty": 5.1,
  "effort": 714,
  "length": 35,
  "time": 39.666666666666664,
  "vocabulary": 16,
  "volume": 140,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.imported.name) {
            this.operators.add("as")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04666666666666667,
  "difficulty": 5.1,
  "effort": 714,
  "length": 35,
  "time": 39.666666666666664,
  "vocabulary": 16,
  "volume": 140,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.init) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2,
  "effort": 86.37013046707143,
  "length": 13,
  "time": 4.798340581503968,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
        if (!node.shorthand && !node.method) {
            this.operators.add(":")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.07491342031138096,
  "difficulty": 8.333333333333334,
  "effort": 1872.835507784524,
  "length": 52,
  "time": 104.04641709914023,
  "vocabulary": 20,
  "volume": 224.74026093414287,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.operator === "|") {
            return 6
        }
        if (node.operator === "^") {
            return 7
        }
        if (node.operator === "&") {
            return 8
        }
        if (
            node.operator === "==" ||
            node.operator === "!=" ||
            node.operator === "===" ||
            node.operator === "!=="
        ) {
            return 9
        }
        if (
            node.operator === "<" ||
            node.operator === "<=" ||
            node.operator === ">" ||
            node.operator === ">=" ||
            node.operator === "in" ||
            node.operator === "instanceof"
        ) {
            return 10
        }
        if (
            node.operator === "<<" ||
            node.operator === ">>" ||
            node.operator === ">>>"
        ) {
            return 11
        }
        if (node.operator === "+" || node.operator === "-") {
            return 12
        }
        if (
            node.operator === "*" ||
            node.operator === "/" ||
            node.operator === "%"
        ) {
            return 13
        }
        if (node.operator === "**") {
            return 14
        }
        throw new Error(\`Unknown operator precedence:\${node.operator}\`)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.30937439109323833,
  "difficulty": 10,
  "effort": 9281.23173279715,
  "length": 169,
  "time": 515.6239851553972,
  "vocabulary": 45,
  "volume": 928.123173279715,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.operator === "||" || node.operator === "??") {
            return 4
        }
        if (node.operator === "&&") {
            return 5
        }
        throw new Error(\`Unknown operator precedence:\${node.operator}\`)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.048143178485693966,
  "difficulty": 7.2,
  "effort": 1039.8926552909898,
  "length": 34,
  "time": 57.77181418283276,
  "vocabulary": 19,
  "volume": 144.4295354570819,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.optional) {
            this.operators.add("?.")
        }
        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04768706648125397,
  "difficulty": 4.909090909090909,
  "effort": 702.300433633013,
  "length": 35,
  "time": 39.01669075738961,
  "vocabulary": 17,
  "volume": 143.0611994437619,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.optional) this.operators.add("?")
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.021909733584702887,
  "difficulty": 2.857142857142857,
  "effort": 187.79771644031047,
  "length": 19,
  "time": 10.433206468906137,
  "vocabulary": 11,
  "volume": 65.72920075410866,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.prefix) {
            return 15
        }
        return 16
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.01,
  "difficulty": 2,
  "effort": 60,
  "length": 10,
  "time": 3.3333333333333335,
  "vocabulary": 8,
  "volume": 30,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (node.test) {
            this.operators.add("case")
        } else {
            this.operators.add("default")
        }
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03577091727536389,
  "difficulty": 4.375,
  "effort": 469.49328923915107,
  "length": 29,
  "time": 26.08296051328617,
  "vocabulary": 13,
  "volume": 107.31275182609167,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
            )
                return
        }
        this.operands.add(node.name)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.12364402679889169,
  "difficulty": 8.53125,
  "effort": 3164.5143108841344,
  "length": 82,
  "time": 175.80635060467412,
  "vocabulary": 23,
  "volume": 370.9320803966751,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
            ) {
                this.operators.add("=>")
                return
            }
            if (parent.type === AST_NODE_TYPES.TSTypePredicate) {
                return
            }
        }
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.08491813684038937,
  "difficulty": 8.307692307692308,
  "effort": 2116.4212566373967,
  "length": 58,
  "time": 117.5789587020776,
  "vocabulary": 21,
  "volume": 254.75441052116813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        let open = "\`"
        let close = "\`"
        if (
            parent &&
            (parent.type === AST_NODE_TYPES.TemplateLiteral ||
                parent.type === AST_NODE_TYPES.TSTemplateLiteralType)
        ) {
            const index = parent.quasis.indexOf(node)
            if (index > 0) {
                open = "}"
            }
            if (index < parent.quasis.length - 1) {
                close = "\${"
            }
        }
        this.operands.add(\`\${open}\${node.value.cooked}\${close}\`)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.13644611534953321,
  "difficulty": 10.66,
  "effort": 4363.546768878073,
  "length": 78,
  "time": 242.4192649376707,
  "vocabulary": 38,
  "volume": 409.33834604859965,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        return 1
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        return 2
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        return 3
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        return 14.5
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        return 15
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        return 18
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        return 19
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        return this.distinct.size
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1.5,
  "effort": 27.14210625757214,
  "length": 7,
  "time": 1.5078947920873411,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        return this.total
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        return this.total.length
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1.5,
  "effort": 27.14210625757214,
  "length": 7,
  "time": 1.5078947920873411,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("any")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("bigint")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("boolean")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("intrinsic")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("never")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("null")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("number")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("object")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("require")
        this.operators.add("()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.01584962500721156,
  "difficulty": 2,
  "effort": 95.09775004326937,
  "length": 15,
  "time": 5.2832083357371875,
  "vocabulary": 9,
  "volume": 47.548875021634686,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("string")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("super")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("symbol")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("this")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("undefined")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("unknown")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add("void")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add(\`#\${node.name}\`)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 1.5,
  "effort": 59.79470570797253,
  "length": 12,
  "time": 3.321928094887363,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add(JSON.stringify(node.value))
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.01550233110947436,
  "difficulty": 1.5,
  "effort": 69.76048999263462,
  "length": 14,
  "time": 3.87558277736859,
  "vocabulary": 10,
  "volume": 46.50699332842308,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operands.add(node.name)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.01,
  "difficulty": 1.5,
  "effort": 45,
  "length": 10,
  "time": 2.5,
  "vocabulary": 8,
  "volume": 30,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("!")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("&", node.types.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 2.5,
  "effort": 148.0175887256437,
  "length": 16,
  "time": 8.223199373646871,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.029189721069108297,
  "difficulty": 3.333333333333333,
  "effort": 291.89721069108293,
  "length": 23,
  "time": 16.216511705060164,
  "vocabulary": 14,
  "volume": 87.56916320732489,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("*")
        this.operators.add("as")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add(",", node.expressions.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 2.5,
  "effort": 148.0175887256437,
  "length": 16,
  "time": 8.223199373646871,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add(".")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("...")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add(";")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("<")
        this.operators.add(">")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("</")
        this.operators.add(">")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.029189721069108297,
  "difficulty": 3.333333333333333,
  "effort": 291.89721069108293,
  "length": 23,
  "time": 16.216511705060164,
  "vocabulary": 14,
  "volume": 87.56916320732489,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("<>")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("?")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("@")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("[]")
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05339417147331642,
  "difficulty": 4,
  "effort": 640.730057679797,
  "length": 41,
  "time": 35.59611431554428,
  "vocabulary": 15,
  "volume": 160.18251441994926,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("[]")
        this.operators.add(",", node.elementTypes.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.029189721069108297,
  "difficulty": 3.333333333333333,
  "effort": 291.89721069108293,
  "length": 23,
  "time": 16.216511705060164,
  "vocabulary": 14,
  "volume": 87.56916320732489,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.029189721069108297,
  "difficulty": 3.333333333333333,
  "effort": 291.89721069108293,
  "length": 23,
  "time": 16.216511705060164,
  "vocabulary": 14,
  "volume": 87.56916320732489,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("[]")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("{}")
        if (node.readonly) {
            if (typeof node.readonly === "string") {
                this.operators.add(node.readonly)
            }
            this.operators.add("readonly")
        }

        this.operators.add("[]")
        if (node.optional) {
            if (typeof node.optional === "string") {
                this.operators.add(node.optional)
            }
            this.operators.add("?")
        }
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.11119800003846166,
  "difficulty": 10,
  "effort": 3335.9400011538496,
  "length": 80,
  "time": 185.33000006410276,
  "vocabulary": 18,
  "volume": 333.594000115385,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.029189721069108297,
  "difficulty": 3.333333333333333,
  "effort": 291.89721069108293,
  "length": 23,
  "time": 16.216511705060164,
  "vocabulary": 14,
  "volume": 87.56916320732489,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("{}")
        this.operators.add("...")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("|", node.types.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 2.5,
  "effort": 148.0175887256437,
  "length": 16,
  "time": 8.223199373646871,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.07466666666666667,
  "difficulty": 4.833333333333333,
  "effort": 1082.6666666666665,
  "length": 56,
  "time": 60.14814814814814,
  "vocabulary": 16,
  "volume": 224,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09203842945794434,
  "difficulty": 7.846153846153847,
  "effort": 2166.4430318562286,
  "length": 65,
  "time": 120.35794621423491,
  "vocabulary": 19,
  "volume": 276.11528837383304,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("abstract")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("as")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("async")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("await")

        if (getPrecedence(node) > getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.032070477557222796,
  "difficulty": 4.0625,
  "effort": 390.85894522865283,
  "length": 26,
  "time": 21.71438584603627,
  "vocabulary": 13,
  "volume": 96.21143267166839,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("break")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("catch")
        if (node.param) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 2.857142857142857,
  "effort": 197.68180677927415,
  "length": 20,
  "time": 10.982322598848564,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.10405340443487027,
  "difficulty": 6.75,
  "effort": 2107.081439806123,
  "length": 70,
  "time": 117.06007998922905,
  "vocabulary": 22,
  "volume": 312.1602133046108,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.07493681875625623,
  "difficulty": 4.3076923076923075,
  "effort": 968.4142731577728,
  "length": 55,
  "time": 53.800792953209594,
  "vocabulary": 17,
  "volume": 224.8104562687687,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("continue")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("debugger")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("do")
        this.operators.add("while()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("*")
        if (node.exported) {
            this.operators.add("as")
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.11594522208456973,
  "difficulty": 7.5,
  "effort": 2608.767496902819,
  "length": 78,
  "time": 144.93152760571218,
  "vocabulary": 22,
  "volume": 347.8356662537092,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("default")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03577091727536389,
  "difficulty": 4.6875,
  "effort": 503.0285241848047,
  "length": 29,
  "time": 27.94602912137804,
  "vocabulary": 13,
  "volume": 107.31275182609167,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("export")
        if (node.specifiers.length) {
            if (node.exportKind === "type") {
                this.operators.add("type")
            }
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.13449223335448726,
  "difficulty": 11.25,
  "effort": 4539.112875713945,
  "length": 88,
  "time": 252.17293753966362,
  "vocabulary": 24,
  "volume": 403.4767000634618,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("export")
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("export")
        this.operators.add("as")
        this.operators.add("namespace")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023246116677243626,
  "difficulty": 3,
  "effort": 209.21505009519262,
  "length": 22,
  "time": 11.623058338621812,
  "vocabulary": 9,
  "volume": 69.73835003173087,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("export")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("extends")
        this.operators.add("?:")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("for()")
        this.operators.add(";", 2)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.01882425920436172,
  "difficulty": 3,
  "effort": 169.4183328392555,
  "length": 17,
  "time": 9.412129602180862,
  "vocabulary": 10,
  "volume": 56.472777613085164,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("for()")
        this.operators.add("in")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("for()")
        this.operators.add("of")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("if()")
        if (node.alternate) {
            this.operators.add("else")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 2.857142857142857,
  "effort": 197.68180677927415,
  "length": 20,
  "time": 10.982322598848564,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("import")
        if (node.attributes) {
            this.operators.add(",")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 2.857142857142857,
  "effort": 197.68180677927415,
  "length": 20,
  "time": 10.982322598848564,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("import")
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (
            node.specifiers.some(
                (spec) => spec.type === AST_NODE_TYPES.ImportSpecifier,
            )
        ) {
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.specifiers.length) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.16193269983758576,
  "difficulty": 11.475,
  "effort": 5574.533191908889,
  "length": 100,
  "time": 309.6962884393827,
  "vocabulary": 29,
  "volume": 485.7980995127573,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("import")
        this.operators.add("()")
        if (node.qualifier) {
            this.operators.add(".")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03226466250649041,
  "difficulty": 3.5,
  "effort": 338.7789563181493,
  "length": 27,
  "time": 18.821053128786073,
  "vocabulary": 12,
  "volume": 96.79398751947123,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("import")
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("infer")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("interface")
        if (node.extends) {
            this.operators.add("extends")
            this.operators.add(",", node.extends.length - 1)
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.12635056252805676,
  "difficulty": 8.25,
  "effort": 3127.1764225694046,
  "length": 85,
  "time": 173.73202347607804,
  "vocabulary": 22,
  "volume": 379.0516875841703,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("is")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("keyof")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("new")

        if (getPrecedence(node) >= getPrecedence(node.callee)) {
            this.operators.add("()")
        }

        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06796684021509736,
  "difficulty": 7.291666666666667,
  "effort": 1486.774629705255,
  "length": 48,
  "time": 82.59859053918083,
  "vocabulary": 19,
  "volume": 203.9005206452921,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03906890595608519,
  "difficulty": 4,
  "effort": 468.82687147302227,
  "length": 30,
  "time": 26.045937304056793,
  "vocabulary": 15,
  "volume": 117.20671786825557,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("private")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("protected")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("public")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("readonly")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("return")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("static")
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("static")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("switch()")
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("throw")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("try")
        if (node.finalizer) {
            this.operators.add("finally")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 2.857142857142857,
  "effort": 197.68180677927415,
  "length": 20,
  "time": 10.982322598848564,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("type")
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("typeof")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("while()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("with()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 1.5,
  "effort": 33.68825906469125,
  "length": 8,
  "time": 1.871569948038403,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add("yield")
        if (node.delegate) {
            this.operators.add("*")
        }
        if (
            node.argument &&
            getPrecedence(node) > getPrecedence(node.argument)
        ) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.056,
  "difficulty": 6.300000000000001,
  "effort": 1058.4,
  "length": 42,
  "time": 58.800000000000004,
  "vocabulary": 16,
  "volume": 168,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add(node.kind)
        this.operators.add(",", node.declarations.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04904955409500408,
  "difficulty": 5.181818181818182,
  "effort": 762.4976136586998,
  "length": 36,
  "time": 42.36097853659444,
  "vocabulary": 17,
  "volume": 147.14866228501225,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add(node.operator as ESTree.BinaryExpression["operator"])

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0472591500163462,
  "difficulty": 5.409090909090909,
  "effort": 766.8871161743452,
  "length": 34,
  "time": 42.604839787463625,
  "vocabulary": 18,
  "volume": 141.7774500490386,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03453743736931686,
  "difficulty": 4.375,
  "effort": 453.3038654722838,
  "length": 28,
  "time": 25.183548081793546,
  "vocabulary": 13,
  "volume": 103.61231210795059,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03453743736931686,
  "difficulty": 4.375,
  "effort": 453.3038654722838,
  "length": 28,
  "time": 25.183548081793546,
  "vocabulary": 13,
  "volume": 103.61231210795059,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
    /* noop */
}
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
    const context = new ExtractTokensContext()

    walk(
        node as TSESTree.Node,
        (node: TSESTree.Node, parent: TSESTree.Node | null) => {
            const extract = EXTRACT_TOKENS[node.type] as any
            if (
                extract &&
                Object.prototype.hasOwnProperty.call(EXTRACT_TOKENS, node.type)
            ) {
                extract.call(context, node, parent)
            }
        },
    )

    return context
}
\` 1`] = `
Object {
  "deliveredBugs": 0.11394651513889814,
  "difficulty": 15,
  "effort": 5127.593181250416,
  "length": 69,
  "time": 284.8662878472453,
  "vocabulary": 31,
  "volume": 341.8395454166944,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts BlockStatement\`
{
    if (node.type === AST_NODE_TYPES.SequenceExpression) {
        return 1
    }
    if (
        node.type === AST_NODE_TYPES.YieldExpression ||
        node.type === AST_NODE_TYPES.AssignmentExpression
    ) {
        return 2
    }
    if (node.type === AST_NODE_TYPES.ConditionalExpression) {
        return 3
    }
    if (node.type === AST_NODE_TYPES.LogicalExpression) {
        if (node.operator === "||" || node.operator === "??") {
            return 4
        }
        if (node.operator === "&&") {
            return 5
        }
        throw new Error(\`Unknown operator precedence:\${node.operator}\`)
    }
    if (node.type === AST_NODE_TYPES.BinaryExpression) {
        if (node.operator === "|") {
            return 6
        }
        if (node.operator === "^") {
            return 7
        }
        if (node.operator === "&") {
            return 8
        }
        if (
            node.operator === "==" ||
            node.operator === "!=" ||
            node.operator === "===" ||
            node.operator === "!=="
        ) {
            return 9
        }
        if (
            node.operator === "<" ||
            node.operator === "<=" ||
            node.operator === ">" ||
            node.operator === ">=" ||
            node.operator === "in" ||
            node.operator === "instanceof"
        ) {
            return 10
        }
        if (
            node.operator === "<<" ||
            node.operator === ">>" ||
            node.operator === ">>>"
        ) {
            return 11
        }
        if (node.operator === "+" || node.operator === "-") {
            return 12
        }
        if (
            node.operator === "*" ||
            node.operator === "/" ||
            node.operator === "%"
        ) {
            return 13
        }
        if (node.operator === "**") {
            return 14
        }
        throw new Error(\`Unknown operator precedence:\${node.operator}\`)
    }
    if (
        node.type === AST_NODE_TYPES.UnaryExpression ||
        node.type === AST_NODE_TYPES.AwaitExpression
    ) {
        return 15
    }
    if (node.type === AST_NODE_TYPES.UpdateExpression) {
        if (node.prefix) {
            return 15
        }
        return 16
    }
    if (
        node.type === AST_NODE_TYPES.NewExpression ||
        node.type === AST_NODE_TYPES.CallExpression ||
        node.type === AST_NODE_TYPES.ImportExpression ||
        node.type === AST_NODE_TYPES.ChainExpression
    ) {
        return 18
    }
    if (node.type === AST_NODE_TYPES.MemberExpression) {
        return 19
    }

    // Others
    if (node.type === AST_NODE_TYPES.ArrowFunctionExpression) {
        return 2
    }
    if (node.type === AST_NODE_TYPES.TSAsExpression) {
        return 14.5
    }
    return Infinity
}
\` 1`] = `
Object {
  "deliveredBugs": 0.7710093388471024,
  "difficulty": 11.282608695652174,
  "effort": 26096.990012716054,
  "length": 368,
  "time": 1449.8327784842252,
  "vocabulary": 78,
  "volume": 2313.0280165413074,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts CallExpression\`
JSON.stringify(node.value)
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts CallExpression\`
Object.prototype.hasOwnProperty.call(EXTRACT_TOKENS, node.type)
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 1.5,
  "effort": 64.77759785030358,
  "length": 13,
  "time": 3.5987554361279765,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts CallExpression\`
getPrecedence(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts CallExpression\`
getPrecedence(node.argument)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts CallExpression\`
getPrecedence(node.callee)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts CallExpression\`
getPrecedence(node.object)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts CallExpression\`
getPrecedence(node.right)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts CallExpression\`
getPrecedence(node.test)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts CallExpression\`
node.specifiers.some(
                (spec) => spec.type === AST_NODE_TYPES.ImportSpecifier,
            )
\` 1`] = `
Object {
  "deliveredBugs": 0.01729715809318649,
  "difficulty": 2.2857142857142856,
  "effort": 118.6090840675645,
  "length": 15,
  "time": 6.589393559309139,
  "vocabulary": 11,
  "volume": 51.89147427955947,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts CallExpression\`
parent.quasis.indexOf(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ClassBody\`
{
    private readonly total: T[] = []

    private readonly distinct = new Set<T>()

    public add(e: T, count = 1): void {
        if (count === 1) {
            this.total.push(e)
            this.distinct.add(e)
        } else {
            for (let index = 0; index < count; index++) {
                this.total.push(e)
                this.distinct.add(e)
            }
        }
    }

    public get all(): T[] {
        return this.total
    }

    public get distinctSize(): number {
        return this.distinct.size
    }

    public get totalSize(): number {
        return this.total.length
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.20894452818010525,
  "difficulty": 27.789473684210524,
  "effort": 17419.375401962458,
  "length": 117,
  "time": 967.7430778868032,
  "vocabulary": 41,
  "volume": 626.8335845403158,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ClassBody\`
{
    public readonly operators = new TokensCollection<Operator>()

    public readonly operands = new TokensCollection<string>()
}
\` 1`] = `
Object {
  "deliveredBugs": 0.022704762504567322,
  "difficulty": 4.2,
  "effort": 286.0800075575483,
  "length": 19,
  "time": 15.893333753197128,
  "vocabulary": 12,
  "volume": 68.11428751370197,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ClassDeclaration\`
class ExtractTokensContext implements ExtractTokensResult {
    public readonly operators = new TokensCollection<Operator>()

    public readonly operands = new TokensCollection<string>()
}
\` 1`] = `
Object {
  "deliveredBugs": 0.030666666666666665,
  "difficulty": 5.142857142857142,
  "effort": 473.1428571428571,
  "length": 23,
  "time": 26.285714285714285,
  "vocabulary": 16,
  "volume": 92,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ClassDeclaration\`
class TokensCollection<T> {
    private readonly total: T[] = []

    private readonly distinct = new Set<T>()

    public add(e: T, count = 1): void {
        if (count === 1) {
            this.total.push(e)
            this.distinct.add(e)
        } else {
            for (let index = 0; index < count; index++) {
                this.total.push(e)
                this.distinct.add(e)
            }
        }
    }

    public get all(): T[] {
        return this.total
    }

    public get distinctSize(): number {
        return this.distinct.size
    }

    public get totalSize(): number {
        return this.total.length
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.21885934510631797,
  "difficulty": 28.75,
  "effort": 18876.618515419923,
  "length": 121,
  "time": 1048.7010286344403,
  "vocabulary": 43,
  "volume": 656.5780353189539,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExportNamedDeclaration\`
export class TokensCollection<T> {
    private readonly total: T[] = []

    private readonly distinct = new Set<T>()

    public add(e: T, count = 1): void {
        if (count === 1) {
            this.total.push(e)
            this.distinct.add(e)
        } else {
            for (let index = 0; index < count; index++) {
                this.total.push(e)
                this.distinct.add(e)
            }
        }
    }

    public get all(): T[] {
        return this.total
    }

    public get distinctSize(): number {
        return this.distinct.size
    }

    public get totalSize(): number {
        return this.total.length
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.2220168858245834,
  "difficulty": 30,
  "effort": 19981.519724212507,
  "length": 122,
  "time": 1110.084429122917,
  "vocabulary": 44,
  "volume": 666.0506574737502,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExportNamedDeclaration\`
export function extractTokens(
    node: ESTree.Node | TSESTree.Node,
): ExtractTokensResult {
    const context = new ExtractTokensContext()

    walk(
        node as TSESTree.Node,
        (node: TSESTree.Node, parent: TSESTree.Node | null) => {
            const extract = EXTRACT_TOKENS[node.type] as any
            if (
                extract &&
                Object.prototype.hasOwnProperty.call(EXTRACT_TOKENS, node.type)
            ) {
                extract.call(context, node, parent)
            }
        },
    )

    return context
}
\` 1`] = `
Object {
  "deliveredBugs": 0.14475790004038475,
  "difficulty": 17.447368421052634,
  "effort": 7576.933241587507,
  "length": 84,
  "time": 420.9407356437504,
  "vocabulary": 36,
  "volume": 434.2737001211542,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExportNamedDeclaration\`
export type ExtractTokensResult = {
    readonly operators: TokensCollection<string>
    readonly operands: TokensCollection<string>
}
\` 1`] = `
Object {
  "deliveredBugs": 0.020314787504086555,
  "difficulty": 4.8999999999999995,
  "effort": 298.6273763100723,
  "length": 17,
  "time": 16.590409795004017,
  "vocabulary": 12,
  "volume": 60.94436251225966,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
close = "\${"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
extract.call(context, node, parent)
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 1.5,
  "effort": 40.5,
  "length": 9,
  "time": 2.25,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
open = "}"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.distinct.add(e)
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("any")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("bigint")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("boolean")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("intrinsic")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("never")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("null")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("number")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("object")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("require")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("string")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("super")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("symbol")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("this")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("undefined")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("unknown")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add("void")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add(\`#\${node.name}\`)
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 1,
  "effort": 34.86917501586544,
  "length": 11,
  "time": 1.937176389770302,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add(\`\${node.bigint}n\`)
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 1,
  "effort": 34.86917501586544,
  "length": 11,
  "time": 1.937176389770302,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add(\`\${open}\${node.value.cooked}\${close}\`)
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 1.0909090909090908,
  "effort": 68.62633659098024,
  "length": 17,
  "time": 3.812574255054458,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
\` 1`] = `
Object {
  "deliveredBugs": 0.022704762504567322,
  "difficulty": 1.2,
  "effort": 81.73714501644235,
  "length": 19,
  "time": 4.540952500913464,
  "vocabulary": 12,
  "volume": 68.11428751370197,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add(JSON.stringify(node.value))
\` 1`] = `
Object {
  "deliveredBugs": 0.013736341672916687,
  "difficulty": 1,
  "effort": 41.20902501875006,
  "length": 13,
  "time": 2.289390278819448,
  "vocabulary": 9,
  "volume": 41.20902501875006,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operands.add(node.name)
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1,
  "effort": 25.26619429851844,
  "length": 9,
  "time": 1.403677461028802,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("!")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("&", node.types.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("()")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("*")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.arguments.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.declarations.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.elementTypes.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.elements.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.expressions.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.extends.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.implements.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.members.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.params.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.properties.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(",", node.specifiers.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(".")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("...")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(":")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(";")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(";", 2)
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 1.5,
  "effort": 40.5,
  "length": 9,
  "time": 2.25,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("<")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("</")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("<>")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("=")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("=>")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(">")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("?")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("?.")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("?:")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("@")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("[]")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("{}")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("|", node.types.length - 1)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("abstract")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("as")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("assert")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("async")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("await")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("break")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("case")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("catch")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("class")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("const")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("continue")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("debugger")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("declare")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("default")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("do")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("else")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("enum")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("export")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("extends")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("finally")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("for()")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("from")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("function")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("if()")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("implements")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("import")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("in")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("infer")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("interface")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("is")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("keyof")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("module")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("namespace")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("new")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("of")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("private")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("protected")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("public")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("readonly")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("return")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("static")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("switch()")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("throw")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("try")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("type")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("typeof")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("while()")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("with()")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add("yield")
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(node.accessibility)
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1,
  "effort": 25.26619429851844,
  "length": 9,
  "time": 1.403677461028802,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(node.kind)
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1,
  "effort": 25.26619429851844,
  "length": 9,
  "time": 1.403677461028802,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(node.operator as ESTree.BinaryExpression["operator"])
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(node.operator)
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1,
  "effort": 25.26619429851844,
  "length": 9,
  "time": 1.403677461028802,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(node.optional)
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1,
  "effort": 25.26619429851844,
  "length": 9,
  "time": 1.403677461028802,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.operators.add(node.readonly)
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1,
  "effort": 25.26619429851844,
  "length": 9,
  "time": 1.403677461028802,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
this.total.push(e)
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ExpressionStatement\`
walk(
        node as TSESTree.Node,
        (node: TSESTree.Node, parent: TSESTree.Node | null) => {
            const extract = EXTRACT_TOKENS[node.type] as any
            if (
                extract &&
                Object.prototype.hasOwnProperty.call(EXTRACT_TOKENS, node.type)
            ) {
                extract.call(context, node, parent)
            }
        },
    )
\` 1`] = `
Object {
  "deliveredBugs": 0.09614709844115209,
  "difficulty": 12.566666666666666,
  "effort": 3624.7456112314335,
  "length": 60,
  "time": 201.37475617952407,
  "vocabulary": 28,
  "volume": 288.44129532345625,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ForStatement\`
for (let index = 0; index < count; index++) {
                this.total.push(e)
                this.distinct.add(e)
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.03752932501298081,
  "difficulty": 6.5,
  "effort": 731.8218377531258,
  "length": 27,
  "time": 40.65676876406255,
  "vocabulary": 18,
  "volume": 112.58797503894243,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionDeclaration\`
function extractTokens(
    node: ESTree.Node | TSESTree.Node,
): ExtractTokensResult {
    const context = new ExtractTokensContext()

    walk(
        node as TSESTree.Node,
        (node: TSESTree.Node, parent: TSESTree.Node | null) => {
            const extract = EXTRACT_TOKENS[node.type] as any
            if (
                extract &&
                Object.prototype.hasOwnProperty.call(EXTRACT_TOKENS, node.type)
            ) {
                extract.call(context, node, parent)
            }
        },
    )

    return context
}
\` 1`] = `
Object {
  "deliveredBugs": 0.14191016346881072,
  "difficulty": 16.42105263157895,
  "effort": 6990.94278983194,
  "length": 83,
  "time": 388.3857105462189,
  "vocabulary": 35,
  "volume": 425.7304904064322,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionDeclaration\`
function getPrecedence(node: TSESTree.Expression): number {
    if (node.type === AST_NODE_TYPES.SequenceExpression) {
        return 1
    }
    if (
        node.type === AST_NODE_TYPES.YieldExpression ||
        node.type === AST_NODE_TYPES.AssignmentExpression
    ) {
        return 2
    }
    if (node.type === AST_NODE_TYPES.ConditionalExpression) {
        return 3
    }
    if (node.type === AST_NODE_TYPES.LogicalExpression) {
        if (node.operator === "||" || node.operator === "??") {
            return 4
        }
        if (node.operator === "&&") {
            return 5
        }
        throw new Error(\`Unknown operator precedence:\${node.operator}\`)
    }
    if (node.type === AST_NODE_TYPES.BinaryExpression) {
        if (node.operator === "|") {
            return 6
        }
        if (node.operator === "^") {
            return 7
        }
        if (node.operator === "&") {
            return 8
        }
        if (
            node.operator === "==" ||
            node.operator === "!=" ||
            node.operator === "===" ||
            node.operator === "!=="
        ) {
            return 9
        }
        if (
            node.operator === "<" ||
            node.operator === "<=" ||
            node.operator === ">" ||
            node.operator === ">=" ||
            node.operator === "in" ||
            node.operator === "instanceof"
        ) {
            return 10
        }
        if (
            node.operator === "<<" ||
            node.operator === ">>" ||
            node.operator === ">>>"
        ) {
            return 11
        }
        if (node.operator === "+" || node.operator === "-") {
            return 12
        }
        if (
            node.operator === "*" ||
            node.operator === "/" ||
            node.operator === "%"
        ) {
            return 13
        }
        if (node.operator === "**") {
            return 14
        }
        throw new Error(\`Unknown operator precedence:\${node.operator}\`)
    }
    if (
        node.type === AST_NODE_TYPES.UnaryExpression ||
        node.type === AST_NODE_TYPES.AwaitExpression
    ) {
        return 15
    }
    if (node.type === AST_NODE_TYPES.UpdateExpression) {
        if (node.prefix) {
            return 15
        }
        return 16
    }
    if (
        node.type === AST_NODE_TYPES.NewExpression ||
        node.type === AST_NODE_TYPES.CallExpression ||
        node.type === AST_NODE_TYPES.ImportExpression ||
        node.type === AST_NODE_TYPES.ChainExpression
    ) {
        return 18
    }
    if (node.type === AST_NODE_TYPES.MemberExpression) {
        return 19
    }

    // Others
    if (node.type === AST_NODE_TYPES.ArrowFunctionExpression) {
        return 2
    }
    if (node.type === AST_NODE_TYPES.TSAsExpression) {
        return 14.5
    }
    return Infinity
}
\` 1`] = `
Object {
  "deliveredBugs": 0.8054319952701238,
  "difficulty": 13.410958904109588,
  "effort": 32404.846165867853,
  "length": 378,
  "time": 1800.269231437103,
  "vocabulary": 84,
  "volume": 2416.2959858103713,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionDeclaration\`
function noop(): void {
    /* noop */
}
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        _node: TSESTree.AssignmentPattern,
    ) {
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 3.375,
  "effort": 244.14663437694384,
  "length": 19,
  "time": 13.563701909830213,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ArrayExpression,
    ) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.048143178485693966,
  "difficulty": 4.958333333333334,
  "effort": 716.1297799746978,
  "length": 34,
  "time": 39.784987776372105,
  "vocabulary": 19,
  "volume": 144.4295354570819,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ArrowFunctionExpression,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        if (node.generator) {
            // It cannot actually be used.
            this.operators.add("*")
        }
        if (
            node.params.length !== 1 ||
            node.params[0].type !== AST_NODE_TYPES.Identifier ||
            node.params[0].typeAnnotation
        ) {
            this.operators.add("()")
        }
        this.operators.add(",", node.params.length - 1)

        this.operators.add("=>")

        if (node.body.type === AST_NODE_TYPES.ObjectExpression) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.19301053338717966,
  "difficulty": 14,
  "effort": 8106.442402261546,
  "length": 112,
  "time": 450.35791123675256,
  "vocabulary": 36,
  "volume": 579.031600161539,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.AssignmentExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05522305767476661,
  "difficulty": 6.909090909090909,
  "effort": 1144.6233772587989,
  "length": 39,
  "time": 63.590187625488824,
  "vocabulary": 19,
  "volume": 165.66917302429982,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.AwaitExpression,
    ) {
        this.operators.add("await")

        if (getPrecedence(node) > getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05239110599913755,
  "difficulty": 6.545454545454546,
  "effort": 1028.7708087103374,
  "length": 37,
  "time": 57.15393381724097,
  "vocabulary": 19,
  "volume": 157.17331799741265,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.BinaryExpression,
    ) {
        this.operators.add(node.operator as ESTree.BinaryExpression["operator"])

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0678534293408552,
  "difficulty": 8.461538461538462,
  "effort": 1722.433206344786,
  "length": 45,
  "time": 95.69073368582144,
  "vocabulary": 23,
  "volume": 203.5602880225656,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ClassDeclaration,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.12838196255841366,
  "difficulty": 8.631578947368421,
  "effort": 3324.417135723133,
  "length": 81,
  "time": 184.6898408735074,
  "vocabulary": 27,
  "volume": 385.145887675241,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ClassExpression,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0995183630332543,
  "difficulty": 7.21875,
  "effort": 2155.1945494389133,
  "length": 66,
  "time": 119.73303052438408,
  "vocabulary": 23,
  "volume": 298.5550890997629,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ConditionalExpression,
    ) {
        if (getPrecedence(node) >= getPrecedence(node.test)) {
            this.operators.add("()")
        }
        this.operators.add("?:")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05239110599913755,
  "difficulty": 6.545454545454546,
  "effort": 1028.7708087103374,
  "length": 37,
  "time": 57.15393381724097,
  "vocabulary": 19,
  "volume": 157.17331799741265,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ExportAllDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("*")
        if (node.exported) {
            this.operators.add("as")
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.14261819602104225,
  "difficulty": 10.657894736842104,
  "effort": 4560.029162251745,
  "length": 89,
  "time": 253.33495345843028,
  "vocabulary": 28,
  "volume": 427.85458806312676,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ExportDefaultDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("default")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.056639033512581136,
  "difficulty": 7.2727272727272725,
  "effort": 1235.7607311835884,
  "length": 40,
  "time": 68.6533739546438,
  "vocabulary": 19,
  "volume": 169.9171005377434,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ExportNamedDeclaration,
    ) {
        this.operators.add("export")
        if (node.specifiers.length) {
            if (node.exportKind === "type") {
                this.operators.add("type")
            }
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.1603133728392099,
  "difficulty": 13.157894736842106,
  "effort": 6328.159454179338,
  "length": 99,
  "time": 351.5644141210744,
  "vocabulary": 29,
  "volume": 480.9401185176297,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ExportSpecifier,
    ) {
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.exported.name) {
            this.operators.add("as")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06837795148577189,
  "difficulty": 7.615384615384615,
  "effort": 1562.1731993287885,
  "length": 46,
  "time": 86.78739996271048,
  "vocabulary": 22,
  "volume": 205.13385445731566,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.FunctionDeclaration,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.1204571500548079,
  "difficulty": 8.210526315789474,
  "effort": 2967.049801350005,
  "length": 76,
  "time": 164.83610007500027,
  "vocabulary": 27,
  "volume": 361.37145016442366,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.2107303788483113,
  "difficulty": 13.464285714285715,
  "effort": 8512.002088480003,
  "length": 118,
  "time": 472.88900491555574,
  "vocabulary": 41,
  "volume": 632.1911365449339,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
            )
                return
        }
        this.operands.add(node.name)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.16833333333333333,
  "difficulty": 12.571428571428571,
  "effort": 6348.571428571428,
  "length": 101,
  "time": 352.6984126984127,
  "vocabulary": 32,
  "volume": 505,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ImportDeclaration,
    ) {
        this.operators.add("import")
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (
            node.specifiers.some(
                (spec) => spec.type === AST_NODE_TYPES.ImportSpecifier,
            )
        ) {
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.specifiers.length) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.1882361251262626,
  "difficulty": 13.391304347826088,
  "effort": 7562.181722463767,
  "length": 111,
  "time": 420.12120680354263,
  "vocabulary": 34,
  "volume": 564.7083753787878,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ImportExpression,
    ) {
        this.operators.add("import")
        if (node.attributes) {
            this.operators.add(",")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04223711602625351,
  "difficulty": 5.25,
  "effort": 665.2345774134928,
  "length": 31,
  "time": 36.957476522971824,
  "vocabulary": 17,
  "volume": 126.71134807876054,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ImportSpecifier,
    ) {
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.imported.name) {
            this.operators.add("as")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06837795148577189,
  "difficulty": 7.615384615384615,
  "effort": 1562.1731993287885,
  "length": 46,
  "time": 86.78739996271048,
  "vocabulary": 22,
  "volume": 205.13385445731566,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.LogicalExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05522305767476661,
  "difficulty": 6.909090909090909,
  "effort": 1144.6233772587989,
  "length": 39,
  "time": 63.590187625488824,
  "vocabulary": 19,
  "volume": 165.66917302429982,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.MemberExpression,
    ) {
        if (getPrecedence(node) > getPrecedence(node.object)) {
            this.operators.add("()")
        }
        if (node.optional) {
            this.operators.add("?.")
            if (node.computed) {
                this.operators.add("[]")
            }
        } else if (node.computed) {
            this.operators.add("[]")
        } else {
            this.operators.add(".")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.11615238335160265,
  "difficulty": 10.799999999999999,
  "effort": 3763.3372205919254,
  "length": 76,
  "time": 209.07429003288473,
  "vocabulary": 24,
  "volume": 348.4571500548079,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.MethodDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.10545413751658661,
  "difficulty": 10.5,
  "effort": 3321.805331772478,
  "length": 69,
  "time": 184.54474065402655,
  "vocabulary": 24,
  "volume": 316.3624125497598,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.ObjectExpression,
    ) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.048143178485693966,
  "difficulty": 4.958333333333334,
  "effort": 716.1297799746978,
  "length": 34,
  "time": 39.784987776372105,
  "vocabulary": 19,
  "volume": 144.4295354570819,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.PrivateIdentifier,
    ) {
        this.operands.add(\`#\${node.name}\`)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.030666666666666665,
  "difficulty": 3.5999999999999996,
  "effort": 331.2,
  "length": 23,
  "time": 18.4,
  "vocabulary": 16,
  "volume": 92,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.PropertyDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.readonly) this.operators.add("readonly")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.10705763296001597,
  "difficulty": 7.875,
  "effort": 2529.236578680377,
  "length": 71,
  "time": 140.51314326002094,
  "vocabulary": 23,
  "volume": 321.1728988800479,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.SequenceExpression,
    ) {
        this.operators.add(",", node.expressions.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03752932501298081,
  "difficulty": 4.136363636363637,
  "effort": 465.7048058428983,
  "length": 27,
  "time": 25.872489213494347,
  "vocabulary": 18,
  "volume": 112.58797503894243,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractMethodDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.11764435680762635,
  "difficulty": 10.96875,
  "effort": 3871.2346162009544,
  "length": 76,
  "time": 215.06858978894192,
  "vocabulary": 25,
  "volume": 352.93307042287904,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractPropertyDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09959397281623299,
  "difficulty": 7.933333333333334,
  "effort": 2370.336553026345,
  "length": 67,
  "time": 131.68536405701917,
  "vocabulary": 22,
  "volume": 298.78191844869895,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSCallSignatureDeclaration,
    ) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.048143178485693966,
  "difficulty": 4.958333333333334,
  "effort": 716.1297799746978,
  "length": 34,
  "time": 39.784987776372105,
  "vocabulary": 19,
  "volume": 144.4295354570819,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructSignatureDeclaration,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05906635063012729,
  "difficulty": 5.653846153846154,
  "effort": 1001.8561779956207,
  "length": 41,
  "time": 55.65867655531226,
  "vocabulary": 20,
  "volume": 177.19905189038187,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructorType,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05906635063012729,
  "difficulty": 5.653846153846154,
  "effort": 1001.8561779956207,
  "length": 41,
  "time": 55.65867655531226,
  "vocabulary": 20,
  "volume": 177.19905189038187,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSDeclareFunction,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.1006168841117857,
  "difficulty": 7.764705882352941,
  "effort": 2343.7815357804197,
  "length": 65,
  "time": 130.21008532113444,
  "vocabulary": 25,
  "volume": 301.8506523353571,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.2107303788483113,
  "difficulty": 13.464285714285715,
  "effort": 8512.002088480003,
  "length": 118,
  "time": 472.88900491555574,
  "vocabulary": 41,
  "volume": 632.1911365449339,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSEnumDeclaration,
    ) {
        if (node.const) this.operators.add("const")
        this.operators.add("enum")
        this.operators.add("{}")
        this.operators.add(",", node.members.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09752097998526921,
  "difficulty": 7.764705882352941,
  "effort": 2271.66518083333,
  "length": 63,
  "time": 126.20362115740721,
  "vocabulary": 25,
  "volume": 292.5629399558076,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSInterfaceDeclaration,
    ) {
        this.operators.add("interface")
        if (node.extends) {
            this.operators.add("extends")
            this.operators.add(",", node.extends.length - 1)
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.152156400069231,
  "difficulty": 10.31578947368421,
  "effort": 4708.84017056357,
  "length": 96,
  "time": 261.6022316979761,
  "vocabulary": 27,
  "volume": 456.469200207693,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSIntersectionType,
    ) {
        this.operators.add("&", node.types.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03752932501298081,
  "difficulty": 4.136363636363637,
  "effort": 465.7048058428983,
  "length": 27,
  "time": 25.872489213494347,
  "vocabulary": 18,
  "volume": 112.58797503894243,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSMethodSignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")

        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.2119669250591348,
  "difficulty": 12.5,
  "effort": 7948.759689717555,
  "length": 123,
  "time": 441.59776053986417,
  "vocabulary": 36,
  "volume": 635.9007751774044,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSModuleDeclaration,
    ) {
        if (node.declare) this.operators.add("declare")
        if (!node.global) {
            this.operators.add("module")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.050975130161323025,
  "difficulty": 6.181818181818182,
  "effort": 945.3569593554452,
  "length": 36,
  "time": 52.519831075302505,
  "vocabulary": 19,
  "volume": 152.92539048396907,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSNamedTupleMember,
    ) {
        if (node.optional) this.operators.add("?")
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.040874628412503396,
  "difficulty": 5.25,
  "effort": 643.7753974969285,
  "length": 30,
  "time": 35.76529986094047,
  "vocabulary": 17,
  "volume": 122.6238852375102,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSParameterProperty,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.08491813684038937,
  "difficulty": 7.5,
  "effort": 1910.658078908761,
  "length": 58,
  "time": 106.14767105048672,
  "vocabulary": 21,
  "volume": 254.75441052116813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSPropertySignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.12383616506065931,
  "difficulty": 8.166666666666668,
  "effort": 3033.9860439861536,
  "length": 80,
  "time": 168.55478022145297,
  "vocabulary": 25,
  "volume": 371.50849518197793,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
            ) {
                this.operators.add("=>")
                return
            }
            if (parent.type === AST_NODE_TYPES.TSTypePredicate) {
                return
            }
        }
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.1259435252872853,
  "difficulty": 12,
  "effort": 4533.966910342271,
  "length": 77,
  "time": 251.88705057457062,
  "vocabulary": 30,
  "volume": 377.83057586185595,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameter,
        parent,
    ) {
        if (node.constraint) {
            if (
                parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
            ) {
                this.operators.add("in")
            } else {
                this.operators.add("extends")
            }
        }
        if (node.default) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.10143760004615401,
  "difficulty": 8.823529411764707,
  "effort": 2685.1129423981947,
  "length": 64,
  "time": 149.17294124434414,
  "vocabulary": 27,
  "volume": 304.312800138462,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterDeclaration,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.048143178485693966,
  "difficulty": 4.958333333333334,
  "effort": 716.1297799746978,
  "length": 34,
  "time": 39.784987776372105,
  "vocabulary": 19,
  "volume": 144.4295354570819,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterInstantiation,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.048143178485693966,
  "difficulty": 4.958333333333334,
  "effort": 716.1297799746978,
  "length": 34,
  "time": 39.784987776372105,
  "vocabulary": 19,
  "volume": 144.4295354570819,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) {
        let open = "\`"
        let close = "\`"
        if (
            parent &&
            (parent.type === AST_NODE_TYPES.TemplateLiteral ||
                parent.type === AST_NODE_TYPES.TSTemplateLiteralType)
        ) {
            const index = parent.quasis.indexOf(node)
            if (index > 0) {
                open = "}"
            }
            if (index < parent.quasis.length - 1) {
                close = "\${"
            }
        }
        this.operands.add(\`\${open}\${node.value.cooked}\${close}\`)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.1795983728709103,
  "difficulty": 14.166666666666668,
  "effort": 7632.930847013688,
  "length": 97,
  "time": 424.0517137229827,
  "vocabulary": 47,
  "volume": 538.7951186127309,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.UnaryExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05522305767476661,
  "difficulty": 6.909090909090909,
  "effort": 1144.6233772587989,
  "length": 39,
  "time": 63.590187625488824,
  "vocabulary": 19,
  "volume": 165.66917302429982,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.UpdateExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05522305767476661,
  "difficulty": 6.909090909090909,
  "effort": 1144.6233772587989,
  "length": 39,
  "time": 63.590187625488824,
  "vocabulary": 19,
  "volume": 165.66917302429982,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclaration,
    ) {
        this.operators.add(node.kind)
        this.operators.add(",", node.declarations.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06986442869198432,
  "difficulty": 6.857142857142857,
  "effort": 1437.2111045208203,
  "length": 47,
  "time": 79.8450613622678,
  "vocabulary": 22,
  "volume": 209.59328607595296,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclarator,
    ) {
        if (node.init) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.032,
  "difficulty": 4.277777777777779,
  "effort": 410.66666666666674,
  "length": 24,
  "time": 22.81481481481482,
  "vocabulary": 16,
  "volume": 96,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(
        this: ExtractTokensContext,
        node: TSESTree.YieldExpression,
    ) {
        this.operators.add("yield")
        if (node.delegate) {
            this.operators.add("*")
        }
        if (
            node.argument &&
            getPrecedence(node) > getPrecedence(node.argument)
        ) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.07878329192925893,
  "difficulty": 9,
  "effort": 2127.148882089991,
  "length": 53,
  "time": 118.17493789388838,
  "vocabulary": 22,
  "volume": 236.34987578777677,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(): T[] {
        return this.total
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.01107309364962454,
  "difficulty": 3.5,
  "effort": 116.26748332105768,
  "length": 10,
  "time": 6.459304628947649,
  "vocabulary": 10,
  "volume": 33.219280948873624,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(): number {
        return this.distinct.size
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.012180403014586996,
  "difficulty": 3,
  "effort": 109.62362713128296,
  "length": 11,
  "time": 6.090201507293497,
  "vocabulary": 10,
  "volume": 36.541209043760986,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(): number {
        return this.total.length
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.012180403014586996,
  "difficulty": 3,
  "effort": 109.62362713128296,
  "length": 11,
  "time": 6.090201507293497,
  "vocabulary": 10,
  "volume": 36.541209043760986,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(e: T, count = 1): void {
        if (count === 1) {
            this.total.push(e)
            this.distinct.add(e)
        } else {
            for (let index = 0; index < count; index++) {
                this.total.push(e)
                this.distinct.add(e)
            }
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09509775004326938,
  "difficulty": 17.5,
  "effort": 4992.631877271642,
  "length": 60,
  "time": 277.36843762620236,
  "vocabulary": 27,
  "volume": 285.29325012980814,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("any")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("bigint")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("boolean")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("intrinsic")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("never")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("null")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("number")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("object")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("require")
        this.operators.add("()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.02389975000480771,
  "difficulty": 3.5714285714285716,
  "effort": 256.0687500515112,
  "length": 20,
  "time": 14.2260416695284,
  "vocabulary": 12,
  "volume": 71.69925001442313,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("string")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("super")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("symbol")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("this")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("undefined")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("unknown")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operands.add("void")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("!")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("*")
        this.operators.add("as")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add(".")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("...")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add(";")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("<>")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("?")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("@")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("[]")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("abstract")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("as")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("async")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("break")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("continue")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("debugger")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("do")
        this.operators.add("while()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("as")
        this.operators.add("namespace")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03226466250649041,
  "difficulty": 5,
  "effort": 483.96993759735614,
  "length": 27,
  "time": 26.887218755408675,
  "vocabulary": 12,
  "volume": 96.79398751947123,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("export")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("extends")
        this.operators.add("?:")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add(";", 2)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.027136557933034676,
  "difficulty": 4.714285714285714,
  "effort": 383.78846219577616,
  "length": 22,
  "time": 21.321581233098676,
  "vocabulary": 13,
  "volume": 81.40967379910403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("in")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("of")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("import")
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("infer")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("is")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("keyof")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("private")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("protected")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("public")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("readonly")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("return")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("static")
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("static")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("switch()")
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("throw")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("type")
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 4.166666666666667,
  "effort": 288.2859682197748,
  "length": 20,
  "time": 16.015887123320823,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("typeof")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("while()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext) {
        this.operators.add("with()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06796684021509736,
  "difficulty": 7.291666666666667,
  "effort": 1486.774629705255,
  "length": 48,
  "time": 82.59859053918083,
  "vocabulary": 19,
  "volume": 203.9005206452921,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        this.operators.add(",", node.elementTypes.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.040874628412503396,
  "difficulty": 5.25,
  "effort": 643.7753974969285,
  "length": 30,
  "time": 35.76529986094047,
  "vocabulary": 17,
  "volume": 122.6238852375102,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.ArrayPattern) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.048143178485693966,
  "difficulty": 4.958333333333334,
  "effort": 716.1297799746978,
  "length": 34,
  "time": 39.784987776372105,
  "vocabulary": 19,
  "volume": 144.4295354570819,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.CallExpression) {
        if (node.optional) {
            this.operators.add("?.")
        }
        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06837795148577189,
  "difficulty": 6.571428571428571,
  "effort": 1348.0224721480743,
  "length": 46,
  "time": 74.89013734155968,
  "vocabulary": 22,
  "volume": 205.13385445731566,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.CatchClause) {
        this.operators.add("catch")
        if (node.param) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04223711602625351,
  "difficulty": 5.25,
  "effort": 665.2345774134928,
  "length": 31,
  "time": 36.957476522971824,
  "vocabulary": 17,
  "volume": 126.71134807876054,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.IfStatement) {
        this.operators.add("if()")
        if (node.alternate) {
            this.operators.add("else")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04223711602625351,
  "difficulty": 5.25,
  "effort": 665.2345774134928,
  "length": 31,
  "time": 36.957476522971824,
  "vocabulary": 17,
  "volume": 126.71134807876054,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.JSXIdentifier) {
        this.operands.add(node.name)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.026651484454403226,
  "difficulty": 3.75,
  "effort": 299.8292001120363,
  "length": 21,
  "time": 16.657177784002016,
  "vocabulary": 14,
  "volume": 79.95445336320968,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.JSXText) {
        this.operands.add(JSON.stringify(node.value))
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03333333333333333,
  "difficulty": 3.5999999999999996,
  "effort": 359.99999999999994,
  "length": 25,
  "time": 19.999999999999996,
  "vocabulary": 16,
  "volume": 100,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.Literal) {
        if ("bigint" in node && node.bigint) {
            this.operands.add(\`\${node.bigint}n\`)
        } else if ("regex" in node && node.regex) {
            this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
        } else {
            this.operands.add(JSON.stringify(node.value))
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.12550630652980085,
  "difficulty": 9.285714285714286,
  "effort": 3496.2471104730243,
  "length": 76,
  "time": 194.2359505818347,
  "vocabulary": 31,
  "volume": 376.51891958940257,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.NewExpression) {
        this.operators.add("new")

        if (getPrecedence(node) >= getPrecedence(node.callee)) {
            this.operators.add("()")
        }

        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09017092918084942,
  "difficulty": 9,
  "effort": 2434.6150878829344,
  "length": 59,
  "time": 135.25639377127413,
  "vocabulary": 24,
  "volume": 270.51278754254827,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.ObjectPattern) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.048143178485693966,
  "difficulty": 4.958333333333334,
  "effort": 716.1297799746978,
  "length": 34,
  "time": 39.784987776372105,
  "vocabulary": 19,
  "volume": 144.4295354570819,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.Property) {
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
        if (!node.shorthand && !node.method) {
            this.operators.add(":")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09870923408096295,
  "difficulty": 11,
  "effort": 3257.4047246717773,
  "length": 63,
  "time": 180.9669291484321,
  "vocabulary": 26,
  "volume": 296.12770224288886,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.SwitchCase) {
        if (node.test) {
            this.operators.add("case")
        } else {
            this.operators.add("default")
        }
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.056639033512581136,
  "difficulty": 6.909090909090909,
  "effort": 1173.972694624409,
  "length": 40,
  "time": 65.22070525691161,
  "vocabulary": 19,
  "volume": 169.9171005377434,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.TSEnumMember) {
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.initializer) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05003910001730774,
  "difficulty": 5.409090909090909,
  "effort": 811.9981230081302,
  "length": 36,
  "time": 45.11100683378501,
  "vocabulary": 18,
  "volume": 150.11730005192322,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.TSFunctionType) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.048143178485693966,
  "difficulty": 4.958333333333334,
  "effort": 716.1297799746978,
  "length": 34,
  "time": 39.784987776372105,
  "vocabulary": 19,
  "volume": 144.4295354570819,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.TSImportType) {
        this.operators.add("import")
        this.operators.add("()")
        if (node.qualifier) {
            this.operators.add(".")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05281905001826929,
  "difficulty": 6.045454545454546,
  "effort": 957.9454980586113,
  "length": 38,
  "time": 53.21919433658952,
  "vocabulary": 18,
  "volume": 158.45715005480787,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.TSMappedType) {
        this.operators.add("{}")
        if (node.readonly) {
            if (typeof node.readonly === "string") {
                this.operators.add(node.readonly)
            }
            this.operators.add("readonly")
        }

        this.operators.add("[]")
        if (node.optional) {
            if (typeof node.optional === "string") {
                this.operators.add(node.optional)
            }
            this.operators.add("?")
        }
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.13907719585520842,
  "difficulty": 13.5,
  "effort": 5632.626432135941,
  "length": 91,
  "time": 312.92369067421896,
  "vocabulary": 24,
  "volume": 417.23158756562526,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.TSUnionType) {
        this.operators.add("|", node.types.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03752932501298081,
  "difficulty": 4.136363636363637,
  "effort": 465.7048058428983,
  "length": 27,
  "time": 25.872489213494347,
  "vocabulary": 18,
  "volume": 112.58797503894243,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts FunctionExpression\`
(this: ExtractTokensContext, node: TSESTree.TryStatement) {
        this.operators.add("try")
        if (node.finalizer) {
            this.operators.add("finally")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04223711602625351,
  "difficulty": 5.25,
  "effort": 665.2345774134928,
  "length": 31,
  "time": 36.957476522971824,
  "vocabulary": 17,
  "volume": 126.71134807876054,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
                extract &&
                Object.prototype.hasOwnProperty.call(EXTRACT_TOKENS, node.type)
            ) {
                extract.call(context, node, parent)
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.034666666666666665,
  "difficulty": 3.9000000000000004,
  "effort": 405.6,
  "length": 26,
  "time": 22.533333333333335,
  "vocabulary": 16,
  "volume": 104,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
                parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
            ) {
                this.operators.add("in")
            } else {
                this.operators.add("extends")
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.04586917501586544,
  "difficulty": 5.090909090909091,
  "effort": 700.5474002423085,
  "length": 33,
  "time": 38.91930001346159,
  "vocabulary": 18,
  "volume": 137.6075250475963,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
                parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
            )
                return
\` 1`] = `
Object {
  "deliveredBugs": 0.030836997651175767,
  "difficulty": 3.75,
  "effort": 346.9162235757274,
  "length": 25,
  "time": 19.273123531984854,
  "vocabulary": 13,
  "volume": 92.5109929535273,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
                parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
            )
                return
\` 1`] = `
Object {
  "deliveredBugs": 0.030836997651175767,
  "difficulty": 3.75,
  "effort": 346.9162235757274,
  "length": 25,
  "time": 19.273123531984854,
  "vocabulary": 13,
  "volume": 92.5109929535273,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
                parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
            )
                return
\` 1`] = `
Object {
  "deliveredBugs": 0.022704762504567322,
  "difficulty": 3.2142857142857144,
  "effort": 218.93878129404206,
  "length": 19,
  "time": 12.163265627446782,
  "vocabulary": 12,
  "volume": 68.11428751370197,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
                parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
            ) {
                this.operators.add("=>")
                return
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.05239110599913755,
  "difficulty": 6.545454545454546,
  "effort": 1028.7708087103374,
  "length": 37,
  "time": 57.15393381724097,
  "vocabulary": 19,
  "volume": 157.17331799741265,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.05805500935039566,
  "difficulty": 6.909090909090909,
  "effort": 1203.3220119900193,
  "length": 41,
  "time": 66.8512228883344,
  "vocabulary": 19,
  "volume": 174.165028051187,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
            node.argument &&
            getPrecedence(node) > getPrecedence(node.argument)
        ) {
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.027136557933034676,
  "difficulty": 4.714285714285714,
  "effort": 383.78846219577616,
  "length": 22,
  "time": 21.321581233098676,
  "vocabulary": 13,
  "volume": 81.40967379910403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
            node.operator === "*" ||
            node.operator === "/" ||
            node.operator === "%"
        ) {
            return 13
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.025094737505048096,
  "difficulty": 5,
  "effort": 376.42106257572146,
  "length": 21,
  "time": 20.912281254206746,
  "vocabulary": 12,
  "volume": 75.28421251514429,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
            node.operator === "<" ||
            node.operator === "<=" ||
            node.operator === ">" ||
            node.operator === ">=" ||
            node.operator === "in" ||
            node.operator === "instanceof"
        ) {
            return 10
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.05078957774291074,
  "difficulty": 6.333333333333334,
  "effort": 965.0019771153042,
  "length": 39,
  "time": 53.61122095085023,
  "vocabulary": 15,
  "volume": 152.36873322873222,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
            node.operator === "<<" ||
            node.operator === ">>" ||
            node.operator === ">>>"
        ) {
            return 11
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.025094737505048096,
  "difficulty": 5,
  "effort": 376.42106257572146,
  "length": 21,
  "time": 20.912281254206746,
  "vocabulary": 12,
  "volume": 75.28421251514429,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
            node.operator === "==" ||
            node.operator === "!=" ||
            node.operator === "===" ||
            node.operator === "!=="
        ) {
            return 9
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.03330395746326983,
  "difficulty": 5.571428571428571,
  "effort": 556.65186045751,
  "length": 27,
  "time": 30.925103358750555,
  "vocabulary": 13,
  "volume": 99.91187238980949,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
            node.params.length !== 1 ||
            node.params[0].type !== AST_NODE_TYPES.Identifier ||
            node.params[0].typeAnnotation
        ) {
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.05186313713864835,
  "difficulty": 4.846153846153846,
  "effort": 754.0102245541952,
  "length": 36,
  "time": 41.889456919677514,
  "vocabulary": 20,
  "volume": 155.58941141594505,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
            node.specifiers.some(
                (spec) => spec.type === AST_NODE_TYPES.ImportSpecifier,
            )
        ) {
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.05797261104228486,
  "difficulty": 5.714285714285714,
  "effort": 993.8161892963119,
  "length": 39,
  "time": 55.212010516461774,
  "vocabulary": 22,
  "volume": 173.9178331268546,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
            parent &&
            (parent.type === AST_NODE_TYPES.TemplateLiteral ||
                parent.type === AST_NODE_TYPES.TSTemplateLiteralType)
        ) {
            const index = parent.quasis.indexOf(node)
            if (index > 0) {
                open = "}"
            }
            if (index < parent.quasis.length - 1) {
                close = "\${"
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.08332748531566514,
  "difficulty": 9.375,
  "effort": 2343.585524503082,
  "length": 52,
  "time": 130.1991958057268,
  "vocabulary": 28,
  "volume": 249.9824559469954,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
        node.type === AST_NODE_TYPES.NewExpression ||
        node.type === AST_NODE_TYPES.CallExpression ||
        node.type === AST_NODE_TYPES.ImportExpression ||
        node.type === AST_NODE_TYPES.ChainExpression
    ) {
        return 18
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04441914075733871,
  "difficulty": 6.375,
  "effort": 849.5160669841028,
  "length": 35,
  "time": 47.19533705467238,
  "vocabulary": 14,
  "volume": 133.25742227201613,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
        node.type === AST_NODE_TYPES.UnaryExpression ||
        node.type === AST_NODE_TYPES.AwaitExpression
    ) {
        return 15
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.022704762504567322,
  "difficulty": 4.5,
  "effort": 306.51429381165883,
  "length": 19,
  "time": 17.028571878425492,
  "vocabulary": 12,
  "volume": 68.11428751370197,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (
        node.type === AST_NODE_TYPES.YieldExpression ||
        node.type === AST_NODE_TYPES.AssignmentExpression
    ) {
        return 2
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.022704762504567322,
  "difficulty": 4.5,
  "effort": 306.51429381165883,
  "length": 19,
  "time": 17.028571878425492,
  "vocabulary": 12,
  "volume": 68.11428751370197,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (!node.global) {
            this.operators.add("module")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.01499087034742829,
  "difficulty": 2.5,
  "effort": 112.43152760571218,
  "length": 13,
  "time": 6.246195978095121,
  "vocabulary": 11,
  "volume": 44.97261104228487,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (!node.shorthand && !node.method) {
            this.operators.add(":")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.022202638308846556,
  "difficulty": 3.4285714285714284,
  "effort": 228.36999403385028,
  "length": 18,
  "time": 12.68722189076946,
  "vocabulary": 13,
  "volume": 66.60791492653966,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if ("bigint" in node && node.bigint) {
            this.operands.add(\`\${node.bigint}n\`)
        } else if ("regex" in node && node.regex) {
            this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
        } else {
            this.operands.add(JSON.stringify(node.value))
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.09906893204852746,
  "difficulty": 6.611111111111111,
  "effort": 1964.8671522957943,
  "length": 64,
  "time": 109.15928623865524,
  "vocabulary": 25,
  "volume": 297.20679614558236,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if ("regex" in node && node.regex) {
            this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
        } else {
            this.operands.add(JSON.stringify(node.value))
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.06295654972649557,
  "difficulty": 5.75,
  "effort": 1086.0004827820485,
  "length": 43,
  "time": 60.33336015455825,
  "vocabulary": 21,
  "volume": 188.86964917948671,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (count === 1) {
            this.total.push(e)
            this.distinct.add(e)
        } else {
            for (let index = 0; index < count; index++) {
                this.total.push(e)
                this.distinct.add(e)
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.07135090589819676,
  "difficulty": 13.799999999999999,
  "effort": 2953.9275041853457,
  "length": 48,
  "time": 164.10708356585255,
  "vocabulary": 22,
  "volume": 214.05271769459029,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (getPrecedence(node) > getPrecedence(node.argument)) {
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.02150977500432694,
  "difficulty": 3.2142857142857144,
  "effort": 207.41568754172408,
  "length": 18,
  "time": 11.523093752318005,
  "vocabulary": 12,
  "volume": 64.52932501298082,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (getPrecedence(node) > getPrecedence(node.object)) {
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.02150977500432694,
  "difficulty": 3.2142857142857144,
  "effort": 207.41568754172408,
  "length": 18,
  "time": 11.523093752318005,
  "vocabulary": 12,
  "volume": 64.52932501298082,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.02150977500432694,
  "difficulty": 3.2142857142857144,
  "effort": 207.41568754172408,
  "length": 18,
  "time": 11.523093752318005,
  "vocabulary": 12,
  "volume": 64.52932501298082,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (getPrecedence(node) >= getPrecedence(node.callee)) {
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.02150977500432694,
  "difficulty": 3.2142857142857144,
  "effort": 207.41568754172408,
  "length": 18,
  "time": 11.523093752318005,
  "vocabulary": 12,
  "volume": 64.52932501298082,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.02150977500432694,
  "difficulty": 3.2142857142857144,
  "effort": 207.41568754172408,
  "length": 18,
  "time": 11.523093752318005,
  "vocabulary": 12,
  "volume": 64.52932501298082,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (getPrecedence(node) >= getPrecedence(node.test)) {
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.02150977500432694,
  "difficulty": 3.2142857142857144,
  "effort": 207.41568754172408,
  "length": 18,
  "time": 11.523093752318005,
  "vocabulary": 12,
  "volume": 64.52932501298082,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (index < parent.quasis.length - 1) {
                close = "\${"
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.01726871868465843,
  "difficulty": 3,
  "effort": 155.4184681619259,
  "length": 14,
  "time": 8.634359342329216,
  "vocabulary": 13,
  "volume": 51.80615605397529,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (index > 0) {
                open = "}"
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2,
  "effort": 48,
  "length": 8,
  "time": 2.6666666666666665,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.abstract) {
            this.operators.add("abstract")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.accessibility) this.operators.add(node.accessibility)
\` 1`] = `
Object {
  "deliveredBugs": 0.013,
  "difficulty": 2.0999999999999996,
  "effort": 81.89999999999999,
  "length": 13,
  "time": 4.55,
  "vocabulary": 8,
  "volume": 39,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.alternate) {
            this.operators.add("else")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.030836997651175767,
  "difficulty": 4.0625,
  "effort": 375.8259088737047,
  "length": 25,
  "time": 20.87921715965026,
  "vocabulary": 13,
  "volume": 92.5109929535273,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.async) {
            this.operators.add("async")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.attributes) {
            this.operators.add(",")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.body.type === AST_NODE_TYPES.ObjectExpression) {
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.022844129532345624,
  "difficulty": 2.5,
  "effort": 171.33097149259217,
  "length": 18,
  "time": 9.51838730514401,
  "vocabulary": 14,
  "volume": 68.53238859703687,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.computed) {
                this.operators.add("[]")
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.computed) {
            this.operators.add("[]")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.computed) {
            this.operators.add("[]")
        } else {
            this.operators.add(".")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.025094737505048096,
  "difficulty": 3.5714285714285716,
  "effort": 268.8721875540868,
  "length": 21,
  "time": 14.937343753004821,
  "vocabulary": 12,
  "volume": 75.28421251514429,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.computed) this.operators.add("[]")
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 1.5,
  "effort": 52.303762523798156,
  "length": 11,
  "time": 2.905764584655453,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.const) this.operators.add("const")
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 1.5,
  "effort": 52.303762523798156,
  "length": 11,
  "time": 2.905764584655453,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.constraint) {
            if (
                parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
            ) {
                this.operators.add("in")
            } else {
                this.operators.add("extends")
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.05380708183695208,
  "difficulty": 5.25,
  "effort": 847.4615389319953,
  "length": 38,
  "time": 47.08119660733307,
  "vocabulary": 19,
  "volume": 161.42124551085624,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.declare) this.operators.add("declare")
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 1.5,
  "effort": 52.303762523798156,
  "length": 11,
  "time": 2.905764584655453,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.default) {
            this.operators.add("=")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.delegate) {
            this.operators.add("*")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.export) this.operators.add("export")
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 1.5,
  "effort": 52.303762523798156,
  "length": 11,
  "time": 2.905764584655453,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.exportKind === "type") {
                this.operators.add("type")
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.016144014220307392,
  "difficulty": 2.916666666666667,
  "effort": 141.26012442768968,
  "length": 14,
  "time": 7.847784690427204,
  "vocabulary": 11,
  "volume": 48.43204266092217,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.exportKind === "type") {
            this.operators.add("type")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.016144014220307392,
  "difficulty": 2.916666666666667,
  "effort": 141.26012442768968,
  "length": 14,
  "time": 7.847784690427204,
  "vocabulary": 11,
  "volume": 48.43204266092217,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.exported) {
            this.operators.add("as")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.extends) {
            this.operators.add("extends")
            this.operators.add(",", node.extends.length - 1)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.03516201536047667,
  "difficulty": 4.666666666666667,
  "effort": 492.2682150466734,
  "length": 27,
  "time": 27.348234169259634,
  "vocabulary": 15,
  "volume": 105.48604608143,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.finalizer) {
            this.operators.add("finally")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.generator) {
            // It cannot actually be used.
            this.operators.add("*")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.generator) {
            this.operators.add("*")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.03516201536047667,
  "difficulty": 4.666666666666667,
  "effort": 492.2682150466734,
  "length": 27,
  "time": 27.348234169259634,
  "vocabulary": 15,
  "volume": 105.48604608143,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.implements) {
            this.operators.add("implements")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.importKind === "type") {
            this.operators.add("type")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.016144014220307392,
  "difficulty": 2.916666666666667,
  "effort": 141.26012442768968,
  "length": 14,
  "time": 7.847784690427204,
  "vocabulary": 11,
  "volume": 48.43204266092217,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.init) {
            this.operators.add("=")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.initializer) {
            this.operators.add("=")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
\` 1`] = `
Object {
  "deliveredBugs": 0.025094737505048096,
  "difficulty": 3.9285714285714284,
  "effort": 295.75940630949543,
  "length": 21,
  "time": 16.431078128305302,
  "vocabulary": 12,
  "volume": 75.28421251514429,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.local.name !== node.exported.name) {
            this.operators.add("as")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.024669598120940616,
  "difficulty": 3.125,
  "effort": 231.27748238381827,
  "length": 20,
  "time": 12.848749021323236,
  "vocabulary": 13,
  "volume": 74.00879436282185,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.local.name !== node.imported.name) {
            this.operators.add("as")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.024669598120940616,
  "difficulty": 3.125,
  "effort": 231.27748238381827,
  "length": 20,
  "time": 12.848749021323236,
  "vocabulary": 13,
  "volume": 74.00879436282185,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.operator === "&") {
            return 8
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.operator === "&&") {
            return 5
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.operator === "**") {
            return 14
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.operator === "+" || node.operator === "-") {
            return 12
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.01729715809318649,
  "difficulty": 4.199999999999999,
  "effort": 217.94419197414973,
  "length": 15,
  "time": 12.108010665230541,
  "vocabulary": 11,
  "volume": 51.89147427955947,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.operator === "^") {
            return 7
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.operator === "|") {
            return 6
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.operator === "||" || node.operator === "??") {
            return 4
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.01729715809318649,
  "difficulty": 4.199999999999999,
  "effort": 217.94419197414973,
  "length": 15,
  "time": 12.108010665230541,
  "vocabulary": 11,
  "volume": 51.89147427955947,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.optional) {
            if (typeof node.optional === "string") {
                this.operators.add(node.optional)
            }
            this.operators.add("?")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.03577091727536389,
  "difficulty": 6,
  "effort": 643.87651095655,
  "length": 29,
  "time": 35.770917275363885,
  "vocabulary": 13,
  "volume": 107.31275182609167,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.optional) {
            this.operators.add("?.")
            if (node.computed) {
                this.operators.add("[]")
            }
        } else if (node.computed) {
            this.operators.add("[]")
        } else {
            this.operators.add(".")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.058379442138216595,
  "difficulty": 6.111111111111112,
  "effort": 1070.289772533971,
  "length": 46,
  "time": 59.46054291855395,
  "vocabulary": 14,
  "volume": 175.13832641464978,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.optional) {
            this.operators.add("?.")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.optional) this.operators.add("?")
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 1.5,
  "effort": 52.303762523798156,
  "length": 11,
  "time": 2.905764584655453,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.param) {
            this.operators.add("()")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.prefix) {
            return 15
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.qualifier) {
            this.operators.add(".")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.readonly) {
            if (typeof node.readonly === "string") {
                this.operators.add(node.readonly)
            }
            this.operators.add("readonly")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.03577091727536389,
  "difficulty": 6,
  "effort": 643.87651095655,
  "length": 29,
  "time": 35.770917275363885,
  "vocabulary": 13,
  "volume": 107.31275182609167,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.readonly) this.operators.add("readonly")
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 1.5,
  "effort": 52.303762523798156,
  "length": 11,
  "time": 2.905764584655453,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.source) {
            this.operators.add("from")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.specifiers.length) {
            if (node.exportKind === "type") {
                this.operators.add("type")
            }
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.059768925020673144,
  "difficulty": 7,
  "effort": 1255.147425434136,
  "length": 43,
  "time": 69.73041252411866,
  "vocabulary": 18,
  "volume": 179.30677506201943,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.specifiers.length) {
            this.operators.add("from")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.016144014220307392,
  "difficulty": 2,
  "effort": 96.86408532184434,
  "length": 14,
  "time": 5.3813380734357965,
  "vocabulary": 11,
  "volume": 48.43204266092217,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.static) this.operators.add("static")
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 1.5,
  "effort": 52.303762523798156,
  "length": 11,
  "time": 2.905764584655453,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.superClass) {
            this.operators.add("extends")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.test) {
            this.operators.add("case")
        } else {
            this.operators.add("default")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.025094737505048096,
  "difficulty": 3.5714285714285716,
  "effort": 268.8721875540868,
  "length": 21,
  "time": 14.937343753004821,
  "vocabulary": 12,
  "volume": 75.28421251514429,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.type === AST_NODE_TYPES.ArrowFunctionExpression) {
        return 2
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.012180403014586996,
  "difficulty": 2.5,
  "effort": 91.35302260940247,
  "length": 11,
  "time": 5.075167922744582,
  "vocabulary": 10,
  "volume": 36.541209043760986,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.type === AST_NODE_TYPES.BinaryExpression) {
        if (node.operator === "|") {
            return 6
        }
        if (node.operator === "^") {
            return 7
        }
        if (node.operator === "&") {
            return 8
        }
        if (
            node.operator === "==" ||
            node.operator === "!=" ||
            node.operator === "===" ||
            node.operator === "!=="
        ) {
            return 9
        }
        if (
            node.operator === "<" ||
            node.operator === "<=" ||
            node.operator === ">" ||
            node.operator === ">=" ||
            node.operator === "in" ||
            node.operator === "instanceof"
        ) {
            return 10
        }
        if (
            node.operator === "<<" ||
            node.operator === ">>" ||
            node.operator === ">>>"
        ) {
            return 11
        }
        if (node.operator === "+" || node.operator === "-") {
            return 12
        }
        if (
            node.operator === "*" ||
            node.operator === "/" ||
            node.operator === "%"
        ) {
            return 13
        }
        if (node.operator === "**") {
            return 14
        }
        throw new Error(\`Unknown operator precedence:\${node.operator}\`)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.3295127875425482,
  "difficulty": 9.692307692307692,
  "effort": 9581.21797623717,
  "length": 177,
  "time": 532.2898875687317,
  "vocabulary": 48,
  "volume": 988.5383626276446,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.type === AST_NODE_TYPES.ConditionalExpression) {
        return 3
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.012180403014586996,
  "difficulty": 2.5,
  "effort": 91.35302260940247,
  "length": 11,
  "time": 5.075167922744582,
  "vocabulary": 10,
  "volume": 36.541209043760986,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.type === AST_NODE_TYPES.LogicalExpression) {
        if (node.operator === "||" || node.operator === "??") {
            return 4
        }
        if (node.operator === "&&") {
            return 5
        }
        throw new Error(\`Unknown operator precedence:\${node.operator}\`)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06243204266092216,
  "difficulty": 6.923076923076923,
  "effort": 1296.6655014191526,
  "length": 42,
  "time": 72.03697230106404,
  "vocabulary": 22,
  "volume": 187.29612798276648,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.type === AST_NODE_TYPES.MemberExpression) {
        return 19
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.012180403014586996,
  "difficulty": 2.5,
  "effort": 91.35302260940247,
  "length": 11,
  "time": 5.075167922744582,
  "vocabulary": 10,
  "volume": 36.541209043760986,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.type === AST_NODE_TYPES.SequenceExpression) {
        return 1
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.012180403014586996,
  "difficulty": 2.5,
  "effort": 91.35302260940247,
  "length": 11,
  "time": 5.075167922744582,
  "vocabulary": 10,
  "volume": 36.541209043760986,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.type === AST_NODE_TYPES.TSAsExpression) {
        return 14.5
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.012180403014586996,
  "difficulty": 2.5,
  "effort": 91.35302260940247,
  "length": 11,
  "time": 5.075167922744582,
  "vocabulary": 10,
  "volume": 36.541209043760986,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.type === AST_NODE_TYPES.UpdateExpression) {
        if (node.prefix) {
            return 15
        }
        return 16
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.02150977500432694,
  "difficulty": 2.8571428571428568,
  "effort": 184.36950003708805,
  "length": 18,
  "time": 10.242750002060447,
  "vocabulary": 12,
  "volume": 64.52932501298082,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (node.value) {
            this.operators.add("=")
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 2,
  "effort": 79.72627427729671,
  "length": 12,
  "time": 4.429237459849817,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (parent) {
            if (
                parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
            )
                return
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.10195026032264605,
  "difficulty": 7.846153846153847,
  "effort": 2399.7522814407457,
  "length": 72,
  "time": 133.31957119115253,
  "vocabulary": 19,
  "volume": 305.85078096793814,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (parent) {
            if (
                parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
            ) {
                this.operators.add("=>")
                return
            }
            if (parent.type === AST_NODE_TYPES.TSTypePredicate) {
                return
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.07203213491478938,
  "difficulty": 7.666666666666667,
  "effort": 1656.7391030401557,
  "length": 50,
  "time": 92.04106128000865,
  "vocabulary": 20,
  "volume": 216.09640474436813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (parent.type === AST_NODE_TYPES.TSTypePredicate) {
                return
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.010566416671474375,
  "difficulty": 2.5,
  "effort": 79.24812503605781,
  "length": 10,
  "time": 4.402673613114323,
  "vocabulary": 9,
  "volume": 31.699250014423125,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (typeof node.optional === "string") {
                this.operators.add(node.optional)
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.020314787504086555,
  "difficulty": 4,
  "effort": 243.77745004903863,
  "length": 17,
  "time": 13.543191669391035,
  "vocabulary": 12,
  "volume": 60.94436251225966,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts IfStatement\`
if (typeof node.readonly === "string") {
                this.operators.add(node.readonly)
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.020314787504086555,
  "difficulty": 4,
  "effort": 243.77745004903863,
  "length": 17,
  "time": 13.543191669391035,
  "vocabulary": 12,
  "volume": 60.94436251225966,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ImportDeclaration\`
import { AST_NODE_TYPES } from "@typescript-eslint/types"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ImportDeclaration\`
import { walk } from "./walker"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ImportDeclaration\`
import type * as ESTree from "estree"
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2.5,
  "effort": 49.12871113600807,
  "length": 7,
  "time": 2.7293728408893374,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ImportDeclaration\`
import type { TSESTree } from "@typescript-eslint/types"
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ImportDeclaration\`
import type { Visitor } from "./visitor"
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ImportNamespaceSpecifier\`
* as ESTree
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ImportSpecifier\`
AST_NODE_TYPES
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ImportSpecifier\`
TSESTree
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ImportSpecifier\`
Visitor
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ImportSpecifier\`
walk
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"!"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"!="
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"!=="
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"\${"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"%"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"&"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"&&"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"*"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"**"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"+"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"./visitor"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"./walker"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"/"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"<"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"<<"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"<="
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"="
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"=="
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"==="
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
">"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
">="
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
">>"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
">>>"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"??"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"@typescript-eslint/types"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"^"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"\`"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"|"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"||"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"}"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"-"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"any"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"bigint"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"boolean"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"const"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"estree"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"in"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"instanceof"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"intrinsic"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"never"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"null"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"number"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"object"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"regex"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"require"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"string"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"super"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"symbol"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"this"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"typeof"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"undefined"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"unknown"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
"void"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
0
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
1
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
2
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
3
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
4
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
5
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
6
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
7
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
8
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
9
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
10
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
11
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
12
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
13
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
14
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
14.5
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
15
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
16
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
18
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Literal\`
19
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
!node.shorthand && !node.method
\` 1`] = `
Object {
  "deliveredBugs": 0.007754887502163467,
  "difficulty": 2,
  "effort": 46.529325012980806,
  "length": 9,
  "time": 2.584962500721156,
  "vocabulary": 6,
  "volume": 23.264662506490403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
!parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.039471356993504986,
  "difficulty": 6.428571428571429,
  "effort": 761.2333134461676,
  "length": 32,
  "time": 42.2907396358982,
  "vocabulary": 13,
  "volume": 118.41407098051495,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
"bigint" in node && node.bigint
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 2,
  "effort": 36.18947501009619,
  "length": 7,
  "time": 2.0105263894497885,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
"regex" in node && node.regex
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 2,
  "effort": 36.18947501009619,
  "length": 7,
  "time": 2.0105263894497885,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
extract &&
                Object.prototype.hasOwnProperty.call(EXTRACT_TOKENS, node.type)
\` 1`] = `
Object {
  "deliveredBugs": 0.017924812503605784,
  "difficulty": 2,
  "effort": 107.5488750216347,
  "length": 15,
  "time": 5.974937501201928,
  "vocabulary": 12,
  "volume": 53.77443751081735,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.argument &&
            getPrecedence(node) > getPrecedence(node.argument)
\` 1`] = `
Object {
  "deliveredBugs": 0.012165204662249619,
  "difficulty": 4.666666666666667,
  "effort": 170.31286527149467,
  "length": 13,
  "time": 9.461825848416371,
  "vocabulary": 7,
  "volume": 36.49561398674886,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.assertions && node.assertions.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0069657842846620865,
  "difficulty": 1.6666666666666667,
  "effort": 34.82892142331043,
  "length": 9,
  "time": 1.9349400790728017,
  "vocabulary": 5,
  "volume": 20.89735285398626,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.kind === "get" || node.kind === "set"
\` 1`] = `
Object {
  "deliveredBugs": 0.010293634714211216,
  "difficulty": 2.25,
  "effort": 69.4820343209257,
  "length": 11,
  "time": 3.860113017829206,
  "vocabulary": 7,
  "volume": 30.880904142633646,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "*" ||
            node.operator === "/"
\` 1`] = `
Object {
  "deliveredBugs": 0.010293634714211216,
  "difficulty": 2.25,
  "effort": 69.4820343209257,
  "length": 11,
  "time": 3.860113017829206,
  "vocabulary": 7,
  "volume": 30.880904142633646,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "*" ||
            node.operator === "/" ||
            node.operator === "%"
\` 1`] = `
Object {
  "deliveredBugs": 0.017,
  "difficulty": 2.7,
  "effort": 137.70000000000002,
  "length": 17,
  "time": 7.650000000000001,
  "vocabulary": 8,
  "volume": 51,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "+" || node.operator === "-"
\` 1`] = `
Object {
  "deliveredBugs": 0.010293634714211216,
  "difficulty": 2.25,
  "effort": 69.4820343209257,
  "length": 11,
  "time": 3.860113017829206,
  "vocabulary": 7,
  "volume": 30.880904142633646,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "<" ||
            node.operator === "<="
\` 1`] = `
Object {
  "deliveredBugs": 0.010293634714211216,
  "difficulty": 2.25,
  "effort": 69.4820343209257,
  "length": 11,
  "time": 3.860113017829206,
  "vocabulary": 7,
  "volume": 30.880904142633646,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "<" ||
            node.operator === "<=" ||
            node.operator === ">"
\` 1`] = `
Object {
  "deliveredBugs": 0.017,
  "difficulty": 2.7,
  "effort": 137.70000000000002,
  "length": 17,
  "time": 7.650000000000001,
  "vocabulary": 8,
  "volume": 51,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "<" ||
            node.operator === "<=" ||
            node.operator === ">" ||
            node.operator === ">="
\` 1`] = `
Object {
  "deliveredBugs": 0.02430275834439106,
  "difficulty": 3,
  "effort": 218.72482509951953,
  "length": 23,
  "time": 12.15137917219553,
  "vocabulary": 9,
  "volume": 72.90827503317318,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "<" ||
            node.operator === "<=" ||
            node.operator === ">" ||
            node.operator === ">=" ||
            node.operator === "in"
\` 1`] = `
Object {
  "deliveredBugs": 0.03211197158391117,
  "difficulty": 3.2142857142857144,
  "effort": 309.65115455914344,
  "length": 29,
  "time": 17.202841919952412,
  "vocabulary": 10,
  "volume": 96.33591475173351,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "<" ||
            node.operator === "<=" ||
            node.operator === ">" ||
            node.operator === ">=" ||
            node.operator === "in" ||
            node.operator === "instanceof"
\` 1`] = `
Object {
  "deliveredBugs": 0.040360035550768475,
  "difficulty": 3.375,
  "effort": 408.6453599515308,
  "length": 35,
  "time": 22.702519997307267,
  "vocabulary": 11,
  "volume": 121.08010665230542,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "<<" ||
            node.operator === ">>"
\` 1`] = `
Object {
  "deliveredBugs": 0.010293634714211216,
  "difficulty": 2.25,
  "effort": 69.4820343209257,
  "length": 11,
  "time": 3.860113017829206,
  "vocabulary": 7,
  "volume": 30.880904142633646,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "<<" ||
            node.operator === ">>" ||
            node.operator === ">>>"
\` 1`] = `
Object {
  "deliveredBugs": 0.017,
  "difficulty": 2.7,
  "effort": 137.70000000000002,
  "length": 17,
  "time": 7.650000000000001,
  "vocabulary": 8,
  "volume": 51,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "==" ||
            node.operator === "!="
\` 1`] = `
Object {
  "deliveredBugs": 0.010293634714211216,
  "difficulty": 2.25,
  "effort": 69.4820343209257,
  "length": 11,
  "time": 3.860113017829206,
  "vocabulary": 7,
  "volume": 30.880904142633646,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "==" ||
            node.operator === "!=" ||
            node.operator === "==="
\` 1`] = `
Object {
  "deliveredBugs": 0.017,
  "difficulty": 2.7,
  "effort": 137.70000000000002,
  "length": 17,
  "time": 7.650000000000001,
  "vocabulary": 8,
  "volume": 51,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "==" ||
            node.operator === "!=" ||
            node.operator === "===" ||
            node.operator === "!=="
\` 1`] = `
Object {
  "deliveredBugs": 0.02430275834439106,
  "difficulty": 3,
  "effort": 218.72482509951953,
  "length": 23,
  "time": 12.15137917219553,
  "vocabulary": 9,
  "volume": 72.90827503317318,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.operator === "||" || node.operator === "??"
\` 1`] = `
Object {
  "deliveredBugs": 0.010293634714211216,
  "difficulty": 2.25,
  "effort": 69.4820343209257,
  "length": 11,
  "time": 3.860113017829206,
  "vocabulary": 7,
  "volume": 30.880904142633646,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.params.length !== 1 ||
            node.params[0].type !== AST_NODE_TYPES.Identifier
\` 1`] = `
Object {
  "deliveredBugs": 0.022704762504567322,
  "difficulty": 2.5,
  "effort": 170.28571878425493,
  "length": 19,
  "time": 9.460317710236385,
  "vocabulary": 12,
  "volume": 68.11428751370197,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.params.length !== 1 ||
            node.params[0].type !== AST_NODE_TYPES.Identifier ||
            node.params[0].typeAnnotation
\` 1`] = `
Object {
  "deliveredBugs": 0.03330395746326983,
  "difficulty": 3.111111111111111,
  "effort": 310.8369363238518,
  "length": 27,
  "time": 17.26871868465843,
  "vocabulary": 13,
  "volume": 99.91187238980949,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.type === AST_NODE_TYPES.NewExpression ||
        node.type === AST_NODE_TYPES.CallExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.type === AST_NODE_TYPES.NewExpression ||
        node.type === AST_NODE_TYPES.CallExpression ||
        node.type === AST_NODE_TYPES.ImportExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.02430275834439106,
  "difficulty": 3,
  "effort": 218.72482509951953,
  "length": 23,
  "time": 12.15137917219553,
  "vocabulary": 9,
  "volume": 72.90827503317318,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.type === AST_NODE_TYPES.NewExpression ||
        node.type === AST_NODE_TYPES.CallExpression ||
        node.type === AST_NODE_TYPES.ImportExpression ||
        node.type === AST_NODE_TYPES.ChainExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.03432659031383608,
  "difficulty": 3.4285714285714284,
  "effort": 353.07350037088537,
  "length": 31,
  "time": 19.615194465049186,
  "vocabulary": 10,
  "volume": 102.97977094150824,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.type === AST_NODE_TYPES.UnaryExpression ||
        node.type === AST_NODE_TYPES.AwaitExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
node.type === AST_NODE_TYPES.YieldExpression ||
        node.type === AST_NODE_TYPES.AssignmentExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent &&
                parent.type === AST_NODE_TYPES.TSMappedType
\` 1`] = `
Object {
  "deliveredBugs": 0.008422064766172813,
  "difficulty": 1.875,
  "effort": 47.374114309722074,
  "length": 9,
  "time": 2.6318952394290043,
  "vocabulary": 7,
  "volume": 25.26619429851844,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
\` 1`] = `
Object {
  "deliveredBugs": 0.01584962500721156,
  "difficulty": 2,
  "effort": 95.09775004326937,
  "length": 15,
  "time": 5.2832083357371875,
  "vocabulary": 9,
  "volume": 47.548875021634686,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent &&
            (parent.type === AST_NODE_TYPES.TemplateLiteral ||
                parent.type === AST_NODE_TYPES.TSTemplateLiteralType)
\` 1`] = `
Object {
  "deliveredBugs": 0.019931568569324175,
  "difficulty": 4.5,
  "effort": 269.07617568587636,
  "length": 18,
  "time": 14.948676426993131,
  "vocabulary": 10,
  "volume": 59.794705707972525,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method)
\` 1`] = `
Object {
  "deliveredBugs": 0.025094737505048096,
  "difficulty": 5,
  "effort": 376.42106257572146,
  "length": 21,
  "time": 20.912281254206746,
  "vocabulary": 12,
  "volume": 75.28421251514429,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.03577091727536389,
  "difficulty": 6,
  "effort": 643.87651095655,
  "length": 29,
  "time": 35.770917275363885,
  "vocabulary": 13,
  "volume": 107.31275182609167,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type !== AST_NODE_TYPES.Property || !parent.method
\` 1`] = `
Object {
  "deliveredBugs": 0.012679700005769252,
  "difficulty": 2.4,
  "effort": 91.2938400415386,
  "length": 12,
  "time": 5.0718800023077,
  "vocabulary": 9,
  "volume": 38.03910001730775,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name
\` 1`] = `
Object {
  "deliveredBugs": 0.01882425920436172,
  "difficulty": 1.9285714285714288,
  "effort": 108.91178539666426,
  "length": 17,
  "time": 6.050654744259125,
  "vocabulary": 10,
  "volume": 56.472777613085164,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
\` 1`] = `
Object {
  "deliveredBugs": 0.026522309076219282,
  "difficulty": 2.25,
  "effort": 179.02558626448015,
  "length": 23,
  "time": 9.94586590358223,
  "vocabulary": 11,
  "volume": 79.56692722865785,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name
\` 1`] = `
Object {
  "deliveredBugs": 0.01882425920436172,
  "difficulty": 1.9285714285714288,
  "effort": 108.91178539666426,
  "length": 17,
  "time": 6.050654744259125,
  "vocabulary": 10,
  "volume": 56.472777613085164,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
\` 1`] = `
Object {
  "deliveredBugs": 0.026522309076219282,
  "difficulty": 2.25,
  "effort": 179.02558626448015,
  "length": 23,
  "time": 9.94586590358223,
  "vocabulary": 11,
  "volume": 79.56692722865785,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand
\` 1`] = `
Object {
  "deliveredBugs": 0.011,
  "difficulty": 1.7999999999999998,
  "effort": 59.39999999999999,
  "length": 11,
  "time": 3.2999999999999994,
  "vocabulary": 8,
  "volume": 33,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
\` 1`] = `
Object {
  "deliveredBugs": 0.01882425920436172,
  "difficulty": 1.9285714285714288,
  "effort": 108.91178539666426,
  "length": 17,
  "time": 6.050654744259125,
  "vocabulary": 10,
  "volume": 56.472777613085164,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
\` 1`] = `
Object {
  "deliveredBugs": 0.013736341672916687,
  "difficulty": 1.75,
  "effort": 72.1157937828126,
  "length": 13,
  "time": 4.0064329879340335,
  "vocabulary": 9,
  "volume": 41.20902501875006,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node
\` 1`] = `
Object {
  "deliveredBugs": 0.013736341672916687,
  "difficulty": 1.75,
  "effort": 72.1157937828126,
  "length": 13,
  "time": 4.0064329879340335,
  "vocabulary": 9,
  "volume": 41.20902501875006,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
\` 1`] = `
Object {
  "deliveredBugs": 0.031134884567735683,
  "difficulty": 4,
  "effort": 373.6186148128282,
  "length": 27,
  "time": 20.75658971182379,
  "vocabulary": 11,
  "volume": 93.40465370320705,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts LogicalExpression\`
parent.type === AST_NODE_TYPES.TemplateLiteral ||
                parent.type === AST_NODE_TYPES.TSTemplateLiteralType
\` 1`] = `
Object {
  "deliveredBugs": 0.015,
  "difficulty": 2.4000000000000004,
  "effort": 108.00000000000001,
  "length": 15,
  "time": 6.000000000000001,
  "vocabulary": 8,
  "volume": 45,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.ArrowFunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.AssignmentExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.AwaitExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.BinaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.CallExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.ChainExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.ConditionalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.ExportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.Identifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.ImportExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.ImportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.LogicalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.MemberExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.MethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.NewExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.ObjectExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.Property
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.SequenceExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.TSAbstractMethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.TSAsExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.TSConstructorType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.TSFunctionType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.TSMappedType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.TSTemplateLiteralType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.TSTypePredicate
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.TemplateLiteral
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.UnaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.UpdateExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
AST_NODE_TYPES.YieldExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
EXTRACT_TOKENS[node.type]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
JSON.stringify
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
Object.prototype
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
Object.prototype.hasOwnProperty
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
Object.prototype.hasOwnProperty.call
\` 1`] = `
Object {
  "deliveredBugs": 0.005417832221403845,
  "difficulty": 0.5,
  "effort": 8.126748332105768,
  "length": 7,
  "time": 0.45148601845032044,
  "vocabulary": 5,
  "volume": 16.253496664211536,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
extract.call
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.abstract
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.accessibility
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.alternate
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.argument
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.arguments
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.arguments.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.assertions
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.assertions.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.async
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.attributes
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.bigint
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.body
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.body.type
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.callee
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.computed
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.const
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.constraint
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.declarations
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.declarations.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.declare
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.default
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.delegate
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.elementTypes
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.elementTypes.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.elements
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.elements.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.export
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.exportKind
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.exported
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.exported.name
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.expressions
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.expressions.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.extends
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.extends.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.finalizer
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.generator
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.global
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.implements
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.implements.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.importKind
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.imported
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.imported.name
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.init
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.initializer
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.kind
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.local
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.local.name
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.members
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.members.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.method
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.name
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.object
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.operator
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.optional
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.param
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.params
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.params.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.params[0]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.params[0].type
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.params[0].typeAnnotation
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.prefix
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.properties
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.properties.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.qualifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.readonly
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.regex
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.regex.flags
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.regex.pattern
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.right
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.shorthand
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.source
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.specifiers
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.specifiers.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.specifiers.some
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.static
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.superClass
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.test
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.type
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.types
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.types.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.value
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
node.value.cooked
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.exported
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.imported
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.imported.name
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.local
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.local.name
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.method
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.quasis
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.quasis.indexOf
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.quasis.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.returnType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.shorthand
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.type
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.typeParameter
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
parent.value
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
spec.type
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
this.distinct
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
this.distinct.add
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
this.distinct.size
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
this.operands
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
this.operands.add
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
this.operators
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
this.operators.add
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
this.total
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
this.total.length
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MemberExpression\`
this.total.push
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MethodDefinition\`
public add(e: T, count = 1): void {
        if (count === 1) {
            this.total.push(e)
            this.distinct.add(e)
        } else {
            for (let index = 0; index < count; index++) {
                this.total.push(e)
                this.distinct.add(e)
            }
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09668271254399054,
  "difficulty": 18.125,
  "effort": 5257.122494579486,
  "length": 61,
  "time": 292.06236080997144,
  "vocabulary": 27,
  "volume": 290.0481376319716,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MethodDefinition\`
public get all(): T[] {
        return this.total
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014339850002884626,
  "difficulty": 4,
  "effort": 172.07820003461552,
  "length": 12,
  "time": 9.559900001923085,
  "vocabulary": 12,
  "volume": 43.01955000865388,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MethodDefinition\`
public get distinctSize(): number {
        return this.distinct.size
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015534837503125011,
  "difficulty": 3.5,
  "effort": 163.11579378281263,
  "length": 13,
  "time": 9.06198854348959,
  "vocabulary": 12,
  "volume": 46.604512509375034,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts MethodDefinition\`
public get totalSize(): number {
        return this.total.length
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.015534837503125011,
  "difficulty": 3.5,
  "effort": 163.11579378281263,
  "length": 13,
  "time": 9.06198854348959,
  "vocabulary": 12,
  "volume": 46.604512509375034,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts NewExpression\`
new Error(\`Unknown operator precedence:\${node.operator}\`)
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 1.5,
  "effort": 36,
  "length": 8,
  "time": 2,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts NewExpression\`
new ExtractTokensContext()
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts NewExpression\`
new Set<T>()
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts NewExpression\`
new TokensCollection<Operator>()
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts NewExpression\`
new TokensCollection<string>()
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ObjectExpression\`
{
    ArrayExpression(
        this: ExtractTokensContext,
        node: TSESTree.ArrayExpression,
    ) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    },
    ArrayPattern(this: ExtractTokensContext, node: TSESTree.ArrayPattern) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    },
    ArrowFunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.ArrowFunctionExpression,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        if (node.generator) {
            // It cannot actually be used.
            this.operators.add("*")
        }
        if (
            node.params.length !== 1 ||
            node.params[0].type !== AST_NODE_TYPES.Identifier ||
            node.params[0].typeAnnotation
        ) {
            this.operators.add("()")
        }
        this.operators.add(",", node.params.length - 1)

        this.operators.add("=>")

        if (node.body.type === AST_NODE_TYPES.ObjectExpression) {
            this.operators.add("()")
        }
    },
    AssignmentExpression(
        this: ExtractTokensContext,
        node: TSESTree.AssignmentExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    AssignmentPattern(
        this: ExtractTokensContext,
        _node: TSESTree.AssignmentPattern,
    ) {
        this.operators.add("=")
    },
    AwaitExpression(
        this: ExtractTokensContext,
        node: TSESTree.AwaitExpression,
    ) {
        this.operators.add("await")

        if (getPrecedence(node) > getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    BinaryExpression(
        this: ExtractTokensContext,
        node: TSESTree.BinaryExpression,
    ) {
        this.operators.add(node.operator as ESTree.BinaryExpression["operator"])

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    BlockStatement(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    BreakStatement(this: ExtractTokensContext) {
        this.operators.add("break")
    },
    CallExpression(this: ExtractTokensContext, node: TSESTree.CallExpression) {
        if (node.optional) {
            this.operators.add("?.")
        }
        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    },
    CatchClause(this: ExtractTokensContext, node: TSESTree.CatchClause) {
        this.operators.add("catch")
        if (node.param) {
            this.operators.add("()")
        }
    },
    ChainExpression: noop,
    ClassBody(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    ClassDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ClassDeclaration,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    ClassExpression(
        this: ExtractTokensContext,
        node: TSESTree.ClassExpression,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    ConditionalExpression(
        this: ExtractTokensContext,
        node: TSESTree.ConditionalExpression,
    ) {
        if (getPrecedence(node) >= getPrecedence(node.test)) {
            this.operators.add("()")
        }
        this.operators.add("?:")
    },
    ContinueStatement(this: ExtractTokensContext) {
        this.operators.add("continue")
    },
    DebuggerStatement(this: ExtractTokensContext) {
        this.operators.add("debugger")
    },
    Decorator(this: ExtractTokensContext) {
        this.operators.add("@")
    },
    DoWhileStatement(this: ExtractTokensContext) {
        this.operators.add("do")
        this.operators.add("while()")
    },
    EmptyStatement(this: ExtractTokensContext) {
        this.operators.add(";")
    },
    ExportAllDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportAllDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("*")
        if (node.exported) {
            this.operators.add("as")
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ExportDefaultDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportDefaultDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("default")
    },
    ExportNamedDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportNamedDeclaration,
    ) {
        this.operators.add("export")
        if (node.specifiers.length) {
            if (node.exportKind === "type") {
                this.operators.add("type")
            }
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ExportSpecifier(
        this: ExtractTokensContext,
        node: TSESTree.ExportSpecifier,
    ) {
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.exported.name) {
            this.operators.add("as")
        }
    },
    ExpressionStatement: noop,
    ForInStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("in")
    },
    ForOfStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("of")
    },
    ForStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add(";", 2)
    },
    FunctionDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.FunctionDeclaration,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    FunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    Identifier(
        this: ExtractTokensContext,
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
            )
                return
        }
        this.operands.add(node.name)
    },
    IfStatement(this: ExtractTokensContext, node: TSESTree.IfStatement) {
        this.operators.add("if()")
        if (node.alternate) {
            this.operators.add("else")
        }
    },
    ImportAttribute(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    ImportDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ImportDeclaration,
    ) {
        this.operators.add("import")
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (
            node.specifiers.some(
                (spec) => spec.type === AST_NODE_TYPES.ImportSpecifier,
            )
        ) {
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.specifiers.length) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ImportDefaultSpecifier: noop,
    ImportExpression(
        this: ExtractTokensContext,
        node: TSESTree.ImportExpression,
    ) {
        this.operators.add("import")
        if (node.attributes) {
            this.operators.add(",")
        }
    },
    ImportNamespaceSpecifier(this: ExtractTokensContext) {
        this.operators.add("*")
        this.operators.add("as")
    },
    ImportSpecifier(
        this: ExtractTokensContext,
        node: TSESTree.ImportSpecifier,
    ) {
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.imported.name) {
            this.operators.add("as")
        }
    },
    JSXAttribute(this: ExtractTokensContext) {
        this.operators.add("=")
    },
    JSXClosingElement(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    },
    JSXClosingFragment(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    },
    JSXElement: noop,
    JSXEmptyExpression: noop,
    JSXExpressionContainer(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    JSXFragment: noop,
    JSXIdentifier(this: ExtractTokensContext, node: TSESTree.JSXIdentifier) {
        this.operands.add(node.name)
    },
    JSXMemberExpression(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    JSXNamespacedName(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    JSXOpeningElement(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    },
    JSXOpeningFragment(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    },
    JSXSpreadAttribute(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    },
    JSXSpreadChild(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    },
    JSXText(this: ExtractTokensContext, node: TSESTree.JSXText) {
        this.operands.add(JSON.stringify(node.value))
    },
    LabeledStatement(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    Literal(this: ExtractTokensContext, node: TSESTree.Literal) {
        if ("bigint" in node && node.bigint) {
            this.operands.add(\`\${node.bigint}n\`)
        } else if ("regex" in node && node.regex) {
            this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
        } else {
            this.operands.add(JSON.stringify(node.value))
        }
    },
    LogicalExpression(
        this: ExtractTokensContext,
        node: TSESTree.LogicalExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    MemberExpression(
        this: ExtractTokensContext,
        node: TSESTree.MemberExpression,
    ) {
        if (getPrecedence(node) > getPrecedence(node.object)) {
            this.operators.add("()")
        }
        if (node.optional) {
            this.operators.add("?.")
            if (node.computed) {
                this.operators.add("[]")
            }
        } else if (node.computed) {
            this.operators.add("[]")
        } else {
            this.operators.add(".")
        }
    },
    MetaProperty(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    MethodDefinition(
        this: ExtractTokensContext,
        node: TSESTree.MethodDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    },
    NewExpression(this: ExtractTokensContext, node: TSESTree.NewExpression) {
        this.operators.add("new")

        if (getPrecedence(node) >= getPrecedence(node.callee)) {
            this.operators.add("()")
        }

        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    },
    ObjectExpression(
        this: ExtractTokensContext,
        node: TSESTree.ObjectExpression,
    ) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    },
    ObjectPattern(this: ExtractTokensContext, node: TSESTree.ObjectPattern) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    },
    PrivateIdentifier(
        this: ExtractTokensContext,
        node: TSESTree.PrivateIdentifier,
    ) {
        this.operands.add(\`#\${node.name}\`)
    },
    Program: noop,
    Property(this: ExtractTokensContext, node: TSESTree.Property) {
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
        if (!node.shorthand && !node.method) {
            this.operators.add(":")
        }
    },
    PropertyDefinition(
        this: ExtractTokensContext,
        node: TSESTree.PropertyDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.readonly) this.operators.add("readonly")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    },
    RestElement(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    ReturnStatement(this: ExtractTokensContext) {
        this.operators.add("return")
    },
    SequenceExpression(
        this: ExtractTokensContext,
        node: TSESTree.SequenceExpression,
    ) {
        this.operators.add(",", node.expressions.length - 1)
    },
    SpreadElement(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    StaticBlock(this: ExtractTokensContext) {
        this.operators.add("static")
        this.operators.add("{}")
    },
    Super(this: ExtractTokensContext) {
        this.operands.add("super")
    },
    SwitchCase(this: ExtractTokensContext, node: TSESTree.SwitchCase) {
        if (node.test) {
            this.operators.add("case")
        } else {
            this.operators.add("default")
        }
        this.operators.add(":")
    },
    SwitchStatement(this: ExtractTokensContext) {
        this.operators.add("switch()")
        this.operators.add("{}")
    },
    TaggedTemplateExpression: noop,
    TemplateElement(
        this: ExtractTokensContext,
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) {
        let open = "\`"
        let close = "\`"
        if (
            parent &&
            (parent.type === AST_NODE_TYPES.TemplateLiteral ||
                parent.type === AST_NODE_TYPES.TSTemplateLiteralType)
        ) {
            const index = parent.quasis.indexOf(node)
            if (index > 0) {
                open = "}"
            }
            if (index < parent.quasis.length - 1) {
                close = "\${"
            }
        }
        this.operands.add(\`\${open}\${node.value.cooked}\${close}\`)
    },
    TemplateLiteral: noop,
    ThisExpression(this: ExtractTokensContext) {
        this.operands.add("this")
    },
    ThrowStatement(this: ExtractTokensContext) {
        this.operators.add("throw")
    },
    TryStatement(this: ExtractTokensContext, node: TSESTree.TryStatement) {
        this.operators.add("try")
        if (node.finalizer) {
            this.operators.add("finally")
        }
    },
    UnaryExpression(
        this: ExtractTokensContext,
        node: TSESTree.UnaryExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    UpdateExpression(
        this: ExtractTokensContext,
        node: TSESTree.UpdateExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    VariableDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclaration,
    ) {
        this.operators.add(node.kind)
        this.operators.add(",", node.declarations.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    VariableDeclarator(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclarator,
    ) {
        if (node.init) {
            this.operators.add("=")
        }
    },
    WhileStatement(this: ExtractTokensContext) {
        this.operators.add("while()")
    },
    WithStatement(this: ExtractTokensContext) {
        this.operators.add("with()")
    },
    YieldExpression(
        this: ExtractTokensContext,
        node: TSESTree.YieldExpression,
    ) {
        this.operators.add("yield")
        if (node.delegate) {
            this.operators.add("*")
        }
        if (
            node.argument &&
            getPrecedence(node) > getPrecedence(node.argument)
        ) {
            this.operators.add("()")
        }
    },

    // TS
    TSAbstractKeyword(this: ExtractTokensContext) {
        this.operators.add("abstract")
    },
    TSAbstractMethodDefinition(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractMethodDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    },
    TSAbstractPropertyDefinition(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractPropertyDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    },
    TSAnyKeyword(this: ExtractTokensContext) {
        this.operands.add("any")
    },
    TSArrayType(this: ExtractTokensContext) {
        this.operators.add("[]")
    },
    TSAsExpression(this: ExtractTokensContext) {
        this.operators.add("as")
    },
    TSAsyncKeyword(this: ExtractTokensContext) {
        this.operators.add("async")
    },
    TSBigIntKeyword(this: ExtractTokensContext) {
        this.operands.add("bigint")
    },
    TSBooleanKeyword(this: ExtractTokensContext) {
        this.operands.add("boolean")
    },
    TSCallSignatureDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSCallSignatureDeclaration,
    ) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSClassImplements: noop,
    TSConditionalType(this: ExtractTokensContext) {
        this.operators.add("extends")
        this.operators.add("?:")
    },
    TSConstructSignatureDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructSignatureDeclaration,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSConstructorType(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructorType,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSDeclareFunction(
        this: ExtractTokensContext,
        node: TSESTree.TSDeclareFunction,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSDeclareKeyword(this: ExtractTokensContext) {
        this.operators.add("declare")
    },
    TSEmptyBodyFunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    TSEnumDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSEnumDeclaration,
    ) {
        if (node.const) this.operators.add("const")
        this.operators.add("enum")
        this.operators.add("{}")
        this.operators.add(",", node.members.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    TSEnumMember(this: ExtractTokensContext, node: TSESTree.TSEnumMember) {
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.initializer) {
            this.operators.add("=")
        }
    },
    TSExportAssignment(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("=")
    },
    TSExportKeyword(this: ExtractTokensContext) {
        this.operators.add("export")
    },
    TSExternalModuleReference(this: ExtractTokensContext) {
        this.operands.add("require")
        this.operators.add("()")
    },
    TSFunctionType(this: ExtractTokensContext, node: TSESTree.TSFunctionType) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSImportEqualsDeclaration(this: ExtractTokensContext) {
        this.operators.add("import")
        this.operators.add("=")
    },
    TSImportType(this: ExtractTokensContext, node: TSESTree.TSImportType) {
        this.operators.add("import")
        this.operators.add("()")
        if (node.qualifier) {
            this.operators.add(".")
        }
    },
    TSIndexSignature(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    },
    TSIndexedAccessType(this: ExtractTokensContext) {
        this.operators.add("[]")
    },
    TSInferType(this: ExtractTokensContext) {
        this.operators.add("infer")
    },
    TSInterfaceBody(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSInterfaceDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSInterfaceDeclaration,
    ) {
        this.operators.add("interface")
        if (node.extends) {
            this.operators.add("extends")
            this.operators.add(",", node.extends.length - 1)
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    TSInterfaceHeritage: noop,
    TSIntersectionType(
        this: ExtractTokensContext,
        node: TSESTree.TSIntersectionType,
    ) {
        this.operators.add("&", node.types.length - 1)
    },
    TSIntrinsicKeyword(this: ExtractTokensContext) {
        this.operands.add("intrinsic")
    },
    TSLiteralType: noop,
    TSMappedType(this: ExtractTokensContext, node: TSESTree.TSMappedType) {
        this.operators.add("{}")
        if (node.readonly) {
            if (typeof node.readonly === "string") {
                this.operators.add(node.readonly)
            }
            this.operators.add("readonly")
        }

        this.operators.add("[]")
        if (node.optional) {
            if (typeof node.optional === "string") {
                this.operators.add(node.optional)
            }
            this.operators.add("?")
        }
        this.operators.add(":")
    },
    TSMethodSignature(
        this: ExtractTokensContext,
        node: TSESTree.TSMethodSignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")

        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSModuleBlock(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSModuleDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSModuleDeclaration,
    ) {
        if (node.declare) this.operators.add("declare")
        if (!node.global) {
            this.operators.add("module")
        }
    },
    TSNamespaceExportDeclaration(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("as")
        this.operators.add("namespace")
    },
    TSNamedTupleMember(
        this: ExtractTokensContext,
        node: TSESTree.TSNamedTupleMember,
    ) {
        if (node.optional) this.operators.add("?")
        this.operators.add(":")
    },
    TSNeverKeyword(this: ExtractTokensContext) {
        this.operands.add("never")
    },
    TSNonNullExpression(this: ExtractTokensContext) {
        this.operators.add("!")
    },
    TSNullKeyword(this: ExtractTokensContext) {
        this.operands.add("null")
    },
    TSNumberKeyword(this: ExtractTokensContext) {
        this.operands.add("number")
    },
    TSObjectKeyword(this: ExtractTokensContext) {
        this.operands.add("object")
    },
    TSOptionalType(this: ExtractTokensContext) {
        this.operators.add("?")
    },
    TSParameterProperty(
        this: ExtractTokensContext,
        node: TSESTree.TSParameterProperty,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    },
    TSPrivateKeyword(this: ExtractTokensContext) {
        this.operators.add("private")
    },
    TSPropertySignature(
        this: ExtractTokensContext,
        node: TSESTree.TSPropertySignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")
    },
    TSProtectedKeyword(this: ExtractTokensContext) {
        this.operators.add("protected")
    },
    TSPublicKeyword(this: ExtractTokensContext) {
        this.operators.add("public")
    },
    TSQualifiedName(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    TSReadonlyKeyword(this: ExtractTokensContext) {
        this.operators.add("readonly")
    },
    TSRestType(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    TSStaticKeyword(this: ExtractTokensContext) {
        this.operators.add("static")
    },
    TSStringKeyword(this: ExtractTokensContext) {
        this.operands.add("string")
    },
    TSSymbolKeyword(this: ExtractTokensContext) {
        this.operands.add("symbol")
    },
    TSTemplateLiteralType: noop,
    TSThisType(this: ExtractTokensContext) {
        this.operands.add("this")
    },
    TSTupleType(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        this.operators.add(",", node.elementTypes.length - 1)
    },
    TSTypeAliasDeclaration(this: ExtractTokensContext) {
        this.operators.add("type")
        this.operators.add("=")
    },
    TSTypeAnnotation(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
            ) {
                this.operators.add("=>")
                return
            }
            if (parent.type === AST_NODE_TYPES.TSTypePredicate) {
                return
            }
        }
        this.operators.add(":")
    },
    TSTypeAssertion(this: ExtractTokensContext) {
        this.operators.add("<>")
    },
    TSTypeLiteral(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSTypeOperator(this: ExtractTokensContext) {
        this.operators.add("keyof")
    },
    TSTypeParameter(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameter,
        parent,
    ) {
        if (node.constraint) {
            if (
                parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
            ) {
                this.operators.add("in")
            } else {
                this.operators.add("extends")
            }
        }
        if (node.default) {
            this.operators.add("=")
        }
    },
    TSTypeParameterDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterDeclaration,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    },
    TSTypeParameterInstantiation(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterInstantiation,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    },
    TSTypePredicate(this: ExtractTokensContext) {
        this.operators.add("is")
    },
    TSTypeQuery(this: ExtractTokensContext) {
        this.operators.add("typeof")
    },
    TSTypeReference: noop,
    TSUndefinedKeyword(this: ExtractTokensContext) {
        this.operands.add("undefined")
    },
    TSUnionType(this: ExtractTokensContext, node: TSESTree.TSUnionType) {
        this.operators.add("|", node.types.length - 1)
    },
    TSUnknownKeyword(this: ExtractTokensContext) {
        this.operands.add("unknown")
    },
    TSVoidKeyword(this: ExtractTokensContext) {
        this.operands.add("void")
    },
}
\` 1`] = `
Object {
  "deliveredBugs": 14.855272693530098,
  "difficulty": 96.5661971830986,
  "effort": 4303551.576396383,
  "length": 5198,
  "time": 239086.19868868796,
  "vocabulary": 381,
  "volume": 44565.818080590296,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Program\`
import { AST_NODE_TYPES } from "@typescript-eslint/types"
import type { TSESTree } from "@typescript-eslint/types"
import type * as ESTree from "estree"
import { walk } from "./walker"
import type { Visitor } from "./visitor"

type AllVisitor = Required<Visitor>
type Operator =
    | TSESTree.AssignmentExpression["operator"]
    | ESTree.BinaryExpression["operator"]
    | TSESTree.LogicalExpression["operator"]
    | TSESTree.UnaryExpression["operator"]
    | TSESTree.UpdateExpression["operator"]
    | TSESTree.VariableDeclaration["kind"]
    | "()"
    | "[]"
    | "{}"
    | ","
    | "."
    | "=>"
    | "?."
    | "?:"
    | "@"
    | ";"
    | ":"
    | "..."
    | "</" // JSXClosingElement, JSXClosingFragment
    | "async"
    | "await"
    | "break"
    | "catch"
    | "class"
    | "extends"
    | "continue"
    | "debugger"
    | "do"
    | "while()"
    | "export"
    | "type"
    | "as"
    | "default"
    | "for()"
    | "of"
    | "function"
    | "if()"
    | "else"
    | "import"
    | "from"
    | "assert"
    | "static"
    | "get"
    | "set"
    | "new"
    | "return"
    | "case"
    | "switch()"
    | "throw"
    | "try"
    | "finally"
    | "with()"
    | "yield"
    // TS
    | "?"
    | "<>"
    | "private"
    | "protected"
    | "public"
    | "implements"
    | "abstract"
    | "declare"
    | "enum"
    | "infer"
    | "interface"
    | "readonly"
    | "module"
    | "namespace"
    | "keyof"
    | "is"

export type ExtractTokensResult = {
    readonly operators: TokensCollection<string>
    readonly operands: TokensCollection<string>
}
export class TokensCollection<T> {
    private readonly total: T[] = []

    private readonly distinct = new Set<T>()

    public add(e: T, count = 1): void {
        if (count === 1) {
            this.total.push(e)
            this.distinct.add(e)
        } else {
            for (let index = 0; index < count; index++) {
                this.total.push(e)
                this.distinct.add(e)
            }
        }
    }

    public get all(): T[] {
        return this.total
    }

    public get distinctSize(): number {
        return this.distinct.size
    }

    public get totalSize(): number {
        return this.total.length
    }
}
class ExtractTokensContext implements ExtractTokensResult {
    public readonly operators = new TokensCollection<Operator>()

    public readonly operands = new TokensCollection<string>()
}

/** noop */
function noop(): void {
    /* noop */
}

/**
 * Get operator precedence
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence
 */
function getPrecedence(node: TSESTree.Expression): number {
    if (node.type === AST_NODE_TYPES.SequenceExpression) {
        return 1
    }
    if (
        node.type === AST_NODE_TYPES.YieldExpression ||
        node.type === AST_NODE_TYPES.AssignmentExpression
    ) {
        return 2
    }
    if (node.type === AST_NODE_TYPES.ConditionalExpression) {
        return 3
    }
    if (node.type === AST_NODE_TYPES.LogicalExpression) {
        if (node.operator === "||" || node.operator === "??") {
            return 4
        }
        if (node.operator === "&&") {
            return 5
        }
        throw new Error(\`Unknown operator precedence:\${node.operator}\`)
    }
    if (node.type === AST_NODE_TYPES.BinaryExpression) {
        if (node.operator === "|") {
            return 6
        }
        if (node.operator === "^") {
            return 7
        }
        if (node.operator === "&") {
            return 8
        }
        if (
            node.operator === "==" ||
            node.operator === "!=" ||
            node.operator === "===" ||
            node.operator === "!=="
        ) {
            return 9
        }
        if (
            node.operator === "<" ||
            node.operator === "<=" ||
            node.operator === ">" ||
            node.operator === ">=" ||
            node.operator === "in" ||
            node.operator === "instanceof"
        ) {
            return 10
        }
        if (
            node.operator === "<<" ||
            node.operator === ">>" ||
            node.operator === ">>>"
        ) {
            return 11
        }
        if (node.operator === "+" || node.operator === "-") {
            return 12
        }
        if (
            node.operator === "*" ||
            node.operator === "/" ||
            node.operator === "%"
        ) {
            return 13
        }
        if (node.operator === "**") {
            return 14
        }
        throw new Error(\`Unknown operator precedence:\${node.operator}\`)
    }
    if (
        node.type === AST_NODE_TYPES.UnaryExpression ||
        node.type === AST_NODE_TYPES.AwaitExpression
    ) {
        return 15
    }
    if (node.type === AST_NODE_TYPES.UpdateExpression) {
        if (node.prefix) {
            return 15
        }
        return 16
    }
    if (
        node.type === AST_NODE_TYPES.NewExpression ||
        node.type === AST_NODE_TYPES.CallExpression ||
        node.type === AST_NODE_TYPES.ImportExpression ||
        node.type === AST_NODE_TYPES.ChainExpression
    ) {
        return 18
    }
    if (node.type === AST_NODE_TYPES.MemberExpression) {
        return 19
    }

    // Others
    if (node.type === AST_NODE_TYPES.ArrowFunctionExpression) {
        return 2
    }
    if (node.type === AST_NODE_TYPES.TSAsExpression) {
        return 14.5
    }
    return Infinity
}

const EXTRACT_TOKENS: AllVisitor = {
    ArrayExpression(
        this: ExtractTokensContext,
        node: TSESTree.ArrayExpression,
    ) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    },
    ArrayPattern(this: ExtractTokensContext, node: TSESTree.ArrayPattern) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    },
    ArrowFunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.ArrowFunctionExpression,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        if (node.generator) {
            // It cannot actually be used.
            this.operators.add("*")
        }
        if (
            node.params.length !== 1 ||
            node.params[0].type !== AST_NODE_TYPES.Identifier ||
            node.params[0].typeAnnotation
        ) {
            this.operators.add("()")
        }
        this.operators.add(",", node.params.length - 1)

        this.operators.add("=>")

        if (node.body.type === AST_NODE_TYPES.ObjectExpression) {
            this.operators.add("()")
        }
    },
    AssignmentExpression(
        this: ExtractTokensContext,
        node: TSESTree.AssignmentExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    AssignmentPattern(
        this: ExtractTokensContext,
        _node: TSESTree.AssignmentPattern,
    ) {
        this.operators.add("=")
    },
    AwaitExpression(
        this: ExtractTokensContext,
        node: TSESTree.AwaitExpression,
    ) {
        this.operators.add("await")

        if (getPrecedence(node) > getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    BinaryExpression(
        this: ExtractTokensContext,
        node: TSESTree.BinaryExpression,
    ) {
        this.operators.add(node.operator as ESTree.BinaryExpression["operator"])

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    BlockStatement(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    BreakStatement(this: ExtractTokensContext) {
        this.operators.add("break")
    },
    CallExpression(this: ExtractTokensContext, node: TSESTree.CallExpression) {
        if (node.optional) {
            this.operators.add("?.")
        }
        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    },
    CatchClause(this: ExtractTokensContext, node: TSESTree.CatchClause) {
        this.operators.add("catch")
        if (node.param) {
            this.operators.add("()")
        }
    },
    ChainExpression: noop,
    ClassBody(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    ClassDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ClassDeclaration,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    ClassExpression(
        this: ExtractTokensContext,
        node: TSESTree.ClassExpression,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    ConditionalExpression(
        this: ExtractTokensContext,
        node: TSESTree.ConditionalExpression,
    ) {
        if (getPrecedence(node) >= getPrecedence(node.test)) {
            this.operators.add("()")
        }
        this.operators.add("?:")
    },
    ContinueStatement(this: ExtractTokensContext) {
        this.operators.add("continue")
    },
    DebuggerStatement(this: ExtractTokensContext) {
        this.operators.add("debugger")
    },
    Decorator(this: ExtractTokensContext) {
        this.operators.add("@")
    },
    DoWhileStatement(this: ExtractTokensContext) {
        this.operators.add("do")
        this.operators.add("while()")
    },
    EmptyStatement(this: ExtractTokensContext) {
        this.operators.add(";")
    },
    ExportAllDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportAllDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("*")
        if (node.exported) {
            this.operators.add("as")
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ExportDefaultDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportDefaultDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("default")
    },
    ExportNamedDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportNamedDeclaration,
    ) {
        this.operators.add("export")
        if (node.specifiers.length) {
            if (node.exportKind === "type") {
                this.operators.add("type")
            }
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ExportSpecifier(
        this: ExtractTokensContext,
        node: TSESTree.ExportSpecifier,
    ) {
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.exported.name) {
            this.operators.add("as")
        }
    },
    ExpressionStatement: noop,
    ForInStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("in")
    },
    ForOfStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("of")
    },
    ForStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add(";", 2)
    },
    FunctionDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.FunctionDeclaration,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    FunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    Identifier(
        this: ExtractTokensContext,
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
            )
                return
        }
        this.operands.add(node.name)
    },
    IfStatement(this: ExtractTokensContext, node: TSESTree.IfStatement) {
        this.operators.add("if()")
        if (node.alternate) {
            this.operators.add("else")
        }
    },
    ImportAttribute(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    ImportDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ImportDeclaration,
    ) {
        this.operators.add("import")
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (
            node.specifiers.some(
                (spec) => spec.type === AST_NODE_TYPES.ImportSpecifier,
            )
        ) {
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.specifiers.length) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ImportDefaultSpecifier: noop,
    ImportExpression(
        this: ExtractTokensContext,
        node: TSESTree.ImportExpression,
    ) {
        this.operators.add("import")
        if (node.attributes) {
            this.operators.add(",")
        }
    },
    ImportNamespaceSpecifier(this: ExtractTokensContext) {
        this.operators.add("*")
        this.operators.add("as")
    },
    ImportSpecifier(
        this: ExtractTokensContext,
        node: TSESTree.ImportSpecifier,
    ) {
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.imported.name) {
            this.operators.add("as")
        }
    },
    JSXAttribute(this: ExtractTokensContext) {
        this.operators.add("=")
    },
    JSXClosingElement(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    },
    JSXClosingFragment(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    },
    JSXElement: noop,
    JSXEmptyExpression: noop,
    JSXExpressionContainer(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    JSXFragment: noop,
    JSXIdentifier(this: ExtractTokensContext, node: TSESTree.JSXIdentifier) {
        this.operands.add(node.name)
    },
    JSXMemberExpression(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    JSXNamespacedName(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    JSXOpeningElement(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    },
    JSXOpeningFragment(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    },
    JSXSpreadAttribute(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    },
    JSXSpreadChild(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    },
    JSXText(this: ExtractTokensContext, node: TSESTree.JSXText) {
        this.operands.add(JSON.stringify(node.value))
    },
    LabeledStatement(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    Literal(this: ExtractTokensContext, node: TSESTree.Literal) {
        if ("bigint" in node && node.bigint) {
            this.operands.add(\`\${node.bigint}n\`)
        } else if ("regex" in node && node.regex) {
            this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
        } else {
            this.operands.add(JSON.stringify(node.value))
        }
    },
    LogicalExpression(
        this: ExtractTokensContext,
        node: TSESTree.LogicalExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    MemberExpression(
        this: ExtractTokensContext,
        node: TSESTree.MemberExpression,
    ) {
        if (getPrecedence(node) > getPrecedence(node.object)) {
            this.operators.add("()")
        }
        if (node.optional) {
            this.operators.add("?.")
            if (node.computed) {
                this.operators.add("[]")
            }
        } else if (node.computed) {
            this.operators.add("[]")
        } else {
            this.operators.add(".")
        }
    },
    MetaProperty(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    MethodDefinition(
        this: ExtractTokensContext,
        node: TSESTree.MethodDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    },
    NewExpression(this: ExtractTokensContext, node: TSESTree.NewExpression) {
        this.operators.add("new")

        if (getPrecedence(node) >= getPrecedence(node.callee)) {
            this.operators.add("()")
        }

        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    },
    ObjectExpression(
        this: ExtractTokensContext,
        node: TSESTree.ObjectExpression,
    ) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    },
    ObjectPattern(this: ExtractTokensContext, node: TSESTree.ObjectPattern) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    },
    PrivateIdentifier(
        this: ExtractTokensContext,
        node: TSESTree.PrivateIdentifier,
    ) {
        this.operands.add(\`#\${node.name}\`)
    },
    Program: noop,
    Property(this: ExtractTokensContext, node: TSESTree.Property) {
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
        if (!node.shorthand && !node.method) {
            this.operators.add(":")
        }
    },
    PropertyDefinition(
        this: ExtractTokensContext,
        node: TSESTree.PropertyDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.readonly) this.operators.add("readonly")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    },
    RestElement(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    ReturnStatement(this: ExtractTokensContext) {
        this.operators.add("return")
    },
    SequenceExpression(
        this: ExtractTokensContext,
        node: TSESTree.SequenceExpression,
    ) {
        this.operators.add(",", node.expressions.length - 1)
    },
    SpreadElement(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    StaticBlock(this: ExtractTokensContext) {
        this.operators.add("static")
        this.operators.add("{}")
    },
    Super(this: ExtractTokensContext) {
        this.operands.add("super")
    },
    SwitchCase(this: ExtractTokensContext, node: TSESTree.SwitchCase) {
        if (node.test) {
            this.operators.add("case")
        } else {
            this.operators.add("default")
        }
        this.operators.add(":")
    },
    SwitchStatement(this: ExtractTokensContext) {
        this.operators.add("switch()")
        this.operators.add("{}")
    },
    TaggedTemplateExpression: noop,
    TemplateElement(
        this: ExtractTokensContext,
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) {
        let open = "\`"
        let close = "\`"
        if (
            parent &&
            (parent.type === AST_NODE_TYPES.TemplateLiteral ||
                parent.type === AST_NODE_TYPES.TSTemplateLiteralType)
        ) {
            const index = parent.quasis.indexOf(node)
            if (index > 0) {
                open = "}"
            }
            if (index < parent.quasis.length - 1) {
                close = "\${"
            }
        }
        this.operands.add(\`\${open}\${node.value.cooked}\${close}\`)
    },
    TemplateLiteral: noop,
    ThisExpression(this: ExtractTokensContext) {
        this.operands.add("this")
    },
    ThrowStatement(this: ExtractTokensContext) {
        this.operators.add("throw")
    },
    TryStatement(this: ExtractTokensContext, node: TSESTree.TryStatement) {
        this.operators.add("try")
        if (node.finalizer) {
            this.operators.add("finally")
        }
    },
    UnaryExpression(
        this: ExtractTokensContext,
        node: TSESTree.UnaryExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    UpdateExpression(
        this: ExtractTokensContext,
        node: TSESTree.UpdateExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    VariableDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclaration,
    ) {
        this.operators.add(node.kind)
        this.operators.add(",", node.declarations.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    VariableDeclarator(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclarator,
    ) {
        if (node.init) {
            this.operators.add("=")
        }
    },
    WhileStatement(this: ExtractTokensContext) {
        this.operators.add("while()")
    },
    WithStatement(this: ExtractTokensContext) {
        this.operators.add("with()")
    },
    YieldExpression(
        this: ExtractTokensContext,
        node: TSESTree.YieldExpression,
    ) {
        this.operators.add("yield")
        if (node.delegate) {
            this.operators.add("*")
        }
        if (
            node.argument &&
            getPrecedence(node) > getPrecedence(node.argument)
        ) {
            this.operators.add("()")
        }
    },

    // TS
    TSAbstractKeyword(this: ExtractTokensContext) {
        this.operators.add("abstract")
    },
    TSAbstractMethodDefinition(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractMethodDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    },
    TSAbstractPropertyDefinition(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractPropertyDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    },
    TSAnyKeyword(this: ExtractTokensContext) {
        this.operands.add("any")
    },
    TSArrayType(this: ExtractTokensContext) {
        this.operators.add("[]")
    },
    TSAsExpression(this: ExtractTokensContext) {
        this.operators.add("as")
    },
    TSAsyncKeyword(this: ExtractTokensContext) {
        this.operators.add("async")
    },
    TSBigIntKeyword(this: ExtractTokensContext) {
        this.operands.add("bigint")
    },
    TSBooleanKeyword(this: ExtractTokensContext) {
        this.operands.add("boolean")
    },
    TSCallSignatureDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSCallSignatureDeclaration,
    ) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSClassImplements: noop,
    TSConditionalType(this: ExtractTokensContext) {
        this.operators.add("extends")
        this.operators.add("?:")
    },
    TSConstructSignatureDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructSignatureDeclaration,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSConstructorType(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructorType,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSDeclareFunction(
        this: ExtractTokensContext,
        node: TSESTree.TSDeclareFunction,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSDeclareKeyword(this: ExtractTokensContext) {
        this.operators.add("declare")
    },
    TSEmptyBodyFunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    TSEnumDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSEnumDeclaration,
    ) {
        if (node.const) this.operators.add("const")
        this.operators.add("enum")
        this.operators.add("{}")
        this.operators.add(",", node.members.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    TSEnumMember(this: ExtractTokensContext, node: TSESTree.TSEnumMember) {
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.initializer) {
            this.operators.add("=")
        }
    },
    TSExportAssignment(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("=")
    },
    TSExportKeyword(this: ExtractTokensContext) {
        this.operators.add("export")
    },
    TSExternalModuleReference(this: ExtractTokensContext) {
        this.operands.add("require")
        this.operators.add("()")
    },
    TSFunctionType(this: ExtractTokensContext, node: TSESTree.TSFunctionType) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSImportEqualsDeclaration(this: ExtractTokensContext) {
        this.operators.add("import")
        this.operators.add("=")
    },
    TSImportType(this: ExtractTokensContext, node: TSESTree.TSImportType) {
        this.operators.add("import")
        this.operators.add("()")
        if (node.qualifier) {
            this.operators.add(".")
        }
    },
    TSIndexSignature(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    },
    TSIndexedAccessType(this: ExtractTokensContext) {
        this.operators.add("[]")
    },
    TSInferType(this: ExtractTokensContext) {
        this.operators.add("infer")
    },
    TSInterfaceBody(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSInterfaceDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSInterfaceDeclaration,
    ) {
        this.operators.add("interface")
        if (node.extends) {
            this.operators.add("extends")
            this.operators.add(",", node.extends.length - 1)
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    TSInterfaceHeritage: noop,
    TSIntersectionType(
        this: ExtractTokensContext,
        node: TSESTree.TSIntersectionType,
    ) {
        this.operators.add("&", node.types.length - 1)
    },
    TSIntrinsicKeyword(this: ExtractTokensContext) {
        this.operands.add("intrinsic")
    },
    TSLiteralType: noop,
    TSMappedType(this: ExtractTokensContext, node: TSESTree.TSMappedType) {
        this.operators.add("{}")
        if (node.readonly) {
            if (typeof node.readonly === "string") {
                this.operators.add(node.readonly)
            }
            this.operators.add("readonly")
        }

        this.operators.add("[]")
        if (node.optional) {
            if (typeof node.optional === "string") {
                this.operators.add(node.optional)
            }
            this.operators.add("?")
        }
        this.operators.add(":")
    },
    TSMethodSignature(
        this: ExtractTokensContext,
        node: TSESTree.TSMethodSignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")

        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSModuleBlock(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSModuleDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSModuleDeclaration,
    ) {
        if (node.declare) this.operators.add("declare")
        if (!node.global) {
            this.operators.add("module")
        }
    },
    TSNamespaceExportDeclaration(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("as")
        this.operators.add("namespace")
    },
    TSNamedTupleMember(
        this: ExtractTokensContext,
        node: TSESTree.TSNamedTupleMember,
    ) {
        if (node.optional) this.operators.add("?")
        this.operators.add(":")
    },
    TSNeverKeyword(this: ExtractTokensContext) {
        this.operands.add("never")
    },
    TSNonNullExpression(this: ExtractTokensContext) {
        this.operators.add("!")
    },
    TSNullKeyword(this: ExtractTokensContext) {
        this.operands.add("null")
    },
    TSNumberKeyword(this: ExtractTokensContext) {
        this.operands.add("number")
    },
    TSObjectKeyword(this: ExtractTokensContext) {
        this.operands.add("object")
    },
    TSOptionalType(this: ExtractTokensContext) {
        this.operators.add("?")
    },
    TSParameterProperty(
        this: ExtractTokensContext,
        node: TSESTree.TSParameterProperty,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    },
    TSPrivateKeyword(this: ExtractTokensContext) {
        this.operators.add("private")
    },
    TSPropertySignature(
        this: ExtractTokensContext,
        node: TSESTree.TSPropertySignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")
    },
    TSProtectedKeyword(this: ExtractTokensContext) {
        this.operators.add("protected")
    },
    TSPublicKeyword(this: ExtractTokensContext) {
        this.operators.add("public")
    },
    TSQualifiedName(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    TSReadonlyKeyword(this: ExtractTokensContext) {
        this.operators.add("readonly")
    },
    TSRestType(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    TSStaticKeyword(this: ExtractTokensContext) {
        this.operators.add("static")
    },
    TSStringKeyword(this: ExtractTokensContext) {
        this.operands.add("string")
    },
    TSSymbolKeyword(this: ExtractTokensContext) {
        this.operands.add("symbol")
    },
    TSTemplateLiteralType: noop,
    TSThisType(this: ExtractTokensContext) {
        this.operands.add("this")
    },
    TSTupleType(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        this.operators.add(",", node.elementTypes.length - 1)
    },
    TSTypeAliasDeclaration(this: ExtractTokensContext) {
        this.operators.add("type")
        this.operators.add("=")
    },
    TSTypeAnnotation(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
            ) {
                this.operators.add("=>")
                return
            }
            if (parent.type === AST_NODE_TYPES.TSTypePredicate) {
                return
            }
        }
        this.operators.add(":")
    },
    TSTypeAssertion(this: ExtractTokensContext) {
        this.operators.add("<>")
    },
    TSTypeLiteral(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSTypeOperator(this: ExtractTokensContext) {
        this.operators.add("keyof")
    },
    TSTypeParameter(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameter,
        parent,
    ) {
        if (node.constraint) {
            if (
                parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
            ) {
                this.operators.add("in")
            } else {
                this.operators.add("extends")
            }
        }
        if (node.default) {
            this.operators.add("=")
        }
    },
    TSTypeParameterDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterDeclaration,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    },
    TSTypeParameterInstantiation(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterInstantiation,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    },
    TSTypePredicate(this: ExtractTokensContext) {
        this.operators.add("is")
    },
    TSTypeQuery(this: ExtractTokensContext) {
        this.operators.add("typeof")
    },
    TSTypeReference: noop,
    TSUndefinedKeyword(this: ExtractTokensContext) {
        this.operands.add("undefined")
    },
    TSUnionType(this: ExtractTokensContext, node: TSESTree.TSUnionType) {
        this.operators.add("|", node.types.length - 1)
    },
    TSUnknownKeyword(this: ExtractTokensContext) {
        this.operands.add("unknown")
    },
    TSVoidKeyword(this: ExtractTokensContext) {
        this.operands.add("void")
    },
}

/**
 * Extract tokens
 */
export function extractTokens(
    node: ESTree.Node | TSESTree.Node,
): ExtractTokensResult {
    const context = new ExtractTokensContext()

    walk(
        node as TSESTree.Node,
        (node: TSESTree.Node, parent: TSESTree.Node | null) => {
            const extract = EXTRACT_TOKENS[node.type] as any
            if (
                extract &&
                Object.prototype.hasOwnProperty.call(EXTRACT_TOKENS, node.type)
            ) {
                extract.call(context, node, parent)
            }
        },
    )

    return context
}

\` 1`] = `
Object {
  "deliveredBugs": 17.87841309927095,
  "difficulty": 154.05104408352668,
  "effort": 8262564.613497869,
  "length": 6032,
  "time": 459031.3674165483,
  "vocabulary": 475,
  "volume": 53635.23929781285,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ArrayExpression(
        this: ExtractTokensContext,
        node: TSESTree.ArrayExpression,
    ) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0472591500163462,
  "difficulty": 4.5,
  "effort": 637.9985252206737,
  "length": 34,
  "time": 35.44436251225965,
  "vocabulary": 18,
  "volume": 141.7774500490386,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ArrayPattern(this: ExtractTokensContext, node: TSESTree.ArrayPattern) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0472591500163462,
  "difficulty": 4.5,
  "effort": 637.9985252206737,
  "length": 34,
  "time": 35.44436251225965,
  "vocabulary": 18,
  "volume": 141.7774500490386,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ArrowFunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.ArrowFunctionExpression,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        if (node.generator) {
            // It cannot actually be used.
            this.operators.add("*")
        }
        if (
            node.params.length !== 1 ||
            node.params[0].type !== AST_NODE_TYPES.Identifier ||
            node.params[0].typeAnnotation
        ) {
            this.operators.add("()")
        }
        this.operators.add(",", node.params.length - 1)

        this.operators.add("=>")

        if (node.body.type === AST_NODE_TYPES.ObjectExpression) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.19149323263261206,
  "difficulty": 13.0625,
  "effort": 7504.141053790486,
  "length": 112,
  "time": 416.89672521058253,
  "vocabulary": 35,
  "volume": 574.4796978978362,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
AssignmentExpression(
        this: ExtractTokensContext,
        node: TSESTree.AssignmentExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05420902501875005,
  "difficulty": 6.363636363636363,
  "effort": 1034.8995685397738,
  "length": 39,
  "time": 57.49442047443188,
  "vocabulary": 18,
  "volume": 162.62707505625016,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
AssignmentPattern(
        this: ExtractTokensContext,
        _node: TSESTree.AssignmentPattern,
    ) {
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.02343611821489358,
  "difficulty": 3.125,
  "effort": 219.71360826462734,
  "length": 19,
  "time": 12.206311570257075,
  "vocabulary": 13,
  "volume": 70.30835464468075,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
AwaitExpression(
        this: ExtractTokensContext,
        node: TSESTree.AwaitExpression,
    ) {
        this.operators.add("await")

        if (getPrecedence(node) > getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05142907501778852,
  "difficulty": 6.045454545454546,
  "effort": 932.7364060044372,
  "length": 37,
  "time": 51.818689222468734,
  "vocabulary": 18,
  "volume": 154.28722505336555,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
BinaryExpression(
        this: ExtractTokensContext,
        node: TSESTree.BinaryExpression,
    ) {
        this.operators.add(node.operator as ESTree.BinaryExpression["operator"])

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06689147427955945,
  "difficulty": 7.961538461538462,
  "effort": 1597.67713567717,
  "length": 45,
  "time": 88.7598408709539,
  "vocabulary": 22,
  "volume": 200.67442283867837,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
BlockStatement(this: ExtractTokensContext) {
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
BreakStatement(this: ExtractTokensContext) {
        this.operators.add("break")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
CallExpression(this: ExtractTokensContext, node: TSESTree.CallExpression) {
        if (node.optional) {
            this.operators.add("?.")
        }
        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06734886714927432,
  "difficulty": 6,
  "effort": 1212.279608686938,
  "length": 46,
  "time": 67.34886714927433,
  "vocabulary": 21,
  "volume": 202.04660144782298,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
CatchClause(this: ExtractTokensContext, node: TSESTree.CatchClause) {
        this.operators.add("catch")
        if (node.param) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04133333333333333,
  "difficulty": 4.800000000000001,
  "effort": 595.2,
  "length": 31,
  "time": 33.06666666666667,
  "vocabulary": 16,
  "volume": 124,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ChainExpression: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ClassBody(this: ExtractTokensContext) {
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ClassDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ClassDeclaration,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.1269118723898095,
  "difficulty": 7.736842105263158,
  "effort": 2945.6913538897893,
  "length": 81,
  "time": 163.64951966054386,
  "vocabulary": 26,
  "volume": 380.7356171694285,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ClassExpression(
        this: ExtractTokensContext,
        node: TSESTree.ClassExpression,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09810749561002054,
  "difficulty": 6.375,
  "effort": 1876.3058535416428,
  "length": 66,
  "time": 104.23921408564682,
  "vocabulary": 22,
  "volume": 294.3224868300616,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ConditionalExpression(
        this: ExtractTokensContext,
        node: TSESTree.ConditionalExpression,
    ) {
        if (getPrecedence(node) >= getPrecedence(node.test)) {
            this.operators.add("()")
        }
        this.operators.add("?:")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05142907501778852,
  "difficulty": 6.045454545454546,
  "effort": 932.7364060044372,
  "length": 37,
  "time": 51.818689222468734,
  "vocabulary": 18,
  "volume": 154.28722505336555,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ContinueStatement(this: ExtractTokensContext) {
        this.operators.add("continue")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
DebuggerStatement(this: ExtractTokensContext) {
        this.operators.add("debugger")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
Decorator(this: ExtractTokensContext) {
        this.operators.add("@")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
DoWhileStatement(this: ExtractTokensContext) {
        this.operators.add("do")
        this.operators.add("while()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
EmptyStatement(this: ExtractTokensContext) {
        this.operators.add(";")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ExportAllDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportAllDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("*")
        if (node.exported) {
            this.operators.add("as")
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.14106166256418293,
  "difficulty": 9.68421052631579,
  "effort": 4098.212512390998,
  "length": 89,
  "time": 227.67847291061102,
  "vocabulary": 27,
  "volume": 423.18498769254876,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ExportDefaultDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportDefaultDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("default")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05559900001923083,
  "difficulty": 6.681818181818182,
  "effort": 1114.507227658218,
  "length": 40,
  "time": 61.91706820323433,
  "vocabulary": 18,
  "volume": 166.7970000576925,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ExportNamedDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportNamedDeclaration,
    ) {
        this.operators.add("export")
        if (node.specifiers.length) {
            if (node.exportKind === "type") {
                this.operators.add("type")
            }
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.15864271242790093,
  "difficulty": 12.078947368421051,
  "effort": 5748.710921400514,
  "length": 99,
  "time": 319.37282896669524,
  "vocabulary": 28,
  "volume": 475.92813728370277,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ExportSpecifier(
        this: ExtractTokensContext,
        node: TSESTree.ExportSpecifier,
    ) {
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.exported.name) {
            this.operators.add("as")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06734886714927432,
  "difficulty": 7.076923076923077,
  "effort": 1429.868256399978,
  "length": 46,
  "time": 79.43712535555433,
  "vocabulary": 21,
  "volume": 202.04660144782298,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ExpressionStatement: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ForInStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("in")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ForOfStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("of")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ForStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add(";", 2)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.027136557933034676,
  "difficulty": 3.75,
  "effort": 305.2862767466401,
  "length": 22,
  "time": 16.96034870814667,
  "vocabulary": 13,
  "volume": 81.40967379910403,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
FunctionDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.FunctionDeclaration,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.11907780619290768,
  "difficulty": 7.368421052631579,
  "effort": 2632.2462421590117,
  "length": 76,
  "time": 146.23590234216732,
  "vocabulary": 26,
  "volume": 357.23341857872305,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
FunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.20932917173223628,
  "difficulty": 12.642857142857142,
  "effort": 7939.556442129819,
  "length": 118,
  "time": 441.08646900721214,
  "vocabulary": 40,
  "volume": 627.9875151967088,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
Identifier(
        this: ExtractTokensContext,
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
            )
                return
        }
        this.operands.add(node.name)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.16679127578302483,
  "difficulty": 11.666666666666668,
  "effort": 5837.694652405869,
  "length": 101,
  "time": 324.31636957810383,
  "vocabulary": 31,
  "volume": 500.3738273490745,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
IfStatement(this: ExtractTokensContext, node: TSESTree.IfStatement) {
        this.operators.add("if()")
        if (node.alternate) {
            this.operators.add("else")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04133333333333333,
  "difficulty": 4.800000000000001,
  "effort": 595.2,
  "length": 31,
  "time": 33.06666666666667,
  "vocabulary": 16,
  "volume": 124,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ImportAttribute(this: ExtractTokensContext) {
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ImportDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ImportDeclaration,
    ) {
        this.operators.add("import")
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (
            node.specifiers.some(
                (spec) => spec.type === AST_NODE_TYPES.ImportSpecifier,
            )
        ) {
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.specifiers.length) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.18664258241626278,
  "difficulty": 12.391304347826086,
  "effort": 6938.235128952377,
  "length": 111,
  "time": 385.4575071640209,
  "vocabulary": 33,
  "volume": 559.9277472487884,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ImportDefaultSpecifier: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ImportExpression(
        this: ExtractTokensContext,
        node: TSESTree.ImportExpression,
    ) {
        this.operators.add("import")
        if (node.attributes) {
            this.operators.add(",")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04133333333333333,
  "difficulty": 4.800000000000001,
  "effort": 595.2,
  "length": 31,
  "time": 33.06666666666667,
  "vocabulary": 16,
  "volume": 124,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ImportNamespaceSpecifier(this: ExtractTokensContext) {
        this.operators.add("*")
        this.operators.add("as")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ImportSpecifier(
        this: ExtractTokensContext,
        node: TSESTree.ImportSpecifier,
    ) {
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.imported.name) {
            this.operators.add("as")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06734886714927432,
  "difficulty": 7.076923076923077,
  "effort": 1429.868256399978,
  "length": 46,
  "time": 79.43712535555433,
  "vocabulary": 21,
  "volume": 202.04660144782298,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXAttribute(this: ExtractTokensContext) {
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXClosingElement(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXClosingFragment(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXElement: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXEmptyExpression: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXExpressionContainer(this: ExtractTokensContext) {
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXFragment: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXIdentifier(this: ExtractTokensContext, node: TSESTree.JSXIdentifier) {
        this.operands.add(node.name)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.025903078026987644,
  "difficulty": 3.4375,
  "effort": 267.12549215331006,
  "length": 21,
  "time": 14.840305119628336,
  "vocabulary": 13,
  "volume": 77.70923408096293,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXMemberExpression(this: ExtractTokensContext) {
        this.operators.add(".")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXNamespacedName(this: ExtractTokensContext) {
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXOpeningElement(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXOpeningFragment(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXSpreadAttribute(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXSpreadChild(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
JSXText(this: ExtractTokensContext, node: TSESTree.JSXText) {
        this.operands.add(JSON.stringify(node.value))
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03255742163007099,
  "difficulty": 3.25,
  "effort": 317.43486089319214,
  "length": 25,
  "time": 17.635270049621784,
  "vocabulary": 15,
  "volume": 97.67226489021297,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
LabeledStatement(this: ExtractTokensContext) {
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
Literal(this: ExtractTokensContext, node: TSESTree.Literal) {
        if ("bigint" in node && node.bigint) {
            this.operands.add(\`\${node.bigint}n\`)
        } else if ("regex" in node && node.regex) {
            this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
        } else {
            this.operands.add(JSON.stringify(node.value))
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.12430789508874915,
  "difficulty": 8.571428571428571,
  "effort": 3196.4887308535494,
  "length": 76,
  "time": 177.58270726964165,
  "vocabulary": 30,
  "volume": 372.92368526624745,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
LogicalExpression(
        this: ExtractTokensContext,
        node: TSESTree.LogicalExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05420902501875005,
  "difficulty": 6.363636363636363,
  "effort": 1034.8995685397738,
  "length": 39,
  "time": 57.49442047443188,
  "vocabulary": 18,
  "volume": 162.62707505625016,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
MemberExpression(
        this: ExtractTokensContext,
        node: TSESTree.MemberExpression,
    ) {
        if (getPrecedence(node) > getPrecedence(node.object)) {
            this.operators.add("()")
        }
        if (node.optional) {
            this.operators.add("?.")
            if (node.computed) {
                this.operators.add("[]")
            }
        } else if (node.computed) {
            this.operators.add("[]")
        } else {
            this.operators.add(".")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.11459690288677767,
  "difficulty": 9.866666666666667,
  "effort": 3392.068325448619,
  "length": 76,
  "time": 188.44824030270104,
  "vocabulary": 23,
  "volume": 343.790708660333,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
MetaProperty(this: ExtractTokensContext) {
        this.operators.add(".")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
MethodDefinition(
        this: ExtractTokensContext,
        node: TSESTree.MethodDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.10404192498931131,
  "difficulty": 9.6,
  "effort": 2996.4074396921656,
  "length": 69,
  "time": 166.4670799828981,
  "vocabulary": 23,
  "volume": 312.1257749679339,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
NewExpression(this: ExtractTokensContext, node: TSESTree.NewExpression) {
        this.operators.add("new")

        if (getPrecedence(node) >= getPrecedence(node.callee)) {
            this.operators.add("()")
        }

        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.08896338513578791,
  "difficulty": 8.266666666666667,
  "effort": 2206.2919513675406,
  "length": 59,
  "time": 122.57177507597447,
  "vocabulary": 23,
  "volume": 266.89015540736375,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ObjectExpression(
        this: ExtractTokensContext,
        node: TSESTree.ObjectExpression,
    ) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0472591500163462,
  "difficulty": 4.5,
  "effort": 637.9985252206737,
  "length": 34,
  "time": 35.44436251225965,
  "vocabulary": 18,
  "volume": 141.7774500490386,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ObjectPattern(this: ExtractTokensContext, node: TSESTree.ObjectPattern) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0472591500163462,
  "difficulty": 4.5,
  "effort": 637.9985252206737,
  "length": 34,
  "time": 35.44436251225965,
  "vocabulary": 18,
  "volume": 141.7774500490386,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
PrivateIdentifier(
        this: ExtractTokensContext,
        node: TSESTree.PrivateIdentifier,
    ) {
        this.operands.add(\`#\${node.name}\`)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.02995282789966531,
  "difficulty": 3.25,
  "effort": 292.04007202173676,
  "length": 23,
  "time": 16.224448445652044,
  "vocabulary": 15,
  "volume": 89.85848369899593,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
Program: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
Property(this: ExtractTokensContext, node: TSESTree.Property) {
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
        if (!node.shorthand && !node.method) {
            this.operators.add(":")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09752097998526921,
  "difficulty": 10.333333333333334,
  "effort": 3023.1503795433455,
  "length": 63,
  "time": 167.9527988635192,
  "vocabulary": 25,
  "volume": 292.5629399558076,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
PropertyDefinition(
        this: ExtractTokensContext,
        node: TSESTree.PropertyDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.readonly) this.operators.add("readonly")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.10553988164108272,
  "difficulty": 6.9375,
  "effort": 2196.548786655034,
  "length": 71,
  "time": 122.03048814750188,
  "vocabulary": 22,
  "volume": 316.61964492324813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
RestElement(this: ExtractTokensContext) {
        this.operators.add("...")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ReturnStatement(this: ExtractTokensContext) {
        this.operators.add("return")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
SequenceExpression(
        this: ExtractTokensContext,
        node: TSESTree.SequenceExpression,
    ) {
        this.operators.add(",", node.expressions.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03678716557125306,
  "difficulty": 3.8181818181818183,
  "effort": 421.3802601798078,
  "length": 27,
  "time": 23.410014454433767,
  "vocabulary": 17,
  "volume": 110.36149671375918,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
SpreadElement(this: ExtractTokensContext) {
        this.operators.add("...")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
StaticBlock(this: ExtractTokensContext) {
        this.operators.add("static")
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
Super(this: ExtractTokensContext) {
        this.operands.add("super")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
SwitchCase(this: ExtractTokensContext, node: TSESTree.SwitchCase) {
        if (node.test) {
            this.operators.add("case")
        } else {
            this.operators.add("default")
        }
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05559900001923083,
  "difficulty": 6.363636363636363,
  "effort": 1061.4354549125885,
  "length": 40,
  "time": 58.96863638403269,
  "vocabulary": 18,
  "volume": 166.7970000576925,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
SwitchStatement(this: ExtractTokensContext) {
        this.operators.add("switch()")
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSAbstractKeyword(this: ExtractTokensContext) {
        this.operators.add("abstract")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSAbstractMethodDefinition(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractMethodDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.11615238335160265,
  "difficulty": 10,
  "effort": 3484.5715005480793,
  "length": 76,
  "time": 193.5873055860044,
  "vocabulary": 24,
  "volume": 348.4571500548079,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSAbstractPropertyDefinition(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractPropertyDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09809508910872565,
  "difficulty": 7,
  "effort": 2059.9968712832388,
  "length": 67,
  "time": 114.4442706268466,
  "vocabulary": 21,
  "volume": 294.28526732617695,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSAnyKeyword(this: ExtractTokensContext) {
        this.operands.add("any")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSArrayType(this: ExtractTokensContext) {
        this.operators.add("[]")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSAsExpression(this: ExtractTokensContext) {
        this.operators.add("as")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSAsyncKeyword(this: ExtractTokensContext) {
        this.operators.add("async")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSBigIntKeyword(this: ExtractTokensContext) {
        this.operands.add("bigint")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSBooleanKeyword(this: ExtractTokensContext) {
        this.operands.add("boolean")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSCallSignatureDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSCallSignatureDeclaration,
    ) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0472591500163462,
  "difficulty": 4.5,
  "effort": 637.9985252206737,
  "length": 34,
  "time": 35.44436251225965,
  "vocabulary": 18,
  "volume": 141.7774500490386,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSClassImplements: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSConditionalType(this: ExtractTokensContext) {
        this.operators.add("extends")
        this.operators.add("?:")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSConstructSignatureDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructSignatureDeclaration,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05805500935039566,
  "difficulty": 5.076923076923077,
  "effort": 884.2224501060263,
  "length": 41,
  "time": 49.123469450334795,
  "vocabulary": 19,
  "volume": 174.165028051187,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSConstructorType(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructorType,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05805500935039566,
  "difficulty": 5.076923076923077,
  "effort": 884.2224501060263,
  "length": 41,
  "time": 49.123469450334795,
  "vocabulary": 19,
  "volume": 174.165028051187,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSDeclareFunction(
        this: ExtractTokensContext,
        node: TSESTree.TSDeclareFunction,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09934085418229173,
  "difficulty": 7,
  "effort": 2086.1579378281263,
  "length": 65,
  "time": 115.89766321267368,
  "vocabulary": 24,
  "volume": 298.0225625468752,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSDeclareKeyword(this: ExtractTokensContext) {
        this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSEmptyBodyFunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.20932917173223628,
  "difficulty": 12.642857142857142,
  "effort": 7939.556442129819,
  "length": 118,
  "time": 441.08646900721214,
  "vocabulary": 40,
  "volume": 627.9875151967088,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSEnumDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSEnumDeclaration,
    ) {
        if (node.const) this.operators.add("const")
        this.operators.add("enum")
        this.operators.add("{}")
        this.operators.add(",", node.members.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.09628421251514431,
  "difficulty": 7,
  "effort": 2021.9684628180303,
  "length": 63,
  "time": 112.33158126766835,
  "vocabulary": 24,
  "volume": 288.8526375454329,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSEnumMember(this: ExtractTokensContext, node: TSESTree.TSEnumMember) {
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.initializer) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04904955409500408,
  "difficulty": 4.909090909090909,
  "effort": 722.366160308242,
  "length": 36,
  "time": 40.13145335045789,
  "vocabulary": 17,
  "volume": 147.14866228501225,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSExportAssignment(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSExportKeyword(this: ExtractTokensContext) {
        this.operators.add("export")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSExternalModuleReference(this: ExtractTokensContext) {
        this.operands.add("require")
        this.operators.add("()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.02389975000480771,
  "difficulty": 2.75,
  "effort": 197.1729375396636,
  "length": 20,
  "time": 10.954052085536865,
  "vocabulary": 12,
  "volume": 71.69925001442313,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSFunctionType(this: ExtractTokensContext, node: TSESTree.TSFunctionType) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0472591500163462,
  "difficulty": 4.5,
  "effort": 637.9985252206737,
  "length": 34,
  "time": 35.44436251225965,
  "vocabulary": 18,
  "volume": 141.7774500490386,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSImportEqualsDeclaration(this: ExtractTokensContext) {
        this.operators.add("import")
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSImportType(this: ExtractTokensContext, node: TSESTree.TSImportType) {
        this.operators.add("import")
        this.operators.add("()")
        if (node.qualifier) {
            this.operators.add(".")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0517745293225043,
  "difficulty": 5.454545454545454,
  "effort": 847.2195707318886,
  "length": 38,
  "time": 47.06775392954936,
  "vocabulary": 17,
  "volume": 155.3235879675129,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSIndexSignature(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06796684021509736,
  "difficulty": 6,
  "effort": 1223.4031238717525,
  "length": 48,
  "time": 67.96684021509736,
  "vocabulary": 19,
  "volume": 203.9005206452921,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSIndexedAccessType(this: ExtractTokensContext) {
        this.operators.add("[]")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSInferType(this: ExtractTokensContext) {
        this.operators.add("infer")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSInterfaceBody(this: ExtractTokensContext) {
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSInterfaceDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSInterfaceDeclaration,
    ) {
        this.operators.add("interface")
        if (node.extends) {
            this.operators.add("extends")
            this.operators.add(",", node.extends.length - 1)
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.15041407098051496,
  "difficulty": 9.210526315789474,
  "effort": 4156.178277093177,
  "length": 96,
  "time": 230.89879317184315,
  "vocabulary": 26,
  "volume": 451.2422129415449,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSInterfaceHeritage: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSIntersectionType(
        this: ExtractTokensContext,
        node: TSESTree.TSIntersectionType,
    ) {
        this.operators.add("&", node.types.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03678716557125306,
  "difficulty": 3.8181818181818183,
  "effort": 421.3802601798078,
  "length": 27,
  "time": 23.410014454433767,
  "vocabulary": 17,
  "volume": 110.36149671375918,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSIntrinsicKeyword(this: ExtractTokensContext) {
        this.operands.add("intrinsic")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSLiteralType: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSMappedType(this: ExtractTokensContext, node: TSESTree.TSMappedType) {
        this.operators.add("{}")
        if (node.readonly) {
            if (typeof node.readonly === "string") {
                this.operators.add(node.readonly)
            }
            this.operators.add("readonly")
        }

        this.operators.add("[]")
        if (node.optional) {
            if (typeof node.optional === "string") {
                this.operators.add(node.optional)
            }
            this.operators.add("?")
        }
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.13721471266706273,
  "difficulty": 12.266666666666667,
  "effort": 5049.501426147909,
  "length": 91,
  "time": 280.52785700821715,
  "vocabulary": 23,
  "volume": 411.6441380011882,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSMethodSignature(
        this: ExtractTokensContext,
        node: TSESTree.TSMethodSignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")

        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.21030060369474363,
  "difficulty": 11.423076923076923,
  "effort": 7206.839918923714,
  "length": 123,
  "time": 400.37999549576193,
  "vocabulary": 35,
  "volume": 630.9018110842309,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSModuleBlock(this: ExtractTokensContext) {
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSModuleDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSModuleDeclaration,
    ) {
        if (node.declare) this.operators.add("declare")
        if (!node.global) {
            this.operators.add("module")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05003910001730774,
  "difficulty": 5.7272727272727275,
  "effort": 859.7627184791967,
  "length": 36,
  "time": 47.764595471066485,
  "vocabulary": 18,
  "volume": 150.11730005192322,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSNamedTupleMember(
        this: ExtractTokensContext,
        node: TSESTree.TSNamedTupleMember,
    ) {
        if (node.optional) this.operators.add("?")
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04,
  "difficulty": 4.800000000000001,
  "effort": 576.0000000000001,
  "length": 30,
  "time": 32.00000000000001,
  "vocabulary": 16,
  "volume": 120,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSNamespaceExportDeclaration(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("as")
        this.operators.add("namespace")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03226466250649041,
  "difficulty": 3.75,
  "effort": 362.9774531980171,
  "length": 27,
  "time": 20.165414066556504,
  "vocabulary": 12,
  "volume": 96.79398751947123,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSNeverKeyword(this: ExtractTokensContext) {
        this.operands.add("never")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSNonNullExpression(this: ExtractTokensContext) {
        this.operators.add("!")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSNullKeyword(this: ExtractTokensContext) {
        this.operands.add("null")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSNumberKeyword(this: ExtractTokensContext) {
        this.operands.add("number")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSObjectKeyword(this: ExtractTokensContext) {
        this.operands.add("object")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSOptionalType(this: ExtractTokensContext) {
        this.operators.add("?")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSParameterProperty(
        this: ExtractTokensContext,
        node: TSESTree.TSParameterProperty,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.08355727650115567,
  "difficulty": 6.642857142857143,
  "effort": 1665.1771531301738,
  "length": 58,
  "time": 92.50984184056522,
  "vocabulary": 20,
  "volume": 250.67182950346702,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSPrivateKeyword(this: ExtractTokensContext) {
        this.operators.add("private")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSPropertySignature(
        this: ExtractTokensContext,
        node: TSESTree.TSPropertySignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.12226566668589753,
  "difficulty": 7.166666666666666,
  "effort": 2628.7118337467964,
  "length": 80,
  "time": 146.03954631926646,
  "vocabulary": 24,
  "volume": 366.79700005769257,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSProtectedKeyword(this: ExtractTokensContext) {
        this.operators.add("protected")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSPublicKeyword(this: ExtractTokensContext) {
        this.operators.add("public")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSQualifiedName(this: ExtractTokensContext) {
        this.operators.add(".")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSReadonlyKeyword(this: ExtractTokensContext) {
        this.operators.add("readonly")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSRestType(this: ExtractTokensContext) {
        this.operators.add("...")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSStaticKeyword(this: ExtractTokensContext) {
        this.operators.add("static")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSStringKeyword(this: ExtractTokensContext) {
        this.operands.add("string")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSSymbolKeyword(this: ExtractTokensContext) {
        this.operands.add("symbol")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTemplateLiteralType: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSThisType(this: ExtractTokensContext) {
        this.operands.add("this")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTupleType(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        this.operators.add(",", node.elementTypes.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.040874628412503396,
  "difficulty": 4.363636363636363,
  "effort": 535.0860446727717,
  "length": 30,
  "time": 29.727002481820648,
  "vocabulary": 17,
  "volume": 122.6238852375102,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypeAliasDeclaration(this: ExtractTokensContext) {
        this.operators.add("type")
        this.operators.add("=")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.023062877457581985,
  "difficulty": 3.142857142857143,
  "effort": 217.4499874572016,
  "length": 20,
  "time": 12.080554858733421,
  "vocabulary": 11,
  "volume": 69.18863237274596,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypeAnnotation(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
            ) {
                this.operators.add("=>")
                return
            }
            if (parent.type === AST_NODE_TYPES.TSTypePredicate) {
                return
            }
        }
        this.operators.add(":")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.12468817887494103,
  "difficulty": 11.305555555555554,
  "effort": 4229.007400175083,
  "length": 77,
  "time": 234.94485556528238,
  "vocabulary": 29,
  "volume": 374.0645366248231,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypeAssertion(this: ExtractTokensContext) {
        this.operators.add("<>")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypeLiteral(this: ExtractTokensContext) {
        this.operators.add("{}")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypeOperator(this: ExtractTokensContext) {
        this.operators.add("keyof")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypeParameter(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameter,
        parent,
    ) {
        if (node.constraint) {
            if (
                parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
            ) {
                this.operators.add("in")
            } else {
                this.operators.add("extends")
            }
        }
        if (node.default) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.10027604732034331,
  "difficulty": 8.205882352941176,
  "effort": 2468.560341386098,
  "length": 64,
  "time": 137.14224118811657,
  "vocabulary": 26,
  "volume": 300.8281419610299,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypeParameterDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterDeclaration,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0472591500163462,
  "difficulty": 4.5,
  "effort": 637.9985252206737,
  "length": 34,
  "time": 35.44436251225965,
  "vocabulary": 18,
  "volume": 141.7774500490386,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypeParameterInstantiation(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterInstantiation,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.0472591500163462,
  "difficulty": 4.5,
  "effort": 637.9985252206737,
  "length": 34,
  "time": 35.44436251225965,
  "vocabulary": 18,
  "volume": 141.7774500490386,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypePredicate(this: ExtractTokensContext) {
        this.operators.add("is")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypeQuery(this: ExtractTokensContext) {
        this.operators.add("typeof")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSTypeReference: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSUndefinedKeyword(this: ExtractTokensContext) {
        this.operands.add("undefined")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSUnionType(this: ExtractTokensContext, node: TSESTree.TSUnionType) {
        this.operators.add("|", node.types.length - 1)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03678716557125306,
  "difficulty": 3.8181818181818183,
  "effort": 421.3802601798078,
  "length": 27,
  "time": 23.410014454433767,
  "vocabulary": 17,
  "volume": 110.36149671375918,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSUnknownKeyword(this: ExtractTokensContext) {
        this.operands.add("unknown")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TSVoidKeyword(this: ExtractTokensContext) {
        this.operands.add("void")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TaggedTemplateExpression: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TemplateElement(
        this: ExtractTokensContext,
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) {
        let open = "\`"
        let close = "\`"
        if (
            parent &&
            (parent.type === AST_NODE_TYPES.TemplateLiteral ||
                parent.type === AST_NODE_TYPES.TSTemplateLiteralType)
        ) {
            const index = parent.quasis.indexOf(node)
            if (index > 0) {
                open = "}"
            }
            if (index < parent.quasis.length - 1) {
                close = "\${"
            }
        }
        this.operands.add(\`\${open}\${node.value.cooked}\${close}\`)
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.17859516991251007,
  "difficulty": 13.6,
  "effort": 7286.682932430411,
  "length": 97,
  "time": 404.8157184683562,
  "vocabulary": 46,
  "volume": 535.7855097375302,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TemplateLiteral: noop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ThisExpression(this: ExtractTokensContext) {
        this.operands.add("this")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
ThrowStatement(this: ExtractTokensContext) {
        this.operators.add("throw")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
TryStatement(this: ExtractTokensContext, node: TSESTree.TryStatement) {
        this.operators.add("try")
        if (node.finalizer) {
            this.operators.add("finally")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.04133333333333333,
  "difficulty": 4.800000000000001,
  "effort": 595.2,
  "length": 31,
  "time": 33.06666666666667,
  "vocabulary": 16,
  "volume": 124,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
UnaryExpression(
        this: ExtractTokensContext,
        node: TSESTree.UnaryExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05420902501875005,
  "difficulty": 6.363636363636363,
  "effort": 1034.8995685397738,
  "length": 39,
  "time": 57.49442047443188,
  "vocabulary": 18,
  "volume": 162.62707505625016,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
UpdateExpression(
        this: ExtractTokensContext,
        node: TSESTree.UpdateExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.05420902501875005,
  "difficulty": 6.363636363636363,
  "effort": 1034.8995685397738,
  "length": 39,
  "time": 57.49442047443188,
  "vocabulary": 18,
  "volume": 162.62707505625016,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
VariableDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclaration,
    ) {
        this.operators.add(node.kind)
        this.operators.add(",", node.declarations.length - 1)

        if (node.declare) this.operators.add("declare")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.06881297295686725,
  "difficulty": 6.25,
  "effort": 1290.2432429412609,
  "length": 47,
  "time": 71.68018016340338,
  "vocabulary": 21,
  "volume": 206.43891887060175,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
VariableDeclarator(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclarator,
    ) {
        if (node.init) {
            this.operators.add("=")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.03125512476486815,
  "difficulty": 4,
  "effort": 375.06149717841777,
  "length": 24,
  "time": 20.836749843245432,
  "vocabulary": 15,
  "volume": 93.76537429460444,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
WhileStatement(this: ExtractTokensContext) {
        this.operators.add("while()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
WithStatement(this: ExtractTokensContext) {
        this.operators.add("with()")
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 2.3333333333333335,
  "effort": 100.76515221158334,
  "length": 13,
  "time": 5.59806401175463,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts Property\`
YieldExpression(
        this: ExtractTokensContext,
        node: TSESTree.YieldExpression,
    ) {
        this.operators.add("yield")
        if (node.delegate) {
            this.operators.add("*")
        }
        if (
            node.argument &&
            getPrecedence(node) > getPrecedence(node.argument)
        ) {
            this.operators.add("()")
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.07759760780242476,
  "difficulty": 8.307692307692308,
  "effort": 1933.9711483065867,
  "length": 53,
  "time": 107.44284157258815,
  "vocabulary": 21,
  "volume": 232.7928234072743,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts PropertyDefinition\`
private readonly distinct = new Set<T>()
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 3,
  "effort": 85.58797503894243,
  "length": 9,
  "time": 4.754887502163468,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts PropertyDefinition\`
private readonly total: T[] = []
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 2.5,
  "effort": 56.14709844115208,
  "length": 8,
  "time": 3.1192832467306713,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts PropertyDefinition\`
public readonly operands = new TokensCollection<string>()
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 3,
  "effort": 85.58797503894243,
  "length": 9,
  "time": 4.754887502163468,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts PropertyDefinition\`
public readonly operators = new TokensCollection<Operator>()
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 3,
  "effort": 85.58797503894243,
  "length": 9,
  "time": 4.754887502163468,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 1
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 2
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 3
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 4
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 5
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 6
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 7
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 8
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 9
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 10
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 11
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 12
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 13
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 14
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 14.5
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 15
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 16
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 18
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return 19
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return Infinity
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return context
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return this.distinct.size
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 1,
  "effort": 13.931568569324174,
  "length": 6,
  "time": 0.7739760316291208,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return this.total
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ReturnStatement\`
return this.total.length
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 1,
  "effort": 13.931568569324174,
  "length": 6,
  "time": 0.7739760316291208,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSAnyKeyword\`
any
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSArrayType\`
T[]
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSAsExpression\`
EXTRACT_TOKENS[node.type] as any
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 1.5,
  "effort": 29.47722668160484,
  "length": 7,
  "time": 1.6376237045336022,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSAsExpression\`
node as TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSAsExpression\`
node.operator as ESTree.BinaryExpression["operator"]
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 1.5,
  "effort": 40.5,
  "length": 9,
  "time": 2.25,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSClassImplements\`
ExtractTokensResult
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSIndexedAccessType\`
ESTree.BinaryExpression["operator"]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSIndexedAccessType\`
TSESTree.AssignmentExpression["operator"]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSIndexedAccessType\`
TSESTree.LogicalExpression["operator"]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSIndexedAccessType\`
TSESTree.UnaryExpression["operator"]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSIndexedAccessType\`
TSESTree.UpdateExpression["operator"]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSIndexedAccessType\`
TSESTree.VariableDeclaration["kind"]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"()"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
","
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"."
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"..."
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
":"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
";"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"</"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"<>"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"=>"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"?"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"?."
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"?:"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"@"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"[]"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"{}"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"abstract"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"as"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"assert"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"async"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"await"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"break"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"case"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"catch"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"class"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"continue"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"debugger"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"declare"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"default"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"do"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"else"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"enum"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"export"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"extends"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"finally"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"for()"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"from"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"function"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"get"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"if()"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"implements"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"import"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"infer"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"interface"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"is"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"keyof"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"kind"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"module"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"namespace"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"new"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"of"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"operator"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"private"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"protected"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"public"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"readonly"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"return"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"set"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"static"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"switch()"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"throw"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"try"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"type"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"while()"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"with()"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSLiteralType\`
"yield"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSNullKeyword\`
null
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSNumberKeyword\`
number
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSPropertySignature\`
readonly operands: TokensCollection<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSPropertySignature\`
readonly operators: TokensCollection<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSStringKeyword\`
string
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAliasDeclaration\`
type AllVisitor = Required<Visitor>
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAliasDeclaration\`
type ExtractTokensResult = {
    readonly operators: TokensCollection<string>
    readonly operands: TokensCollection<string>
}
\` 1`] = `
Object {
  "deliveredBugs": 0.018450301966065587,
  "difficulty": 4.199999999999999,
  "effort": 232.47380477242638,
  "length": 16,
  "time": 12.91521137624591,
  "vocabulary": 11,
  "volume": 55.350905898196764,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAliasDeclaration\`
type Operator =
    | TSESTree.AssignmentExpression["operator"]
    | ESTree.BinaryExpression["operator"]
    | TSESTree.LogicalExpression["operator"]
    | TSESTree.UnaryExpression["operator"]
    | TSESTree.UpdateExpression["operator"]
    | TSESTree.VariableDeclaration["kind"]
    | "()"
    | "[]"
    | "{}"
    | ","
    | "."
    | "=>"
    | "?."
    | "?:"
    | "@"
    | ";"
    | ":"
    | "..."
    | "</" // JSXClosingElement, JSXClosingFragment
    | "async"
    | "await"
    | "break"
    | "catch"
    | "class"
    | "extends"
    | "continue"
    | "debugger"
    | "do"
    | "while()"
    | "export"
    | "type"
    | "as"
    | "default"
    | "for()"
    | "of"
    | "function"
    | "if()"
    | "else"
    | "import"
    | "from"
    | "assert"
    | "static"
    | "get"
    | "set"
    | "new"
    | "return"
    | "case"
    | "switch()"
    | "throw"
    | "try"
    | "finally"
    | "with()"
    | "yield"
    // TS
    | "?"
    | "<>"
    | "private"
    | "protected"
    | "public"
    | "implements"
    | "abstract"
    | "declare"
    | "enum"
    | "infer"
    | "interface"
    | "readonly"
    | "module"
    | "namespace"
    | "keyof"
    | "is"
\` 1`] = `
Object {
  "deliveredBugs": 0.3446066809003483,
  "difficulty": 2.77027027027027,
  "effort": 2863.960929104246,
  "length": 164,
  "time": 159.10894050579145,
  "vocabulary": 79,
  "volume": 1033.820042701045,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: AllVisitor
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: ESTree.Node | TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.006893233335256416,
  "difficulty": 2,
  "effort": 41.3594000115385,
  "length": 8,
  "time": 2.2977444450854723,
  "vocabulary": 6,
  "volume": 20.67970000576925,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: ExtractTokensContext
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: ExtractTokensResult
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: T
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: T[]
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ArrayExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ArrayPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ArrowFunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.AssignmentExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.AssignmentPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.AwaitExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.BinaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.CallExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.CatchClause
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ClassDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ClassExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ConditionalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ExportAllDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ExportDefaultDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ExportNamedDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ExportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.Expression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.FunctionDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.FunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.Identifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.IfStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ImportDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ImportExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ImportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.JSXIdentifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.JSXText
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.Literal
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.LogicalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.MemberExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.MethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.NewExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.Node | null
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ObjectExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.ObjectPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.PrivateIdentifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.Property
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.PropertyDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.SequenceExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.SwitchCase
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSAbstractMethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSAbstractPropertyDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSCallSignatureDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSConstructSignatureDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSConstructorType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSDeclareFunction
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSEmptyBodyFunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSEnumDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSEnumMember
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSFunctionType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSImportType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSInterfaceDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSIntersectionType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSMappedType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSMethodSignature
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSModuleDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSNamedTupleMember
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSParameterProperty
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSPropertySignature
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSTypeAnnotation
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSTypeParameter
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSTypeParameterDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSTypeParameterInstantiation
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TSUnionType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TemplateElement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.TryStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.UnaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.UpdateExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.VariableDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.VariableDeclarator
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TSESTree.YieldExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: TokensCollection<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: number
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeAnnotation\`
: void
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeLiteral\`
{
    readonly operators: TokensCollection<string>
    readonly operands: TokensCollection<string>
}
\` 1`] = `
Object {
  "deliveredBugs": 0.013,
  "difficulty": 3,
  "effort": 117,
  "length": 13,
  "time": 6.5,
  "vocabulary": 8,
  "volume": 39,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeParameter\`
T
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeParameterDeclaration\`
<T>
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeParameterInstantiation\`
<Operator>
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeParameterInstantiation\`
<Visitor>
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeParameterInstantiation\`
<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
AllVisitor
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
ESTree.BinaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
ESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
ExtractTokensContext
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
Operator
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
Required<Visitor>
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ArrayExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ArrayPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ArrowFunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.AssignmentExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.AssignmentPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.AwaitExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.BinaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.CallExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.CatchClause
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ClassDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ClassExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ConditionalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ExportAllDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ExportDefaultDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ExportNamedDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ExportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.Expression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.FunctionDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.FunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.Identifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.IfStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ImportDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ImportExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ImportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.JSXIdentifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.JSXText
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.Literal
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.LogicalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.MemberExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.MethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.NewExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ObjectExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.ObjectPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.PrivateIdentifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.Property
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.PropertyDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.SequenceExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.SwitchCase
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSAbstractMethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSAbstractPropertyDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSCallSignatureDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSConstructSignatureDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSConstructorType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSDeclareFunction
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSEmptyBodyFunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSEnumDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSEnumMember
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSFunctionType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSImportType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSInterfaceDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSIntersectionType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSMappedType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSMethodSignature
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSModuleDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSNamedTupleMember
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSParameterProperty
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSPropertySignature
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSTypeAnnotation
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSTypeParameter
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSTypeParameterDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSTypeParameterInstantiation
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TSUnionType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TemplateElement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.TryStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.UnaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.UpdateExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.VariableDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.VariableDeclarator
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TSESTree.YieldExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSTypeReference\`
TokensCollection<string>
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSUnionType\`
| TSESTree.AssignmentExpression["operator"]
    | ESTree.BinaryExpression["operator"]
    | TSESTree.LogicalExpression["operator"]
    | TSESTree.UnaryExpression["operator"]
    | TSESTree.UpdateExpression["operator"]
    | TSESTree.VariableDeclaration["kind"]
    | "()"
    | "[]"
    | "{}"
    | ","
    | "."
    | "=>"
    | "?."
    | "?:"
    | "@"
    | ";"
    | ":"
    | "..."
    | "</" // JSXClosingElement, JSXClosingFragment
    | "async"
    | "await"
    | "break"
    | "catch"
    | "class"
    | "extends"
    | "continue"
    | "debugger"
    | "do"
    | "while()"
    | "export"
    | "type"
    | "as"
    | "default"
    | "for()"
    | "of"
    | "function"
    | "if()"
    | "else"
    | "import"
    | "from"
    | "assert"
    | "static"
    | "get"
    | "set"
    | "new"
    | "return"
    | "case"
    | "switch()"
    | "throw"
    | "try"
    | "finally"
    | "with()"
    | "yield"
    // TS
    | "?"
    | "<>"
    | "private"
    | "protected"
    | "public"
    | "implements"
    | "abstract"
    | "declare"
    | "enum"
    | "infer"
    | "interface"
    | "readonly"
    | "module"
    | "namespace"
    | "keyof"
    | "is"
\` 1`] = `
Object {
  "deliveredBugs": 0.3353054432214725,
  "difficulty": 1.6643835616438356,
  "effort": 1674.2306034825576,
  "length": 161,
  "time": 93.01281130458653,
  "vocabulary": 76,
  "volume": 1005.9163296644174,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSUnionType\`
ESTree.Node | TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.005417832221403845,
  "difficulty": 1.3333333333333333,
  "effort": 21.67132888561538,
  "length": 7,
  "time": 1.2039627158675212,
  "vocabulary": 5,
  "volume": 16.253496664211536,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSUnionType\`
TSESTree.Node | null
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TSVoidKeyword\`
void
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateElement\`
\`#\${
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateElement\`
\`\${
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateElement\`
\`/\${
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateElement\`
\`Unknown operator precedence:\${
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateElement\`
}\${
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateElement\`
}/\${
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateElement\`
}\`
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateElement\`
}n\`
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateLiteral\`
\`#\${node.name}\`
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 0.5,
  "effort": 5.804820237218405,
  "length": 5,
  "time": 0.32249001317880027,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateLiteral\`
\`\${node.bigint}n\`
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 0.5,
  "effort": 5.804820237218405,
  "length": 5,
  "time": 0.32249001317880027,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateLiteral\`
\`\${open}\${node.value.cooked}\${close}\`
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 0.5625,
  "effort": 19.61391094642431,
  "length": 11,
  "time": 1.089661719245795,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateLiteral\`
\`/\${node.regex.pattern}/\${node.regex.flags}\`
\` 1`] = `
Object {
  "deliveredBugs": 0.013,
  "difficulty": 0.6428571428571429,
  "effort": 25.071428571428573,
  "length": 13,
  "time": 1.392857142857143,
  "vocabulary": 8,
  "volume": 39,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts TemplateLiteral\`
\`Unknown operator precedence:\${node.operator}\`
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 0.5,
  "effort": 5.804820237218405,
  "length": 5,
  "time": 0.32249001317880027,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ThisExpression\`
this
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts ThrowStatement\`
throw new Error(\`Unknown operator precedence:\${node.operator}\`)
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2,
  "effort": 57.058650025961626,
  "length": 9,
  "time": 3.1699250014423126,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts UnaryExpression\`
!node.global
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts UnaryExpression\`
!node.method
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts UnaryExpression\`
!node.shorthand
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts UnaryExpression\`
!parent
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts UnaryExpression\`
!parent.method
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts UnaryExpression\`
typeof node.optional
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts UnaryExpression\`
typeof node.readonly
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts UpdateExpression\`
index++
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclaration\`
const EXTRACT_TOKENS: AllVisitor = {
    ArrayExpression(
        this: ExtractTokensContext,
        node: TSESTree.ArrayExpression,
    ) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    },
    ArrayPattern(this: ExtractTokensContext, node: TSESTree.ArrayPattern) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    },
    ArrowFunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.ArrowFunctionExpression,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        if (node.generator) {
            // It cannot actually be used.
            this.operators.add("*")
        }
        if (
            node.params.length !== 1 ||
            node.params[0].type !== AST_NODE_TYPES.Identifier ||
            node.params[0].typeAnnotation
        ) {
            this.operators.add("()")
        }
        this.operators.add(",", node.params.length - 1)

        this.operators.add("=>")

        if (node.body.type === AST_NODE_TYPES.ObjectExpression) {
            this.operators.add("()")
        }
    },
    AssignmentExpression(
        this: ExtractTokensContext,
        node: TSESTree.AssignmentExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    AssignmentPattern(
        this: ExtractTokensContext,
        _node: TSESTree.AssignmentPattern,
    ) {
        this.operators.add("=")
    },
    AwaitExpression(
        this: ExtractTokensContext,
        node: TSESTree.AwaitExpression,
    ) {
        this.operators.add("await")

        if (getPrecedence(node) > getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    BinaryExpression(
        this: ExtractTokensContext,
        node: TSESTree.BinaryExpression,
    ) {
        this.operators.add(node.operator as ESTree.BinaryExpression["operator"])

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    BlockStatement(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    BreakStatement(this: ExtractTokensContext) {
        this.operators.add("break")
    },
    CallExpression(this: ExtractTokensContext, node: TSESTree.CallExpression) {
        if (node.optional) {
            this.operators.add("?.")
        }
        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    },
    CatchClause(this: ExtractTokensContext, node: TSESTree.CatchClause) {
        this.operators.add("catch")
        if (node.param) {
            this.operators.add("()")
        }
    },
    ChainExpression: noop,
    ClassBody(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    ClassDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ClassDeclaration,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    ClassExpression(
        this: ExtractTokensContext,
        node: TSESTree.ClassExpression,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    ConditionalExpression(
        this: ExtractTokensContext,
        node: TSESTree.ConditionalExpression,
    ) {
        if (getPrecedence(node) >= getPrecedence(node.test)) {
            this.operators.add("()")
        }
        this.operators.add("?:")
    },
    ContinueStatement(this: ExtractTokensContext) {
        this.operators.add("continue")
    },
    DebuggerStatement(this: ExtractTokensContext) {
        this.operators.add("debugger")
    },
    Decorator(this: ExtractTokensContext) {
        this.operators.add("@")
    },
    DoWhileStatement(this: ExtractTokensContext) {
        this.operators.add("do")
        this.operators.add("while()")
    },
    EmptyStatement(this: ExtractTokensContext) {
        this.operators.add(";")
    },
    ExportAllDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportAllDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("*")
        if (node.exported) {
            this.operators.add("as")
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ExportDefaultDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportDefaultDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("default")
    },
    ExportNamedDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportNamedDeclaration,
    ) {
        this.operators.add("export")
        if (node.specifiers.length) {
            if (node.exportKind === "type") {
                this.operators.add("type")
            }
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ExportSpecifier(
        this: ExtractTokensContext,
        node: TSESTree.ExportSpecifier,
    ) {
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.exported.name) {
            this.operators.add("as")
        }
    },
    ExpressionStatement: noop,
    ForInStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("in")
    },
    ForOfStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("of")
    },
    ForStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add(";", 2)
    },
    FunctionDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.FunctionDeclaration,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    FunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    Identifier(
        this: ExtractTokensContext,
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
            )
                return
        }
        this.operands.add(node.name)
    },
    IfStatement(this: ExtractTokensContext, node: TSESTree.IfStatement) {
        this.operators.add("if()")
        if (node.alternate) {
            this.operators.add("else")
        }
    },
    ImportAttribute(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    ImportDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ImportDeclaration,
    ) {
        this.operators.add("import")
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (
            node.specifiers.some(
                (spec) => spec.type === AST_NODE_TYPES.ImportSpecifier,
            )
        ) {
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.specifiers.length) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ImportDefaultSpecifier: noop,
    ImportExpression(
        this: ExtractTokensContext,
        node: TSESTree.ImportExpression,
    ) {
        this.operators.add("import")
        if (node.attributes) {
            this.operators.add(",")
        }
    },
    ImportNamespaceSpecifier(this: ExtractTokensContext) {
        this.operators.add("*")
        this.operators.add("as")
    },
    ImportSpecifier(
        this: ExtractTokensContext,
        node: TSESTree.ImportSpecifier,
    ) {
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.imported.name) {
            this.operators.add("as")
        }
    },
    JSXAttribute(this: ExtractTokensContext) {
        this.operators.add("=")
    },
    JSXClosingElement(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    },
    JSXClosingFragment(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    },
    JSXElement: noop,
    JSXEmptyExpression: noop,
    JSXExpressionContainer(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    JSXFragment: noop,
    JSXIdentifier(this: ExtractTokensContext, node: TSESTree.JSXIdentifier) {
        this.operands.add(node.name)
    },
    JSXMemberExpression(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    JSXNamespacedName(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    JSXOpeningElement(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    },
    JSXOpeningFragment(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    },
    JSXSpreadAttribute(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    },
    JSXSpreadChild(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    },
    JSXText(this: ExtractTokensContext, node: TSESTree.JSXText) {
        this.operands.add(JSON.stringify(node.value))
    },
    LabeledStatement(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    Literal(this: ExtractTokensContext, node: TSESTree.Literal) {
        if ("bigint" in node && node.bigint) {
            this.operands.add(\`\${node.bigint}n\`)
        } else if ("regex" in node && node.regex) {
            this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
        } else {
            this.operands.add(JSON.stringify(node.value))
        }
    },
    LogicalExpression(
        this: ExtractTokensContext,
        node: TSESTree.LogicalExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    MemberExpression(
        this: ExtractTokensContext,
        node: TSESTree.MemberExpression,
    ) {
        if (getPrecedence(node) > getPrecedence(node.object)) {
            this.operators.add("()")
        }
        if (node.optional) {
            this.operators.add("?.")
            if (node.computed) {
                this.operators.add("[]")
            }
        } else if (node.computed) {
            this.operators.add("[]")
        } else {
            this.operators.add(".")
        }
    },
    MetaProperty(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    MethodDefinition(
        this: ExtractTokensContext,
        node: TSESTree.MethodDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    },
    NewExpression(this: ExtractTokensContext, node: TSESTree.NewExpression) {
        this.operators.add("new")

        if (getPrecedence(node) >= getPrecedence(node.callee)) {
            this.operators.add("()")
        }

        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    },
    ObjectExpression(
        this: ExtractTokensContext,
        node: TSESTree.ObjectExpression,
    ) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    },
    ObjectPattern(this: ExtractTokensContext, node: TSESTree.ObjectPattern) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    },
    PrivateIdentifier(
        this: ExtractTokensContext,
        node: TSESTree.PrivateIdentifier,
    ) {
        this.operands.add(\`#\${node.name}\`)
    },
    Program: noop,
    Property(this: ExtractTokensContext, node: TSESTree.Property) {
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
        if (!node.shorthand && !node.method) {
            this.operators.add(":")
        }
    },
    PropertyDefinition(
        this: ExtractTokensContext,
        node: TSESTree.PropertyDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.readonly) this.operators.add("readonly")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    },
    RestElement(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    ReturnStatement(this: ExtractTokensContext) {
        this.operators.add("return")
    },
    SequenceExpression(
        this: ExtractTokensContext,
        node: TSESTree.SequenceExpression,
    ) {
        this.operators.add(",", node.expressions.length - 1)
    },
    SpreadElement(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    StaticBlock(this: ExtractTokensContext) {
        this.operators.add("static")
        this.operators.add("{}")
    },
    Super(this: ExtractTokensContext) {
        this.operands.add("super")
    },
    SwitchCase(this: ExtractTokensContext, node: TSESTree.SwitchCase) {
        if (node.test) {
            this.operators.add("case")
        } else {
            this.operators.add("default")
        }
        this.operators.add(":")
    },
    SwitchStatement(this: ExtractTokensContext) {
        this.operators.add("switch()")
        this.operators.add("{}")
    },
    TaggedTemplateExpression: noop,
    TemplateElement(
        this: ExtractTokensContext,
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) {
        let open = "\`"
        let close = "\`"
        if (
            parent &&
            (parent.type === AST_NODE_TYPES.TemplateLiteral ||
                parent.type === AST_NODE_TYPES.TSTemplateLiteralType)
        ) {
            const index = parent.quasis.indexOf(node)
            if (index > 0) {
                open = "}"
            }
            if (index < parent.quasis.length - 1) {
                close = "\${"
            }
        }
        this.operands.add(\`\${open}\${node.value.cooked}\${close}\`)
    },
    TemplateLiteral: noop,
    ThisExpression(this: ExtractTokensContext) {
        this.operands.add("this")
    },
    ThrowStatement(this: ExtractTokensContext) {
        this.operators.add("throw")
    },
    TryStatement(this: ExtractTokensContext, node: TSESTree.TryStatement) {
        this.operators.add("try")
        if (node.finalizer) {
            this.operators.add("finally")
        }
    },
    UnaryExpression(
        this: ExtractTokensContext,
        node: TSESTree.UnaryExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    UpdateExpression(
        this: ExtractTokensContext,
        node: TSESTree.UpdateExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    VariableDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclaration,
    ) {
        this.operators.add(node.kind)
        this.operators.add(",", node.declarations.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    VariableDeclarator(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclarator,
    ) {
        if (node.init) {
            this.operators.add("=")
        }
    },
    WhileStatement(this: ExtractTokensContext) {
        this.operators.add("while()")
    },
    WithStatement(this: ExtractTokensContext) {
        this.operators.add("with()")
    },
    YieldExpression(
        this: ExtractTokensContext,
        node: TSESTree.YieldExpression,
    ) {
        this.operators.add("yield")
        if (node.delegate) {
            this.operators.add("*")
        }
        if (
            node.argument &&
            getPrecedence(node) > getPrecedence(node.argument)
        ) {
            this.operators.add("()")
        }
    },

    // TS
    TSAbstractKeyword(this: ExtractTokensContext) {
        this.operators.add("abstract")
    },
    TSAbstractMethodDefinition(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractMethodDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    },
    TSAbstractPropertyDefinition(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractPropertyDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    },
    TSAnyKeyword(this: ExtractTokensContext) {
        this.operands.add("any")
    },
    TSArrayType(this: ExtractTokensContext) {
        this.operators.add("[]")
    },
    TSAsExpression(this: ExtractTokensContext) {
        this.operators.add("as")
    },
    TSAsyncKeyword(this: ExtractTokensContext) {
        this.operators.add("async")
    },
    TSBigIntKeyword(this: ExtractTokensContext) {
        this.operands.add("bigint")
    },
    TSBooleanKeyword(this: ExtractTokensContext) {
        this.operands.add("boolean")
    },
    TSCallSignatureDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSCallSignatureDeclaration,
    ) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSClassImplements: noop,
    TSConditionalType(this: ExtractTokensContext) {
        this.operators.add("extends")
        this.operators.add("?:")
    },
    TSConstructSignatureDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructSignatureDeclaration,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSConstructorType(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructorType,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSDeclareFunction(
        this: ExtractTokensContext,
        node: TSESTree.TSDeclareFunction,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSDeclareKeyword(this: ExtractTokensContext) {
        this.operators.add("declare")
    },
    TSEmptyBodyFunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    TSEnumDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSEnumDeclaration,
    ) {
        if (node.const) this.operators.add("const")
        this.operators.add("enum")
        this.operators.add("{}")
        this.operators.add(",", node.members.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    TSEnumMember(this: ExtractTokensContext, node: TSESTree.TSEnumMember) {
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.initializer) {
            this.operators.add("=")
        }
    },
    TSExportAssignment(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("=")
    },
    TSExportKeyword(this: ExtractTokensContext) {
        this.operators.add("export")
    },
    TSExternalModuleReference(this: ExtractTokensContext) {
        this.operands.add("require")
        this.operators.add("()")
    },
    TSFunctionType(this: ExtractTokensContext, node: TSESTree.TSFunctionType) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSImportEqualsDeclaration(this: ExtractTokensContext) {
        this.operators.add("import")
        this.operators.add("=")
    },
    TSImportType(this: ExtractTokensContext, node: TSESTree.TSImportType) {
        this.operators.add("import")
        this.operators.add("()")
        if (node.qualifier) {
            this.operators.add(".")
        }
    },
    TSIndexSignature(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    },
    TSIndexedAccessType(this: ExtractTokensContext) {
        this.operators.add("[]")
    },
    TSInferType(this: ExtractTokensContext) {
        this.operators.add("infer")
    },
    TSInterfaceBody(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSInterfaceDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSInterfaceDeclaration,
    ) {
        this.operators.add("interface")
        if (node.extends) {
            this.operators.add("extends")
            this.operators.add(",", node.extends.length - 1)
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    TSInterfaceHeritage: noop,
    TSIntersectionType(
        this: ExtractTokensContext,
        node: TSESTree.TSIntersectionType,
    ) {
        this.operators.add("&", node.types.length - 1)
    },
    TSIntrinsicKeyword(this: ExtractTokensContext) {
        this.operands.add("intrinsic")
    },
    TSLiteralType: noop,
    TSMappedType(this: ExtractTokensContext, node: TSESTree.TSMappedType) {
        this.operators.add("{}")
        if (node.readonly) {
            if (typeof node.readonly === "string") {
                this.operators.add(node.readonly)
            }
            this.operators.add("readonly")
        }

        this.operators.add("[]")
        if (node.optional) {
            if (typeof node.optional === "string") {
                this.operators.add(node.optional)
            }
            this.operators.add("?")
        }
        this.operators.add(":")
    },
    TSMethodSignature(
        this: ExtractTokensContext,
        node: TSESTree.TSMethodSignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")

        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSModuleBlock(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSModuleDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSModuleDeclaration,
    ) {
        if (node.declare) this.operators.add("declare")
        if (!node.global) {
            this.operators.add("module")
        }
    },
    TSNamespaceExportDeclaration(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("as")
        this.operators.add("namespace")
    },
    TSNamedTupleMember(
        this: ExtractTokensContext,
        node: TSESTree.TSNamedTupleMember,
    ) {
        if (node.optional) this.operators.add("?")
        this.operators.add(":")
    },
    TSNeverKeyword(this: ExtractTokensContext) {
        this.operands.add("never")
    },
    TSNonNullExpression(this: ExtractTokensContext) {
        this.operators.add("!")
    },
    TSNullKeyword(this: ExtractTokensContext) {
        this.operands.add("null")
    },
    TSNumberKeyword(this: ExtractTokensContext) {
        this.operands.add("number")
    },
    TSObjectKeyword(this: ExtractTokensContext) {
        this.operands.add("object")
    },
    TSOptionalType(this: ExtractTokensContext) {
        this.operators.add("?")
    },
    TSParameterProperty(
        this: ExtractTokensContext,
        node: TSESTree.TSParameterProperty,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    },
    TSPrivateKeyword(this: ExtractTokensContext) {
        this.operators.add("private")
    },
    TSPropertySignature(
        this: ExtractTokensContext,
        node: TSESTree.TSPropertySignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")
    },
    TSProtectedKeyword(this: ExtractTokensContext) {
        this.operators.add("protected")
    },
    TSPublicKeyword(this: ExtractTokensContext) {
        this.operators.add("public")
    },
    TSQualifiedName(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    TSReadonlyKeyword(this: ExtractTokensContext) {
        this.operators.add("readonly")
    },
    TSRestType(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    TSStaticKeyword(this: ExtractTokensContext) {
        this.operators.add("static")
    },
    TSStringKeyword(this: ExtractTokensContext) {
        this.operands.add("string")
    },
    TSSymbolKeyword(this: ExtractTokensContext) {
        this.operands.add("symbol")
    },
    TSTemplateLiteralType: noop,
    TSThisType(this: ExtractTokensContext) {
        this.operands.add("this")
    },
    TSTupleType(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        this.operators.add(",", node.elementTypes.length - 1)
    },
    TSTypeAliasDeclaration(this: ExtractTokensContext) {
        this.operators.add("type")
        this.operators.add("=")
    },
    TSTypeAnnotation(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
            ) {
                this.operators.add("=>")
                return
            }
            if (parent.type === AST_NODE_TYPES.TSTypePredicate) {
                return
            }
        }
        this.operators.add(":")
    },
    TSTypeAssertion(this: ExtractTokensContext) {
        this.operators.add("<>")
    },
    TSTypeLiteral(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSTypeOperator(this: ExtractTokensContext) {
        this.operators.add("keyof")
    },
    TSTypeParameter(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameter,
        parent,
    ) {
        if (node.constraint) {
            if (
                parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
            ) {
                this.operators.add("in")
            } else {
                this.operators.add("extends")
            }
        }
        if (node.default) {
            this.operators.add("=")
        }
    },
    TSTypeParameterDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterDeclaration,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    },
    TSTypeParameterInstantiation(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterInstantiation,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    },
    TSTypePredicate(this: ExtractTokensContext) {
        this.operators.add("is")
    },
    TSTypeQuery(this: ExtractTokensContext) {
        this.operators.add("typeof")
    },
    TSTypeReference: noop,
    TSUndefinedKeyword(this: ExtractTokensContext) {
        this.operands.add("undefined")
    },
    TSUnionType(this: ExtractTokensContext, node: TSESTree.TSUnionType) {
        this.operators.add("|", node.types.length - 1)
    },
    TSUnknownKeyword(this: ExtractTokensContext) {
        this.operands.add("unknown")
    },
    TSVoidKeyword(this: ExtractTokensContext) {
        this.operands.add("void")
    },
}
\` 1`] = `
Object {
  "deliveredBugs": 14.88266220925185,
  "difficulty": 96.09803921568628,
  "effort": 4290583.969855489,
  "length": 5203,
  "time": 238365.77610308272,
  "vocabulary": 383,
  "volume": 44647.98662775555,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclaration\`
const context = new ExtractTokensContext()
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclaration\`
const extract = EXTRACT_TOKENS[node.type] as any
\` 1`] = `
Object {
  "deliveredBugs": 0.01107309364962454,
  "difficulty": 2.5,
  "effort": 83.04820237218406,
  "length": 10,
  "time": 4.613789020676893,
  "vocabulary": 10,
  "volume": 33.219280948873624,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclaration\`
const index = parent.quasis.indexOf(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.010566416671474375,
  "difficulty": 2,
  "effort": 63.39850002884625,
  "length": 10,
  "time": 3.5221388904914583,
  "vocabulary": 9,
  "volume": 31.699250014423125,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclaration\`
let close = "\`"
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclaration\`
let index = 0
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclaration\`
let open = "\`"
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclarator\`
EXTRACT_TOKENS: AllVisitor = {
    ArrayExpression(
        this: ExtractTokensContext,
        node: TSESTree.ArrayExpression,
    ) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    },
    ArrayPattern(this: ExtractTokensContext, node: TSESTree.ArrayPattern) {
        this.operators.add("[]")
        this.operators.add(",", node.elements.length - 1)
    },
    ArrowFunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.ArrowFunctionExpression,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        if (node.generator) {
            // It cannot actually be used.
            this.operators.add("*")
        }
        if (
            node.params.length !== 1 ||
            node.params[0].type !== AST_NODE_TYPES.Identifier ||
            node.params[0].typeAnnotation
        ) {
            this.operators.add("()")
        }
        this.operators.add(",", node.params.length - 1)

        this.operators.add("=>")

        if (node.body.type === AST_NODE_TYPES.ObjectExpression) {
            this.operators.add("()")
        }
    },
    AssignmentExpression(
        this: ExtractTokensContext,
        node: TSESTree.AssignmentExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    AssignmentPattern(
        this: ExtractTokensContext,
        _node: TSESTree.AssignmentPattern,
    ) {
        this.operators.add("=")
    },
    AwaitExpression(
        this: ExtractTokensContext,
        node: TSESTree.AwaitExpression,
    ) {
        this.operators.add("await")

        if (getPrecedence(node) > getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    BinaryExpression(
        this: ExtractTokensContext,
        node: TSESTree.BinaryExpression,
    ) {
        this.operators.add(node.operator as ESTree.BinaryExpression["operator"])

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    BlockStatement(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    BreakStatement(this: ExtractTokensContext) {
        this.operators.add("break")
    },
    CallExpression(this: ExtractTokensContext, node: TSESTree.CallExpression) {
        if (node.optional) {
            this.operators.add("?.")
        }
        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    },
    CatchClause(this: ExtractTokensContext, node: TSESTree.CatchClause) {
        this.operators.add("catch")
        if (node.param) {
            this.operators.add("()")
        }
    },
    ChainExpression: noop,
    ClassBody(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    ClassDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ClassDeclaration,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    ClassExpression(
        this: ExtractTokensContext,
        node: TSESTree.ClassExpression,
    ) {
        this.operators.add("class")
        if (node.superClass) {
            this.operators.add("extends")
        }
        if (node.implements) {
            this.operators.add("implements")
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    ConditionalExpression(
        this: ExtractTokensContext,
        node: TSESTree.ConditionalExpression,
    ) {
        if (getPrecedence(node) >= getPrecedence(node.test)) {
            this.operators.add("()")
        }
        this.operators.add("?:")
    },
    ContinueStatement(this: ExtractTokensContext) {
        this.operators.add("continue")
    },
    DebuggerStatement(this: ExtractTokensContext) {
        this.operators.add("debugger")
    },
    Decorator(this: ExtractTokensContext) {
        this.operators.add("@")
    },
    DoWhileStatement(this: ExtractTokensContext) {
        this.operators.add("do")
        this.operators.add("while()")
    },
    EmptyStatement(this: ExtractTokensContext) {
        this.operators.add(";")
    },
    ExportAllDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportAllDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("*")
        if (node.exported) {
            this.operators.add("as")
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ExportDefaultDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportDefaultDeclaration,
    ) {
        this.operators.add("export")
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        this.operators.add("default")
    },
    ExportNamedDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ExportNamedDeclaration,
    ) {
        this.operators.add("export")
        if (node.specifiers.length) {
            if (node.exportKind === "type") {
                this.operators.add("type")
            }
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.source) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ExportSpecifier(
        this: ExtractTokensContext,
        node: TSESTree.ExportSpecifier,
    ) {
        if (node.exportKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.exported.name) {
            this.operators.add("as")
        }
    },
    ExpressionStatement: noop,
    ForInStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("in")
    },
    ForOfStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add("of")
    },
    ForStatement(this: ExtractTokensContext) {
        this.operators.add("for()")
        this.operators.add(";", 2)
    },
    FunctionDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.FunctionDeclaration,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    FunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    Identifier(
        this: ExtractTokensContext,
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.Property &&
                parent.shorthand &&
                parent.value === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ImportSpecifier &&
                parent.imported.name === node.name &&
                parent.local === node
            )
                return
            if (
                parent.type === AST_NODE_TYPES.ExportSpecifier &&
                parent.local.name === node.name &&
                parent.exported === node
            )
                return
        }
        this.operands.add(node.name)
    },
    IfStatement(this: ExtractTokensContext, node: TSESTree.IfStatement) {
        this.operators.add("if()")
        if (node.alternate) {
            this.operators.add("else")
        }
    },
    ImportAttribute(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    ImportDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.ImportDeclaration,
    ) {
        this.operators.add("import")
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (
            node.specifiers.some(
                (spec) => spec.type === AST_NODE_TYPES.ImportSpecifier,
            )
        ) {
            this.operators.add("{}")
            this.operators.add(",", node.specifiers.length - 1)
        }
        if (node.specifiers.length) {
            this.operators.add("from")
        }
        if (node.assertions && node.assertions.length) {
            this.operators.add("assert")
            this.operators.add("{}")
        }
    },
    ImportDefaultSpecifier: noop,
    ImportExpression(
        this: ExtractTokensContext,
        node: TSESTree.ImportExpression,
    ) {
        this.operators.add("import")
        if (node.attributes) {
            this.operators.add(",")
        }
    },
    ImportNamespaceSpecifier(this: ExtractTokensContext) {
        this.operators.add("*")
        this.operators.add("as")
    },
    ImportSpecifier(
        this: ExtractTokensContext,
        node: TSESTree.ImportSpecifier,
    ) {
        if (node.importKind === "type") {
            this.operators.add("type")
        }
        if (node.local.name !== node.imported.name) {
            this.operators.add("as")
        }
    },
    JSXAttribute(this: ExtractTokensContext) {
        this.operators.add("=")
    },
    JSXClosingElement(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    },
    JSXClosingFragment(this: ExtractTokensContext) {
        this.operators.add("</")
        this.operators.add(">")
    },
    JSXElement: noop,
    JSXEmptyExpression: noop,
    JSXExpressionContainer(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    JSXFragment: noop,
    JSXIdentifier(this: ExtractTokensContext, node: TSESTree.JSXIdentifier) {
        this.operands.add(node.name)
    },
    JSXMemberExpression(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    JSXNamespacedName(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    JSXOpeningElement(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    },
    JSXOpeningFragment(this: ExtractTokensContext) {
        this.operators.add("<")
        this.operators.add(">")
    },
    JSXSpreadAttribute(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    },
    JSXSpreadChild(this: ExtractTokensContext) {
        this.operators.add("{}")
        this.operators.add("...")
    },
    JSXText(this: ExtractTokensContext, node: TSESTree.JSXText) {
        this.operands.add(JSON.stringify(node.value))
    },
    LabeledStatement(this: ExtractTokensContext) {
        this.operators.add(":")
    },
    Literal(this: ExtractTokensContext, node: TSESTree.Literal) {
        if ("bigint" in node && node.bigint) {
            this.operands.add(\`\${node.bigint}n\`)
        } else if ("regex" in node && node.regex) {
            this.operands.add(\`/\${node.regex.pattern}/\${node.regex.flags}\`)
        } else {
            this.operands.add(JSON.stringify(node.value))
        }
    },
    LogicalExpression(
        this: ExtractTokensContext,
        node: TSESTree.LogicalExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.right)) {
            this.operators.add("()")
        }
    },
    MemberExpression(
        this: ExtractTokensContext,
        node: TSESTree.MemberExpression,
    ) {
        if (getPrecedence(node) > getPrecedence(node.object)) {
            this.operators.add("()")
        }
        if (node.optional) {
            this.operators.add("?.")
            if (node.computed) {
                this.operators.add("[]")
            }
        } else if (node.computed) {
            this.operators.add("[]")
        } else {
            this.operators.add(".")
        }
    },
    MetaProperty(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    MethodDefinition(
        this: ExtractTokensContext,
        node: TSESTree.MethodDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    },
    NewExpression(this: ExtractTokensContext, node: TSESTree.NewExpression) {
        this.operators.add("new")

        if (getPrecedence(node) >= getPrecedence(node.callee)) {
            this.operators.add("()")
        }

        this.operators.add("()")
        this.operators.add(",", node.arguments.length - 1)
    },
    ObjectExpression(
        this: ExtractTokensContext,
        node: TSESTree.ObjectExpression,
    ) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    },
    ObjectPattern(this: ExtractTokensContext, node: TSESTree.ObjectPattern) {
        this.operators.add("{}")
        this.operators.add(",", node.properties.length - 1)
    },
    PrivateIdentifier(
        this: ExtractTokensContext,
        node: TSESTree.PrivateIdentifier,
    ) {
        this.operands.add(\`#\${node.name}\`)
    },
    Program: noop,
    Property(this: ExtractTokensContext, node: TSESTree.Property) {
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
        if (!node.shorthand && !node.method) {
            this.operators.add(":")
        }
    },
    PropertyDefinition(
        this: ExtractTokensContext,
        node: TSESTree.PropertyDefinition,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.readonly) this.operators.add("readonly")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    },
    RestElement(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    ReturnStatement(this: ExtractTokensContext) {
        this.operators.add("return")
    },
    SequenceExpression(
        this: ExtractTokensContext,
        node: TSESTree.SequenceExpression,
    ) {
        this.operators.add(",", node.expressions.length - 1)
    },
    SpreadElement(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    StaticBlock(this: ExtractTokensContext) {
        this.operators.add("static")
        this.operators.add("{}")
    },
    Super(this: ExtractTokensContext) {
        this.operands.add("super")
    },
    SwitchCase(this: ExtractTokensContext, node: TSESTree.SwitchCase) {
        if (node.test) {
            this.operators.add("case")
        } else {
            this.operators.add("default")
        }
        this.operators.add(":")
    },
    SwitchStatement(this: ExtractTokensContext) {
        this.operators.add("switch()")
        this.operators.add("{}")
    },
    TaggedTemplateExpression: noop,
    TemplateElement(
        this: ExtractTokensContext,
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) {
        let open = "\`"
        let close = "\`"
        if (
            parent &&
            (parent.type === AST_NODE_TYPES.TemplateLiteral ||
                parent.type === AST_NODE_TYPES.TSTemplateLiteralType)
        ) {
            const index = parent.quasis.indexOf(node)
            if (index > 0) {
                open = "}"
            }
            if (index < parent.quasis.length - 1) {
                close = "\${"
            }
        }
        this.operands.add(\`\${open}\${node.value.cooked}\${close}\`)
    },
    TemplateLiteral: noop,
    ThisExpression(this: ExtractTokensContext) {
        this.operands.add("this")
    },
    ThrowStatement(this: ExtractTokensContext) {
        this.operators.add("throw")
    },
    TryStatement(this: ExtractTokensContext, node: TSESTree.TryStatement) {
        this.operators.add("try")
        if (node.finalizer) {
            this.operators.add("finally")
        }
    },
    UnaryExpression(
        this: ExtractTokensContext,
        node: TSESTree.UnaryExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    UpdateExpression(
        this: ExtractTokensContext,
        node: TSESTree.UpdateExpression,
    ) {
        this.operators.add(node.operator)

        if (getPrecedence(node) >= getPrecedence(node.argument)) {
            this.operators.add("()")
        }
    },
    VariableDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclaration,
    ) {
        this.operators.add(node.kind)
        this.operators.add(",", node.declarations.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    VariableDeclarator(
        this: ExtractTokensContext,
        node: TSESTree.VariableDeclarator,
    ) {
        if (node.init) {
            this.operators.add("=")
        }
    },
    WhileStatement(this: ExtractTokensContext) {
        this.operators.add("while()")
    },
    WithStatement(this: ExtractTokensContext) {
        this.operators.add("with()")
    },
    YieldExpression(
        this: ExtractTokensContext,
        node: TSESTree.YieldExpression,
    ) {
        this.operators.add("yield")
        if (node.delegate) {
            this.operators.add("*")
        }
        if (
            node.argument &&
            getPrecedence(node) > getPrecedence(node.argument)
        ) {
            this.operators.add("()")
        }
    },

    // TS
    TSAbstractKeyword(this: ExtractTokensContext) {
        this.operators.add("abstract")
    },
    TSAbstractMethodDefinition(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractMethodDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) {
            this.operators.add("[]")
        }
    },
    TSAbstractPropertyDefinition(
        this: ExtractTokensContext,
        node: TSESTree.TSAbstractPropertyDefinition,
    ) {
        this.operators.add("abstract")
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.static) this.operators.add("static")
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.value) {
            this.operators.add("=")
        }
    },
    TSAnyKeyword(this: ExtractTokensContext) {
        this.operands.add("any")
    },
    TSArrayType(this: ExtractTokensContext) {
        this.operators.add("[]")
    },
    TSAsExpression(this: ExtractTokensContext) {
        this.operators.add("as")
    },
    TSAsyncKeyword(this: ExtractTokensContext) {
        this.operators.add("async")
    },
    TSBigIntKeyword(this: ExtractTokensContext) {
        this.operands.add("bigint")
    },
    TSBooleanKeyword(this: ExtractTokensContext) {
        this.operands.add("boolean")
    },
    TSCallSignatureDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSCallSignatureDeclaration,
    ) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSClassImplements: noop,
    TSConditionalType(this: ExtractTokensContext) {
        this.operators.add("extends")
        this.operators.add("?:")
    },
    TSConstructSignatureDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructSignatureDeclaration,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSConstructorType(
        this: ExtractTokensContext,
        node: TSESTree.TSConstructorType,
    ) {
        this.operators.add("new")
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSDeclareFunction(
        this: ExtractTokensContext,
        node: TSESTree.TSDeclareFunction,
    ) {
        if (node.async) {
            this.operators.add("async")
        }
        this.operators.add("function")
        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSDeclareKeyword(this: ExtractTokensContext) {
        this.operators.add("declare")
    },
    TSEmptyBodyFunctionExpression(
        this: ExtractTokensContext,
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) {
        if (node.async) {
            this.operators.add("async")
        }

        if (
            !parent ||
            parent.type !== AST_NODE_TYPES.MethodDefinition &&
                (parent.type !== AST_NODE_TYPES.Property || !parent.method) &&
                parent.type !== AST_NODE_TYPES.TSAbstractMethodDefinition
        ) {
            this.operators.add("function")
        }

        if (node.generator) {
            this.operators.add("*")
        }
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    TSEnumDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSEnumDeclaration,
    ) {
        if (node.const) this.operators.add("const")
        this.operators.add("enum")
        this.operators.add("{}")
        this.operators.add(",", node.members.length - 1)

        if (node.declare) this.operators.add("declare")
    },
    TSEnumMember(this: ExtractTokensContext, node: TSESTree.TSEnumMember) {
        if (node.computed) {
            this.operators.add("[]")
        }
        if (node.initializer) {
            this.operators.add("=")
        }
    },
    TSExportAssignment(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("=")
    },
    TSExportKeyword(this: ExtractTokensContext) {
        this.operators.add("export")
    },
    TSExternalModuleReference(this: ExtractTokensContext) {
        this.operands.add("require")
        this.operators.add("()")
    },
    TSFunctionType(this: ExtractTokensContext, node: TSESTree.TSFunctionType) {
        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSImportEqualsDeclaration(this: ExtractTokensContext) {
        this.operators.add("import")
        this.operators.add("=")
    },
    TSImportType(this: ExtractTokensContext, node: TSESTree.TSImportType) {
        this.operators.add("import")
        this.operators.add("()")
        if (node.qualifier) {
            this.operators.add(".")
        }
    },
    TSIndexSignature(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    },
    TSIndexedAccessType(this: ExtractTokensContext) {
        this.operators.add("[]")
    },
    TSInferType(this: ExtractTokensContext) {
        this.operators.add("infer")
    },
    TSInterfaceBody(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSInterfaceDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSInterfaceDeclaration,
    ) {
        this.operators.add("interface")
        if (node.extends) {
            this.operators.add("extends")
            this.operators.add(",", node.extends.length - 1)
        }
        if (node.implements) {
            this.operators.add("implements")
            this.operators.add(",", node.implements.length - 1)
        }
        if (node.abstract) {
            this.operators.add("abstract")
        }
        if (node.declare) this.operators.add("declare")
    },
    TSInterfaceHeritage: noop,
    TSIntersectionType(
        this: ExtractTokensContext,
        node: TSESTree.TSIntersectionType,
    ) {
        this.operators.add("&", node.types.length - 1)
    },
    TSIntrinsicKeyword(this: ExtractTokensContext) {
        this.operands.add("intrinsic")
    },
    TSLiteralType: noop,
    TSMappedType(this: ExtractTokensContext, node: TSESTree.TSMappedType) {
        this.operators.add("{}")
        if (node.readonly) {
            if (typeof node.readonly === "string") {
                this.operators.add(node.readonly)
            }
            this.operators.add("readonly")
        }

        this.operators.add("[]")
        if (node.optional) {
            if (typeof node.optional === "string") {
                this.operators.add(node.optional)
            }
            this.operators.add("?")
        }
        this.operators.add(":")
    },
    TSMethodSignature(
        this: ExtractTokensContext,
        node: TSESTree.TSMethodSignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.kind === "get" || node.kind === "set")
            this.operators.add(node.kind)
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")

        this.operators.add("()")
        this.operators.add(",", node.params.length - 1)
    },
    TSModuleBlock(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSModuleDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSModuleDeclaration,
    ) {
        if (node.declare) this.operators.add("declare")
        if (!node.global) {
            this.operators.add("module")
        }
    },
    TSNamespaceExportDeclaration(this: ExtractTokensContext) {
        this.operators.add("export")
        this.operators.add("as")
        this.operators.add("namespace")
    },
    TSNamedTupleMember(
        this: ExtractTokensContext,
        node: TSESTree.TSNamedTupleMember,
    ) {
        if (node.optional) this.operators.add("?")
        this.operators.add(":")
    },
    TSNeverKeyword(this: ExtractTokensContext) {
        this.operands.add("never")
    },
    TSNonNullExpression(this: ExtractTokensContext) {
        this.operators.add("!")
    },
    TSNullKeyword(this: ExtractTokensContext) {
        this.operands.add("null")
    },
    TSNumberKeyword(this: ExtractTokensContext) {
        this.operands.add("number")
    },
    TSObjectKeyword(this: ExtractTokensContext) {
        this.operands.add("object")
    },
    TSOptionalType(this: ExtractTokensContext) {
        this.operators.add("?")
    },
    TSParameterProperty(
        this: ExtractTokensContext,
        node: TSESTree.TSParameterProperty,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
    },
    TSPrivateKeyword(this: ExtractTokensContext) {
        this.operators.add("private")
    },
    TSPropertySignature(
        this: ExtractTokensContext,
        node: TSESTree.TSPropertySignature,
    ) {
        if (node.accessibility) this.operators.add(node.accessibility)
        if (node.readonly) this.operators.add("readonly")
        if (node.static) this.operators.add("static")
        if (node.export) this.operators.add("export")
        if (node.computed) this.operators.add("[]")
        if (node.optional) this.operators.add("?")
    },
    TSProtectedKeyword(this: ExtractTokensContext) {
        this.operators.add("protected")
    },
    TSPublicKeyword(this: ExtractTokensContext) {
        this.operators.add("public")
    },
    TSQualifiedName(this: ExtractTokensContext) {
        this.operators.add(".")
    },
    TSReadonlyKeyword(this: ExtractTokensContext) {
        this.operators.add("readonly")
    },
    TSRestType(this: ExtractTokensContext) {
        this.operators.add("...")
    },
    TSStaticKeyword(this: ExtractTokensContext) {
        this.operators.add("static")
    },
    TSStringKeyword(this: ExtractTokensContext) {
        this.operands.add("string")
    },
    TSSymbolKeyword(this: ExtractTokensContext) {
        this.operands.add("symbol")
    },
    TSTemplateLiteralType: noop,
    TSThisType(this: ExtractTokensContext) {
        this.operands.add("this")
    },
    TSTupleType(this: ExtractTokensContext, node) {
        this.operators.add("[]")
        this.operators.add(",", node.elementTypes.length - 1)
    },
    TSTypeAliasDeclaration(this: ExtractTokensContext) {
        this.operators.add("type")
        this.operators.add("=")
    },
    TSTypeAnnotation(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) {
        if (parent) {
            if (
                parent.type === AST_NODE_TYPES.TSFunctionType &&
                    parent.returnType === node ||
                parent.type === AST_NODE_TYPES.TSConstructorType &&
                    parent.returnType === node
            ) {
                this.operators.add("=>")
                return
            }
            if (parent.type === AST_NODE_TYPES.TSTypePredicate) {
                return
            }
        }
        this.operators.add(":")
    },
    TSTypeAssertion(this: ExtractTokensContext) {
        this.operators.add("<>")
    },
    TSTypeLiteral(this: ExtractTokensContext) {
        this.operators.add("{}")
    },
    TSTypeOperator(this: ExtractTokensContext) {
        this.operators.add("keyof")
    },
    TSTypeParameter(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameter,
        parent,
    ) {
        if (node.constraint) {
            if (
                parent &&
                parent.type === AST_NODE_TYPES.TSMappedType &&
                parent.typeParameter === node
            ) {
                this.operators.add("in")
            } else {
                this.operators.add("extends")
            }
        }
        if (node.default) {
            this.operators.add("=")
        }
    },
    TSTypeParameterDeclaration(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterDeclaration,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    },
    TSTypeParameterInstantiation(
        this: ExtractTokensContext,
        node: TSESTree.TSTypeParameterInstantiation,
    ) {
        this.operators.add("<>")
        this.operators.add(",", node.params.length - 1)
    },
    TSTypePredicate(this: ExtractTokensContext) {
        this.operators.add("is")
    },
    TSTypeQuery(this: ExtractTokensContext) {
        this.operators.add("typeof")
    },
    TSTypeReference: noop,
    TSUndefinedKeyword(this: ExtractTokensContext) {
        this.operands.add("undefined")
    },
    TSUnionType(this: ExtractTokensContext, node: TSESTree.TSUnionType) {
        this.operators.add("|", node.types.length - 1)
    },
    TSUnknownKeyword(this: ExtractTokensContext) {
        this.operands.add("unknown")
    },
    TSVoidKeyword(this: ExtractTokensContext) {
        this.operands.add("void")
    },
}
\` 1`] = `
Object {
  "deliveredBugs": 14.879801809057875,
  "difficulty": 96.09803921568628,
  "effort": 4289759.33330545,
  "length": 5202,
  "time": 238319.9629614139,
  "vocabulary": 383,
  "volume": 44639.405427173624,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclarator\`
close = "\`"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclarator\`
context = new ExtractTokensContext()
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclarator\`
extract = EXTRACT_TOKENS[node.type] as any
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2,
  "effort": 57.058650025961626,
  "length": 9,
  "time": 3.1699250014423126,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclarator\`
index = 0
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclarator\`
index = parent.quasis.indexOf(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 1.5,
  "effort": 40.5,
  "length": 9,
  "time": 2.25,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/src/extract-tokens.ts VariableDeclarator\`
open = "\`"
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
Math.log(vocabulary) / Math.log(2)
\` 1`] = `
Object {
  "deliveredBugs": 0.010293634714211216,
  "difficulty": 2.25,
  "effort": 69.4820343209257,
  "length": 11,
  "time": 3.860113017829206,
  "vocabulary": 7,
  "volume": 30.880904142633646,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
context.operands.distinctSize === 0
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
context.operands.totalSize / context.operands.distinctSize
\` 1`] = `
Object {
  "deliveredBugs": 0.009478195835977574,
  "difficulty": 1.5,
  "effort": 42.65188126189908,
  "length": 11,
  "time": 2.369548958994393,
  "vocabulary": 6,
  "volume": 28.43458750793272,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
context.operators.distinctSize + context.operands.distinctSize
\` 1`] = `
Object {
  "deliveredBugs": 0.009478195835977574,
  "difficulty": 1.5,
  "effort": 42.65188126189908,
  "length": 11,
  "time": 2.369548958994393,
  "vocabulary": 6,
  "volume": 28.43458750793272,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
context.operators.distinctSize / 2
\` 1`] = `
Object {
  "deliveredBugs": 0.006031579168349364,
  "difficulty": 1,
  "effort": 18.094737505048094,
  "length": 7,
  "time": 1.0052631947248942,
  "vocabulary": 6,
  "volume": 18.094737505048094,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
context.operators.distinctSize / 2 *
        (context.operands.distinctSize === 0
            ? 1
            : context.operands.totalSize / context.operands.distinctSize)
\` 1`] = `
Object {
  "deliveredBugs": 0.0368044309132235,
  "difficulty": 5.625,
  "effort": 621.0747716606467,
  "length": 29,
  "time": 34.504153981147034,
  "vocabulary": 14,
  "volume": 110.41329273967051,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
context.operators.totalSize + context.operands.totalSize
\` 1`] = `
Object {
  "deliveredBugs": 0.009478195835977574,
  "difficulty": 1.5,
  "effort": 42.65188126189908,
  "length": 11,
  "time": 2.369548958994393,
  "vocabulary": 6,
  "volume": 28.43458750793272,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
difficulty * volume
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
effort / 18
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
length * (Math.log(vocabulary) / Math.log(2))
\` 1`] = `
Object {
  "deliveredBugs": 0.014792983340064125,
  "difficulty": 2.8,
  "effort": 124.26106005653865,
  "length": 14,
  "time": 6.903392225363259,
  "vocabulary": 9,
  "volume": 44.37895002019238,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BinaryExpression\`
volume / 3000
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts BlockStatement\`
{
    const context = extractTokens(node)

    const vocabulary =
        context.operators.distinctSize + context.operands.distinctSize
    const length = context.operators.totalSize + context.operands.totalSize
    const volume = length * (Math.log(vocabulary) / Math.log(2))
    const difficulty =
        context.operators.distinctSize / 2 *
        (context.operands.distinctSize === 0
            ? 1
            : context.operands.totalSize / context.operands.distinctSize)
    const effort = difficulty * volume
    const time = effort / 18
    const deliveredBugs = volume / 3000

    return {
        vocabulary,
        length,
        volume,
        difficulty,
        effort,
        time,
        deliveredBugs,
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.19673137065497967,
  "difficulty": 16.285714285714285,
  "effort": 9611.732680571864,
  "length": 117,
  "time": 533.9851489206591,
  "vocabulary": 33,
  "volume": 590.194111964939,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts CallExpression\`
Math.log(2)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts CallExpression\`
Math.log(vocabulary)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts CallExpression\`
extractTokens(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ConditionalExpression\`
context.operands.distinctSize === 0
            ? 1
            : context.operands.totalSize / context.operands.distinctSize
\` 1`] = `
Object {
  "deliveredBugs": 0.02214618729924908,
  "difficulty": 3.6666666666666665,
  "effort": 243.6080602917399,
  "length": 20,
  "time": 13.533781127318882,
  "vocabulary": 10,
  "volume": 66.43856189774725,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ExportNamedDeclaration\`
export { ExtractTokensResult, TokensCollection } from "./extract-tokens"
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ExportNamedDeclaration\`
export { extractTokens }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ExportNamedDeclaration\`
export function analyze(node: ESTree.Node | TSESTree.Node): Result {
    const context = extractTokens(node)

    const vocabulary =
        context.operators.distinctSize + context.operands.distinctSize
    const length = context.operators.totalSize + context.operands.totalSize
    const volume = length * (Math.log(vocabulary) / Math.log(2))
    const difficulty =
        context.operators.distinctSize / 2 *
        (context.operands.distinctSize === 0
            ? 1
            : context.operands.totalSize / context.operands.distinctSize)
    const effort = difficulty * volume
    const time = effort / 18
    const deliveredBugs = volume / 3000

    return {
        vocabulary,
        length,
        volume,
        difficulty,
        effort,
        time,
        deliveredBugs,
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.23726196660226548,
  "difficulty": 19.692307692307693,
  "effort": 14016.706950041531,
  "length": 132,
  "time": 778.705941668974,
  "vocabulary": 42,
  "volume": 711.7858998067965,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ExportNamedDeclaration\`
export type Result = {
    vocabulary: number
    length: number
    volume: number
    difficulty: number
    effort: number
    time: number
    deliveredBugs: number
}
\` 1`] = `
Object {
  "deliveredBugs": 0.0329970759911659,
  "difficulty": 4.166666666666667,
  "effort": 412.4634498895738,
  "length": 26,
  "time": 22.91463610497632,
  "vocabulary": 14,
  "volume": 98.9912279734977,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ExportSpecifier\`
ExtractTokensResult
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ExportSpecifier\`
TokensCollection
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts FunctionDeclaration\`
function analyze(node: ESTree.Node | TSESTree.Node): Result {
    const context = extractTokens(node)

    const vocabulary =
        context.operators.distinctSize + context.operands.distinctSize
    const length = context.operators.totalSize + context.operands.totalSize
    const volume = length * (Math.log(vocabulary) / Math.log(2))
    const difficulty =
        context.operators.distinctSize / 2 *
        (context.operands.distinctSize === 0
            ? 1
            : context.operands.totalSize / context.operands.distinctSize)
    const effort = difficulty * volume
    const time = effort / 18
    const deliveredBugs = volume / 3000

    return {
        vocabulary,
        length,
        volume,
        difficulty,
        effort,
        time,
        deliveredBugs,
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.23394643753498967,
  "difficulty": 18.461538461538463,
  "effort": 12957.033463476351,
  "length": 131,
  "time": 719.8351924153528,
  "vocabulary": 41,
  "volume": 701.839312604969,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ImportDeclaration\`
import { extractTokens } from "./extract-tokens"
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ImportDeclaration\`
import type * as ESTree from "estree"
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2.5,
  "effort": 49.12871113600807,
  "length": 7,
  "time": 2.7293728408893374,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ImportDeclaration\`
import type { TSESTree } from "@typescript-eslint/types"
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ImportNamespaceSpecifier\`
* as ESTree
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ImportSpecifier\`
TSESTree
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ImportSpecifier\`
extractTokens
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Literal\`
"./extract-tokens"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Literal\`
"@typescript-eslint/types"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Literal\`
"estree"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Literal\`
0
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Literal\`
1
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Literal\`
2
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Literal\`
18
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Literal\`
3000
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts MemberExpression\`
Math.log
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts MemberExpression\`
context.operands
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts MemberExpression\`
context.operands.distinctSize
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts MemberExpression\`
context.operands.totalSize
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts MemberExpression\`
context.operators
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts MemberExpression\`
context.operators.distinctSize
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts MemberExpression\`
context.operators.totalSize
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 0.5,
  "effort": 5,
  "length": 5,
  "time": 0.2777777777777778,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ObjectExpression\`
{
        vocabulary,
        length,
        volume,
        difficulty,
        effort,
        time,
        deliveredBugs,
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014792983340064125,
  "difficulty": 1,
  "effort": 44.37895002019238,
  "length": 14,
  "time": 2.465497223344021,
  "vocabulary": 9,
  "volume": 44.37895002019238,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Program\`
import type * as ESTree from "estree"
import type { TSESTree } from "@typescript-eslint/types"
import { extractTokens } from "./extract-tokens"
export { ExtractTokensResult, TokensCollection } from "./extract-tokens"

export type Result = {
    vocabulary: number
    length: number
    volume: number
    difficulty: number
    effort: number
    time: number
    deliveredBugs: number
}
/**
 * Analyze the AST using Halstead complexity measures.
 */
export function analyze(node: ESTree.Node | TSESTree.Node): Result {
    const context = extractTokens(node)

    const vocabulary =
        context.operators.distinctSize + context.operands.distinctSize
    const length = context.operators.totalSize + context.operands.totalSize
    const volume = length * (Math.log(vocabulary) / Math.log(2))
    const difficulty =
        context.operators.distinctSize / 2 *
        (context.operands.distinctSize === 0
            ? 1
            : context.operands.totalSize / context.operands.distinctSize)
    const effort = difficulty * volume
    const time = effort / 18
    const deliveredBugs = volume / 3000

    return {
        vocabulary,
        length,
        volume,
        difficulty,
        effort,
        time,
        deliveredBugs,
    }
}
export { extractTokens }

\` 1`] = `
Object {
  "deliveredBugs": 0.35342726252474777,
  "difficulty": 27.8125,
  "effort": 29489.08721690864,
  "length": 186,
  "time": 1638.2826231615911,
  "vocabulary": 52,
  "volume": 1060.2817875742433,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Property\`
deliveredBugs
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Property\`
difficulty
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Property\`
effort
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Property\`
length
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Property\`
time
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Property\`
vocabulary
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts Property\`
volume
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts ReturnStatement\`
return {
        vocabulary,
        length,
        volume,
        difficulty,
        effort,
        time,
        deliveredBugs,
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.016609640474436815,
  "difficulty": 1.5,
  "effort": 74.74338213496566,
  "length": 15,
  "time": 4.152410118609203,
  "vocabulary": 10,
  "volume": 49.82892142331044,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSNumberKeyword\`
number
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSPropertySignature\`
deliveredBugs: number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSPropertySignature\`
difficulty: number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSPropertySignature\`
effort: number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSPropertySignature\`
length: number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSPropertySignature\`
time: number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSPropertySignature\`
vocabulary: number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSPropertySignature\`
volume: number
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSTypeAliasDeclaration\`
type Result = {
    vocabulary: number
    length: number
    volume: number
    difficulty: number
    effort: number
    time: number
    deliveredBugs: number
}
\` 1`] = `
Object {
  "deliveredBugs": 0.030836997651175767,
  "difficulty": 3.3333333333333335,
  "effort": 308.3699765117577,
  "length": 25,
  "time": 17.13166536176432,
  "vocabulary": 13,
  "volume": 92.5109929535273,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSTypeAnnotation\`
: ESTree.Node | TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.006893233335256416,
  "difficulty": 2,
  "effort": 41.3594000115385,
  "length": 8,
  "time": 2.2977444450854723,
  "vocabulary": 6,
  "volume": 20.67970000576925,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSTypeAnnotation\`
: Result
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSTypeAnnotation\`
: number
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSTypeLiteral\`
{
    vocabulary: number
    length: number
    volume: number
    difficulty: number
    effort: number
    time: number
    deliveredBugs: number
}
\` 1`] = `
Object {
  "deliveredBugs": 0.024360806029173992,
  "difficulty": 1.75,
  "effort": 127.89423165316344,
  "length": 22,
  "time": 7.105235091842413,
  "vocabulary": 10,
  "volume": 73.08241808752197,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSTypeReference\`
ESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSTypeReference\`
Result
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSTypeReference\`
TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts TSUnionType\`
ESTree.Node | TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.005417832221403845,
  "difficulty": 1.3333333333333333,
  "effort": 21.67132888561538,
  "length": 7,
  "time": 1.2039627158675212,
  "vocabulary": 5,
  "volume": 16.253496664211536,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclaration\`
const context = extractTokens(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclaration\`
const deliveredBugs = volume / 3000
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclaration\`
const difficulty =
        context.operators.distinctSize / 2 *
        (context.operands.distinctSize === 0
            ? 1
            : context.operands.totalSize / context.operands.distinctSize)
\` 1`] = `
Object {
  "deliveredBugs": 0.04359960364000363,
  "difficulty": 7.111111111111111,
  "effort": 930.1248776534106,
  "length": 32,
  "time": 51.67360431407837,
  "vocabulary": 17,
  "volume": 130.79881092001088,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclaration\`
const effort = difficulty * volume
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclaration\`
const length = context.operators.totalSize + context.operands.totalSize
\` 1`] = `
Object {
  "deliveredBugs": 0.014792983340064125,
  "difficulty": 2.8,
  "effort": 124.26106005653865,
  "length": 14,
  "time": 6.903392225363259,
  "vocabulary": 9,
  "volume": 44.37895002019238,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclaration\`
const time = effort / 18
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclaration\`
const vocabulary =
        context.operators.distinctSize + context.operands.distinctSize
\` 1`] = `
Object {
  "deliveredBugs": 0.014792983340064125,
  "difficulty": 2.8,
  "effort": 124.26106005653865,
  "length": 14,
  "time": 6.903392225363259,
  "vocabulary": 9,
  "volume": 44.37895002019238,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclaration\`
const volume = length * (Math.log(vocabulary) / Math.log(2))
\` 1`] = `
Object {
  "deliveredBugs": 0.020314787504086555,
  "difficulty": 4,
  "effort": 243.77745004903863,
  "length": 17,
  "time": 13.543191669391035,
  "vocabulary": 12,
  "volume": 60.94436251225966,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclarator\`
context = extractTokens(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclarator\`
deliveredBugs = volume / 3000
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclarator\`
difficulty =
        context.operators.distinctSize / 2 *
        (context.operands.distinctSize === 0
            ? 1
            : context.operands.totalSize / context.operands.distinctSize)
\` 1`] = `
Object {
  "deliveredBugs": 0.04133333333333333,
  "difficulty": 6.222222222222221,
  "effort": 771.5555555555554,
  "length": 31,
  "time": 42.86419753086419,
  "vocabulary": 16,
  "volume": 124,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclarator\`
effort = difficulty * volume
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclarator\`
length = context.operators.totalSize + context.operands.totalSize
\` 1`] = `
Object {
  "deliveredBugs": 0.013,
  "difficulty": 2.0999999999999996,
  "effort": 81.89999999999999,
  "length": 13,
  "time": 4.55,
  "vocabulary": 8,
  "volume": 39,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclarator\`
time = effort / 18
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclarator\`
vocabulary =
        context.operators.distinctSize + context.operands.distinctSize
\` 1`] = `
Object {
  "deliveredBugs": 0.013,
  "difficulty": 2.0999999999999996,
  "effort": 81.89999999999999,
  "length": 13,
  "time": 4.55,
  "vocabulary": 8,
  "volume": 39,
}
`;

exports[`test for halstead complexity measures /ts/src/index.ts VariableDeclarator\`
volume = length * (Math.log(vocabulary) / Math.log(2))
\` 1`] = `
Object {
  "deliveredBugs": 0.018450301966065587,
  "difficulty": 3.333333333333333,
  "effort": 184.50301966065587,
  "length": 16,
  "time": 10.250167758925326,
  "vocabulary": 11,
  "volume": 55.350905898196764,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts ExportNamedDeclaration\`
export type Visitor = {
    ArrayExpression?: (
        node: TSESTree.ArrayExpression,
        parent: TSESTree.Node | null,
    ) => void
    ArrayPattern?: (
        node: TSESTree.ArrayPattern,
        parent: TSESTree.Node | null,
    ) => void
    ArrowFunctionExpression?: (
        node: TSESTree.ArrowFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    AssignmentExpression?: (
        node: TSESTree.AssignmentExpression,
        parent: TSESTree.Node | null,
    ) => void
    AssignmentPattern?: (
        node: TSESTree.AssignmentPattern,
        parent: TSESTree.Node | null,
    ) => void
    AwaitExpression?: (
        node: TSESTree.AwaitExpression,
        parent: TSESTree.Node | null,
    ) => void
    BinaryExpression?: (
        node: TSESTree.BinaryExpression,
        parent: TSESTree.Node | null,
    ) => void
    BlockStatement?: (
        node: TSESTree.BlockStatement,
        parent: TSESTree.Node | null,
    ) => void
    BreakStatement?: (
        node: TSESTree.BreakStatement,
        parent: TSESTree.Node | null,
    ) => void
    CallExpression?: (
        node: TSESTree.CallExpression,
        parent: TSESTree.Node | null,
    ) => void
    CatchClause?: (
        node: TSESTree.CatchClause,
        parent: TSESTree.Node | null,
    ) => void
    ChainExpression?: (
        node: TSESTree.ChainExpression,
        parent: TSESTree.Node | null,
    ) => void
    ClassBody?: (node: TSESTree.ClassBody, parent: TSESTree.Node | null) => void
    ClassDeclaration?: (
        node: TSESTree.ClassDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ClassExpression?: (
        node: TSESTree.ClassExpression,
        parent: TSESTree.Node | null,
    ) => void
    ConditionalExpression?: (
        node: TSESTree.ConditionalExpression,
        parent: TSESTree.Node | null,
    ) => void
    ContinueStatement?: (
        node: TSESTree.ContinueStatement,
        parent: TSESTree.Node | null,
    ) => void
    DebuggerStatement?: (
        node: TSESTree.DebuggerStatement,
        parent: TSESTree.Node | null,
    ) => void
    Decorator?: (node: TSESTree.Decorator, parent: TSESTree.Node | null) => void
    DoWhileStatement?: (
        node: TSESTree.DoWhileStatement,
        parent: TSESTree.Node | null,
    ) => void
    EmptyStatement?: (
        node: TSESTree.EmptyStatement,
        parent: TSESTree.Node | null,
    ) => void
    ExportAllDeclaration?: (
        node: TSESTree.ExportAllDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportDefaultDeclaration?: (
        node: TSESTree.ExportDefaultDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportNamedDeclaration?: (
        node: TSESTree.ExportNamedDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportSpecifier?: (
        node: TSESTree.ExportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ExpressionStatement?: (
        node: TSESTree.ExpressionStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForInStatement?: (
        node: TSESTree.ForInStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForOfStatement?: (
        node: TSESTree.ForOfStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForStatement?: (
        node: TSESTree.ForStatement,
        parent: TSESTree.Node | null,
    ) => void
    FunctionDeclaration?: (
        node: TSESTree.FunctionDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    FunctionExpression?: (
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    Identifier?: (
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) => void
    IfStatement?: (
        node: TSESTree.IfStatement,
        parent: TSESTree.Node | null,
    ) => void
    ImportAttribute?: (
        node: TSESTree.ImportAttribute,
        parent: TSESTree.Node | null,
    ) => void
    ImportDeclaration?: (
        node: TSESTree.ImportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ImportDefaultSpecifier?: (
        node: TSESTree.ImportDefaultSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ImportExpression?: (
        node: TSESTree.ImportExpression,
        parent: TSESTree.Node | null,
    ) => void
    ImportNamespaceSpecifier?: (
        node: TSESTree.ImportNamespaceSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ImportSpecifier?: (
        node: TSESTree.ImportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    JSXAttribute?: (
        node: TSESTree.JSXAttribute,
        parent: TSESTree.Node | null,
    ) => void
    JSXClosingElement?: (
        node: TSESTree.JSXClosingElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXClosingFragment?: (
        node: TSESTree.JSXClosingFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXElement?: (
        node: TSESTree.JSXElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXEmptyExpression?: (
        node: TSESTree.JSXEmptyExpression,
        parent: TSESTree.Node | null,
    ) => void
    JSXExpressionContainer?: (
        node: TSESTree.JSXExpressionContainer,
        parent: TSESTree.Node | null,
    ) => void
    JSXFragment?: (
        node: TSESTree.JSXFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXIdentifier?: (
        node: TSESTree.JSXIdentifier,
        parent: TSESTree.Node | null,
    ) => void
    JSXMemberExpression?: (
        node: TSESTree.JSXMemberExpression,
        parent: TSESTree.Node | null,
    ) => void
    JSXNamespacedName?: (
        node: TSESTree.JSXNamespacedName,
        parent: TSESTree.Node | null,
    ) => void
    JSXOpeningElement?: (
        node: TSESTree.JSXOpeningElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXOpeningFragment?: (
        node: TSESTree.JSXOpeningFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXSpreadAttribute?: (
        node: TSESTree.JSXSpreadAttribute,
        parent: TSESTree.Node | null,
    ) => void
    JSXSpreadChild?: (
        node: TSESTree.JSXSpreadChild,
        parent: TSESTree.Node | null,
    ) => void
    JSXText?: (node: TSESTree.JSXText, parent: TSESTree.Node | null) => void
    LabeledStatement?: (
        node: TSESTree.LabeledStatement,
        parent: TSESTree.Node | null,
    ) => void
    Literal?: (node: TSESTree.Literal, parent: TSESTree.Node | null) => void
    LogicalExpression?: (
        node: TSESTree.LogicalExpression,
        parent: TSESTree.Node | null,
    ) => void
    MemberExpression?: (
        node: TSESTree.MemberExpression,
        parent: TSESTree.Node | null,
    ) => void
    MetaProperty?: (
        node: TSESTree.MetaProperty,
        parent: TSESTree.Node | null,
    ) => void
    MethodDefinition?: (
        node: TSESTree.MethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
    NewExpression?: (
        node: TSESTree.NewExpression,
        parent: TSESTree.Node | null,
    ) => void
    ObjectExpression?: (
        node: TSESTree.ObjectExpression,
        parent: TSESTree.Node | null,
    ) => void
    ObjectPattern?: (
        node: TSESTree.ObjectPattern,
        parent: TSESTree.Node | null,
    ) => void
    PrivateIdentifier?: (
        node: TSESTree.PrivateIdentifier,
        parent: TSESTree.Node | null,
    ) => void
    Program?: (node: TSESTree.Program, parent: TSESTree.Node | null) => void
    Property?: (node: TSESTree.Property, parent: TSESTree.Node | null) => void
    PropertyDefinition?: (
        node: TSESTree.PropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
    RestElement?: (
        node: TSESTree.RestElement,
        parent: TSESTree.Node | null,
    ) => void
    ReturnStatement?: (
        node: TSESTree.ReturnStatement,
        parent: TSESTree.Node | null,
    ) => void
    SequenceExpression?: (
        node: TSESTree.SequenceExpression,
        parent: TSESTree.Node | null,
    ) => void
    SpreadElement?: (
        node: TSESTree.SpreadElement,
        parent: TSESTree.Node | null,
    ) => void
    StaticBlock?: (
        node: TSESTree.StaticBlock,
        parent: TSESTree.Node | null,
    ) => void
    Super?: (node: TSESTree.Super, parent: TSESTree.Node | null) => void
    SwitchCase?: (
        node: TSESTree.SwitchCase,
        parent: TSESTree.Node | null,
    ) => void
    SwitchStatement?: (
        node: TSESTree.SwitchStatement,
        parent: TSESTree.Node | null,
    ) => void
    TaggedTemplateExpression?: (
        node: TSESTree.TaggedTemplateExpression,
        parent: TSESTree.Node | null,
    ) => void
    TemplateElement?: (
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) => void
    TemplateLiteral?: (
        node: TSESTree.TemplateLiteral,
        parent: TSESTree.Node | null,
    ) => void
    ThisExpression?: (
        node: TSESTree.ThisExpression,
        parent: TSESTree.Node | null,
    ) => void
    ThrowStatement?: (
        node: TSESTree.ThrowStatement,
        parent: TSESTree.Node | null,
    ) => void
    TryStatement?: (
        node: TSESTree.TryStatement,
        parent: TSESTree.Node | null,
    ) => void
    UnaryExpression?: (
        node: TSESTree.UnaryExpression,
        parent: TSESTree.Node | null,
    ) => void
    UpdateExpression?: (
        node: TSESTree.UpdateExpression,
        parent: TSESTree.Node | null,
    ) => void
    VariableDeclaration?: (
        node: TSESTree.VariableDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    VariableDeclarator?: (
        node: TSESTree.VariableDeclarator,
        parent: TSESTree.Node | null,
    ) => void
    WhileStatement?: (
        node: TSESTree.WhileStatement,
        parent: TSESTree.Node | null,
    ) => void
    WithStatement?: (
        node: TSESTree.WithStatement,
        parent: TSESTree.Node | null,
    ) => void
    YieldExpression?: (
        node: TSESTree.YieldExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractKeyword?: (
        node: TSESTree.TSAbstractKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractMethodDefinition?: (
        node: TSESTree.TSAbstractMethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractPropertyDefinition?: (
        node: TSESTree.TSAbstractPropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
    TSAnyKeyword?: (
        node: TSESTree.TSAnyKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSArrayType?: (
        node: TSESTree.TSArrayType,
        parent: TSESTree.Node | null,
    ) => void
    TSAsExpression?: (
        node: TSESTree.TSAsExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSAsyncKeyword?: (
        node: TSESTree.TSAsyncKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSBigIntKeyword?: (
        node: TSESTree.TSBigIntKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSBooleanKeyword?: (
        node: TSESTree.TSBooleanKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSCallSignatureDeclaration?: (
        node: TSESTree.TSCallSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSClassImplements?: (
        node: TSESTree.TSClassImplements,
        parent: TSESTree.Node | null,
    ) => void
    TSConditionalType?: (
        node: TSESTree.TSConditionalType,
        parent: TSESTree.Node | null,
    ) => void
    TSConstructorType?: (
        node: TSESTree.TSConstructorType,
        parent: TSESTree.Node | null,
    ) => void
    TSConstructSignatureDeclaration?: (
        node: TSESTree.TSConstructSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSDeclareFunction?: (
        node: TSESTree.TSDeclareFunction,
        parent: TSESTree.Node | null,
    ) => void
    TSDeclareKeyword?: (
        node: TSESTree.TSDeclareKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSEmptyBodyFunctionExpression?: (
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSEnumDeclaration?: (
        node: TSESTree.TSEnumDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSEnumMember?: (
        node: TSESTree.TSEnumMember,
        parent: TSESTree.Node | null,
    ) => void
    TSExportAssignment?: (
        node: TSESTree.TSExportAssignment,
        parent: TSESTree.Node | null,
    ) => void
    TSExportKeyword?: (
        node: TSESTree.TSExportKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSExternalModuleReference?: (
        node: TSESTree.TSExternalModuleReference,
        parent: TSESTree.Node | null,
    ) => void
    TSFunctionType?: (
        node: TSESTree.TSFunctionType,
        parent: TSESTree.Node | null,
    ) => void
    TSImportEqualsDeclaration?: (
        node: TSESTree.TSImportEqualsDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSImportType?: (
        node: TSESTree.TSImportType,
        parent: TSESTree.Node | null,
    ) => void
    TSIndexedAccessType?: (
        node: TSESTree.TSIndexedAccessType,
        parent: TSESTree.Node | null,
    ) => void
    TSIndexSignature?: (
        node: TSESTree.TSIndexSignature,
        parent: TSESTree.Node | null,
    ) => void
    TSInferType?: (
        node: TSESTree.TSInferType,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceBody?: (
        node: TSESTree.TSInterfaceBody,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceDeclaration?: (
        node: TSESTree.TSInterfaceDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceHeritage?: (
        node: TSESTree.TSInterfaceHeritage,
        parent: TSESTree.Node | null,
    ) => void
    TSIntersectionType?: (
        node: TSESTree.TSIntersectionType,
        parent: TSESTree.Node | null,
    ) => void
    TSIntrinsicKeyword?: (
        node: TSESTree.Node & { type: AST_NODE_TYPES.TSIntrinsicKeyword },
        parent: TSESTree.Node | null,
    ) => void
    TSLiteralType?: (
        node: TSESTree.TSLiteralType,
        parent: TSESTree.Node | null,
    ) => void
    TSMappedType?: (
        node: TSESTree.TSMappedType,
        parent: TSESTree.Node | null,
    ) => void
    TSMethodSignature?: (
        node: TSESTree.TSMethodSignature,
        parent: TSESTree.Node | null,
    ) => void
    TSModuleBlock?: (
        node: TSESTree.TSModuleBlock,
        parent: TSESTree.Node | null,
    ) => void
    TSModuleDeclaration?: (
        node: TSESTree.TSModuleDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSNamedTupleMember?: (
        node: TSESTree.TSNamedTupleMember,
        parent: TSESTree.Node | null,
    ) => void
    TSNamespaceExportDeclaration?: (
        node: TSESTree.TSNamespaceExportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSNeverKeyword?: (
        node: TSESTree.TSNeverKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSNonNullExpression?: (
        node: TSESTree.TSNonNullExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSNullKeyword?: (
        node: TSESTree.TSNullKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSNumberKeyword?: (
        node: TSESTree.TSNumberKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSObjectKeyword?: (
        node: TSESTree.TSObjectKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSOptionalType?: (
        node: TSESTree.TSOptionalType,
        parent: TSESTree.Node | null,
    ) => void
    TSParameterProperty?: (
        node: TSESTree.TSParameterProperty,
        parent: TSESTree.Node | null,
    ) => void
    TSPrivateKeyword?: (
        node: TSESTree.TSPrivateKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSPropertySignature?: (
        node: TSESTree.TSPropertySignature,
        parent: TSESTree.Node | null,
    ) => void
    TSProtectedKeyword?: (
        node: TSESTree.TSProtectedKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSPublicKeyword?: (
        node: TSESTree.TSPublicKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSQualifiedName?: (
        node: TSESTree.TSQualifiedName,
        parent: TSESTree.Node | null,
    ) => void
    TSReadonlyKeyword?: (
        node: TSESTree.TSReadonlyKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSRestType?: (
        node: TSESTree.TSRestType,
        parent: TSESTree.Node | null,
    ) => void
    TSStaticKeyword?: (
        node: TSESTree.TSStaticKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSStringKeyword?: (
        node: TSESTree.TSStringKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSSymbolKeyword?: (
        node: TSESTree.TSSymbolKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSTemplateLiteralType?: (
        node: TSESTree.TSTemplateLiteralType,
        parent: TSESTree.Node | null,
    ) => void
    TSThisType?: (
        node: TSESTree.TSThisType,
        parent: TSESTree.Node | null,
    ) => void
    TSTupleType?: (
        node: TSESTree.TSTupleType,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAliasDeclaration?: (
        node: TSESTree.TSTypeAliasDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAnnotation?: (
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAssertion?: (
        node: TSESTree.TSTypeAssertion,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeLiteral?: (
        node: TSESTree.TSTypeLiteral,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeOperator?: (
        node: TSESTree.TSTypeOperator,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameter?: (
        node: TSESTree.TSTypeParameter,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameterDeclaration?: (
        node: TSESTree.TSTypeParameterDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameterInstantiation?: (
        node: TSESTree.TSTypeParameterInstantiation,
        parent: TSESTree.Node | null,
    ) => void
    TSTypePredicate?: (
        node: TSESTree.TSTypePredicate,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeQuery?: (
        node: TSESTree.TSTypeQuery,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeReference?: (
        node: TSESTree.TSTypeReference,
        parent: TSESTree.Node | null,
    ) => void
    TSUndefinedKeyword?: (
        node: TSESTree.TSUndefinedKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSUnionType?: (
        node: TSESTree.TSUnionType,
        parent: TSESTree.Node | null,
    ) => void
    TSUnknownKeyword?: (
        node: TSESTree.TSUnknownKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSVoidKeyword?: (
        node: TSESTree.TSVoidKeyword,
        parent: TSESTree.Node | null,
    ) => void
}
\` 1`] = `
Object {
  "deliveredBugs": 7.796918040460418,
  "difficulty": 51.31395348837209,
  "effort": 1200272.0690425055,
  "length": 3109,
  "time": 66681.78161347253,
  "vocabulary": 184,
  "volume": 23390.754121381255,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts ImportDeclaration\`
import type { TSESTree, AST_NODE_TYPES } from "@typescript-eslint/types"
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2.5,
  "effort": 60,
  "length": 8,
  "time": 3.3333333333333335,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts ImportSpecifier\`
AST_NODE_TYPES
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts ImportSpecifier\`
TSESTree
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts Literal\`
"@typescript-eslint/types"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts Program\`
import type { TSESTree, AST_NODE_TYPES } from "@typescript-eslint/types"
export type Visitor = {
    ArrayExpression?: (
        node: TSESTree.ArrayExpression,
        parent: TSESTree.Node | null,
    ) => void
    ArrayPattern?: (
        node: TSESTree.ArrayPattern,
        parent: TSESTree.Node | null,
    ) => void
    ArrowFunctionExpression?: (
        node: TSESTree.ArrowFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    AssignmentExpression?: (
        node: TSESTree.AssignmentExpression,
        parent: TSESTree.Node | null,
    ) => void
    AssignmentPattern?: (
        node: TSESTree.AssignmentPattern,
        parent: TSESTree.Node | null,
    ) => void
    AwaitExpression?: (
        node: TSESTree.AwaitExpression,
        parent: TSESTree.Node | null,
    ) => void
    BinaryExpression?: (
        node: TSESTree.BinaryExpression,
        parent: TSESTree.Node | null,
    ) => void
    BlockStatement?: (
        node: TSESTree.BlockStatement,
        parent: TSESTree.Node | null,
    ) => void
    BreakStatement?: (
        node: TSESTree.BreakStatement,
        parent: TSESTree.Node | null,
    ) => void
    CallExpression?: (
        node: TSESTree.CallExpression,
        parent: TSESTree.Node | null,
    ) => void
    CatchClause?: (
        node: TSESTree.CatchClause,
        parent: TSESTree.Node | null,
    ) => void
    ChainExpression?: (
        node: TSESTree.ChainExpression,
        parent: TSESTree.Node | null,
    ) => void
    ClassBody?: (node: TSESTree.ClassBody, parent: TSESTree.Node | null) => void
    ClassDeclaration?: (
        node: TSESTree.ClassDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ClassExpression?: (
        node: TSESTree.ClassExpression,
        parent: TSESTree.Node | null,
    ) => void
    ConditionalExpression?: (
        node: TSESTree.ConditionalExpression,
        parent: TSESTree.Node | null,
    ) => void
    ContinueStatement?: (
        node: TSESTree.ContinueStatement,
        parent: TSESTree.Node | null,
    ) => void
    DebuggerStatement?: (
        node: TSESTree.DebuggerStatement,
        parent: TSESTree.Node | null,
    ) => void
    Decorator?: (node: TSESTree.Decorator, parent: TSESTree.Node | null) => void
    DoWhileStatement?: (
        node: TSESTree.DoWhileStatement,
        parent: TSESTree.Node | null,
    ) => void
    EmptyStatement?: (
        node: TSESTree.EmptyStatement,
        parent: TSESTree.Node | null,
    ) => void
    ExportAllDeclaration?: (
        node: TSESTree.ExportAllDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportDefaultDeclaration?: (
        node: TSESTree.ExportDefaultDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportNamedDeclaration?: (
        node: TSESTree.ExportNamedDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportSpecifier?: (
        node: TSESTree.ExportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ExpressionStatement?: (
        node: TSESTree.ExpressionStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForInStatement?: (
        node: TSESTree.ForInStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForOfStatement?: (
        node: TSESTree.ForOfStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForStatement?: (
        node: TSESTree.ForStatement,
        parent: TSESTree.Node | null,
    ) => void
    FunctionDeclaration?: (
        node: TSESTree.FunctionDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    FunctionExpression?: (
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    Identifier?: (
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) => void
    IfStatement?: (
        node: TSESTree.IfStatement,
        parent: TSESTree.Node | null,
    ) => void
    ImportAttribute?: (
        node: TSESTree.ImportAttribute,
        parent: TSESTree.Node | null,
    ) => void
    ImportDeclaration?: (
        node: TSESTree.ImportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ImportDefaultSpecifier?: (
        node: TSESTree.ImportDefaultSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ImportExpression?: (
        node: TSESTree.ImportExpression,
        parent: TSESTree.Node | null,
    ) => void
    ImportNamespaceSpecifier?: (
        node: TSESTree.ImportNamespaceSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ImportSpecifier?: (
        node: TSESTree.ImportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    JSXAttribute?: (
        node: TSESTree.JSXAttribute,
        parent: TSESTree.Node | null,
    ) => void
    JSXClosingElement?: (
        node: TSESTree.JSXClosingElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXClosingFragment?: (
        node: TSESTree.JSXClosingFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXElement?: (
        node: TSESTree.JSXElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXEmptyExpression?: (
        node: TSESTree.JSXEmptyExpression,
        parent: TSESTree.Node | null,
    ) => void
    JSXExpressionContainer?: (
        node: TSESTree.JSXExpressionContainer,
        parent: TSESTree.Node | null,
    ) => void
    JSXFragment?: (
        node: TSESTree.JSXFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXIdentifier?: (
        node: TSESTree.JSXIdentifier,
        parent: TSESTree.Node | null,
    ) => void
    JSXMemberExpression?: (
        node: TSESTree.JSXMemberExpression,
        parent: TSESTree.Node | null,
    ) => void
    JSXNamespacedName?: (
        node: TSESTree.JSXNamespacedName,
        parent: TSESTree.Node | null,
    ) => void
    JSXOpeningElement?: (
        node: TSESTree.JSXOpeningElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXOpeningFragment?: (
        node: TSESTree.JSXOpeningFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXSpreadAttribute?: (
        node: TSESTree.JSXSpreadAttribute,
        parent: TSESTree.Node | null,
    ) => void
    JSXSpreadChild?: (
        node: TSESTree.JSXSpreadChild,
        parent: TSESTree.Node | null,
    ) => void
    JSXText?: (node: TSESTree.JSXText, parent: TSESTree.Node | null) => void
    LabeledStatement?: (
        node: TSESTree.LabeledStatement,
        parent: TSESTree.Node | null,
    ) => void
    Literal?: (node: TSESTree.Literal, parent: TSESTree.Node | null) => void
    LogicalExpression?: (
        node: TSESTree.LogicalExpression,
        parent: TSESTree.Node | null,
    ) => void
    MemberExpression?: (
        node: TSESTree.MemberExpression,
        parent: TSESTree.Node | null,
    ) => void
    MetaProperty?: (
        node: TSESTree.MetaProperty,
        parent: TSESTree.Node | null,
    ) => void
    MethodDefinition?: (
        node: TSESTree.MethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
    NewExpression?: (
        node: TSESTree.NewExpression,
        parent: TSESTree.Node | null,
    ) => void
    ObjectExpression?: (
        node: TSESTree.ObjectExpression,
        parent: TSESTree.Node | null,
    ) => void
    ObjectPattern?: (
        node: TSESTree.ObjectPattern,
        parent: TSESTree.Node | null,
    ) => void
    PrivateIdentifier?: (
        node: TSESTree.PrivateIdentifier,
        parent: TSESTree.Node | null,
    ) => void
    Program?: (node: TSESTree.Program, parent: TSESTree.Node | null) => void
    Property?: (node: TSESTree.Property, parent: TSESTree.Node | null) => void
    PropertyDefinition?: (
        node: TSESTree.PropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
    RestElement?: (
        node: TSESTree.RestElement,
        parent: TSESTree.Node | null,
    ) => void
    ReturnStatement?: (
        node: TSESTree.ReturnStatement,
        parent: TSESTree.Node | null,
    ) => void
    SequenceExpression?: (
        node: TSESTree.SequenceExpression,
        parent: TSESTree.Node | null,
    ) => void
    SpreadElement?: (
        node: TSESTree.SpreadElement,
        parent: TSESTree.Node | null,
    ) => void
    StaticBlock?: (
        node: TSESTree.StaticBlock,
        parent: TSESTree.Node | null,
    ) => void
    Super?: (node: TSESTree.Super, parent: TSESTree.Node | null) => void
    SwitchCase?: (
        node: TSESTree.SwitchCase,
        parent: TSESTree.Node | null,
    ) => void
    SwitchStatement?: (
        node: TSESTree.SwitchStatement,
        parent: TSESTree.Node | null,
    ) => void
    TaggedTemplateExpression?: (
        node: TSESTree.TaggedTemplateExpression,
        parent: TSESTree.Node | null,
    ) => void
    TemplateElement?: (
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) => void
    TemplateLiteral?: (
        node: TSESTree.TemplateLiteral,
        parent: TSESTree.Node | null,
    ) => void
    ThisExpression?: (
        node: TSESTree.ThisExpression,
        parent: TSESTree.Node | null,
    ) => void
    ThrowStatement?: (
        node: TSESTree.ThrowStatement,
        parent: TSESTree.Node | null,
    ) => void
    TryStatement?: (
        node: TSESTree.TryStatement,
        parent: TSESTree.Node | null,
    ) => void
    UnaryExpression?: (
        node: TSESTree.UnaryExpression,
        parent: TSESTree.Node | null,
    ) => void
    UpdateExpression?: (
        node: TSESTree.UpdateExpression,
        parent: TSESTree.Node | null,
    ) => void
    VariableDeclaration?: (
        node: TSESTree.VariableDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    VariableDeclarator?: (
        node: TSESTree.VariableDeclarator,
        parent: TSESTree.Node | null,
    ) => void
    WhileStatement?: (
        node: TSESTree.WhileStatement,
        parent: TSESTree.Node | null,
    ) => void
    WithStatement?: (
        node: TSESTree.WithStatement,
        parent: TSESTree.Node | null,
    ) => void
    YieldExpression?: (
        node: TSESTree.YieldExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractKeyword?: (
        node: TSESTree.TSAbstractKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractMethodDefinition?: (
        node: TSESTree.TSAbstractMethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractPropertyDefinition?: (
        node: TSESTree.TSAbstractPropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
    TSAnyKeyword?: (
        node: TSESTree.TSAnyKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSArrayType?: (
        node: TSESTree.TSArrayType,
        parent: TSESTree.Node | null,
    ) => void
    TSAsExpression?: (
        node: TSESTree.TSAsExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSAsyncKeyword?: (
        node: TSESTree.TSAsyncKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSBigIntKeyword?: (
        node: TSESTree.TSBigIntKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSBooleanKeyword?: (
        node: TSESTree.TSBooleanKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSCallSignatureDeclaration?: (
        node: TSESTree.TSCallSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSClassImplements?: (
        node: TSESTree.TSClassImplements,
        parent: TSESTree.Node | null,
    ) => void
    TSConditionalType?: (
        node: TSESTree.TSConditionalType,
        parent: TSESTree.Node | null,
    ) => void
    TSConstructorType?: (
        node: TSESTree.TSConstructorType,
        parent: TSESTree.Node | null,
    ) => void
    TSConstructSignatureDeclaration?: (
        node: TSESTree.TSConstructSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSDeclareFunction?: (
        node: TSESTree.TSDeclareFunction,
        parent: TSESTree.Node | null,
    ) => void
    TSDeclareKeyword?: (
        node: TSESTree.TSDeclareKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSEmptyBodyFunctionExpression?: (
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSEnumDeclaration?: (
        node: TSESTree.TSEnumDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSEnumMember?: (
        node: TSESTree.TSEnumMember,
        parent: TSESTree.Node | null,
    ) => void
    TSExportAssignment?: (
        node: TSESTree.TSExportAssignment,
        parent: TSESTree.Node | null,
    ) => void
    TSExportKeyword?: (
        node: TSESTree.TSExportKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSExternalModuleReference?: (
        node: TSESTree.TSExternalModuleReference,
        parent: TSESTree.Node | null,
    ) => void
    TSFunctionType?: (
        node: TSESTree.TSFunctionType,
        parent: TSESTree.Node | null,
    ) => void
    TSImportEqualsDeclaration?: (
        node: TSESTree.TSImportEqualsDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSImportType?: (
        node: TSESTree.TSImportType,
        parent: TSESTree.Node | null,
    ) => void
    TSIndexedAccessType?: (
        node: TSESTree.TSIndexedAccessType,
        parent: TSESTree.Node | null,
    ) => void
    TSIndexSignature?: (
        node: TSESTree.TSIndexSignature,
        parent: TSESTree.Node | null,
    ) => void
    TSInferType?: (
        node: TSESTree.TSInferType,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceBody?: (
        node: TSESTree.TSInterfaceBody,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceDeclaration?: (
        node: TSESTree.TSInterfaceDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceHeritage?: (
        node: TSESTree.TSInterfaceHeritage,
        parent: TSESTree.Node | null,
    ) => void
    TSIntersectionType?: (
        node: TSESTree.TSIntersectionType,
        parent: TSESTree.Node | null,
    ) => void
    TSIntrinsicKeyword?: (
        node: TSESTree.Node & { type: AST_NODE_TYPES.TSIntrinsicKeyword },
        parent: TSESTree.Node | null,
    ) => void
    TSLiteralType?: (
        node: TSESTree.TSLiteralType,
        parent: TSESTree.Node | null,
    ) => void
    TSMappedType?: (
        node: TSESTree.TSMappedType,
        parent: TSESTree.Node | null,
    ) => void
    TSMethodSignature?: (
        node: TSESTree.TSMethodSignature,
        parent: TSESTree.Node | null,
    ) => void
    TSModuleBlock?: (
        node: TSESTree.TSModuleBlock,
        parent: TSESTree.Node | null,
    ) => void
    TSModuleDeclaration?: (
        node: TSESTree.TSModuleDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSNamedTupleMember?: (
        node: TSESTree.TSNamedTupleMember,
        parent: TSESTree.Node | null,
    ) => void
    TSNamespaceExportDeclaration?: (
        node: TSESTree.TSNamespaceExportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSNeverKeyword?: (
        node: TSESTree.TSNeverKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSNonNullExpression?: (
        node: TSESTree.TSNonNullExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSNullKeyword?: (
        node: TSESTree.TSNullKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSNumberKeyword?: (
        node: TSESTree.TSNumberKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSObjectKeyword?: (
        node: TSESTree.TSObjectKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSOptionalType?: (
        node: TSESTree.TSOptionalType,
        parent: TSESTree.Node | null,
    ) => void
    TSParameterProperty?: (
        node: TSESTree.TSParameterProperty,
        parent: TSESTree.Node | null,
    ) => void
    TSPrivateKeyword?: (
        node: TSESTree.TSPrivateKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSPropertySignature?: (
        node: TSESTree.TSPropertySignature,
        parent: TSESTree.Node | null,
    ) => void
    TSProtectedKeyword?: (
        node: TSESTree.TSProtectedKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSPublicKeyword?: (
        node: TSESTree.TSPublicKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSQualifiedName?: (
        node: TSESTree.TSQualifiedName,
        parent: TSESTree.Node | null,
    ) => void
    TSReadonlyKeyword?: (
        node: TSESTree.TSReadonlyKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSRestType?: (
        node: TSESTree.TSRestType,
        parent: TSESTree.Node | null,
    ) => void
    TSStaticKeyword?: (
        node: TSESTree.TSStaticKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSStringKeyword?: (
        node: TSESTree.TSStringKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSSymbolKeyword?: (
        node: TSESTree.TSSymbolKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSTemplateLiteralType?: (
        node: TSESTree.TSTemplateLiteralType,
        parent: TSESTree.Node | null,
    ) => void
    TSThisType?: (
        node: TSESTree.TSThisType,
        parent: TSESTree.Node | null,
    ) => void
    TSTupleType?: (
        node: TSESTree.TSTupleType,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAliasDeclaration?: (
        node: TSESTree.TSTypeAliasDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAnnotation?: (
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAssertion?: (
        node: TSESTree.TSTypeAssertion,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeLiteral?: (
        node: TSESTree.TSTypeLiteral,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeOperator?: (
        node: TSESTree.TSTypeOperator,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameter?: (
        node: TSESTree.TSTypeParameter,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameterDeclaration?: (
        node: TSESTree.TSTypeParameterDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameterInstantiation?: (
        node: TSESTree.TSTypeParameterInstantiation,
        parent: TSESTree.Node | null,
    ) => void
    TSTypePredicate?: (
        node: TSESTree.TSTypePredicate,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeQuery?: (
        node: TSESTree.TSTypeQuery,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeReference?: (
        node: TSESTree.TSTypeReference,
        parent: TSESTree.Node | null,
    ) => void
    TSUndefinedKeyword?: (
        node: TSESTree.TSUndefinedKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSUnionType?: (
        node: TSESTree.TSUnionType,
        parent: TSESTree.Node | null,
    ) => void
    TSUnknownKeyword?: (
        node: TSESTree.TSUnknownKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSVoidKeyword?: (
        node: TSESTree.TSVoidKeyword,
        parent: TSESTree.Node | null,
    ) => void
}

\` 1`] = `
Object {
  "deliveredBugs": 7.8412233438232555,
  "difficulty": 59.64161849710983,
  "effort": 1402989.7536688154,
  "length": 3117,
  "time": 77943.87520382307,
  "vocabulary": 187,
  "volume": 23523.670031469766,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ArrayExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ArrayPattern,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ArrowFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.AssignmentExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.AssignmentPattern,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.AwaitExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.BinaryExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.BlockStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.BreakStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.CallExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.CatchClause,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ChainExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ClassDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ClassExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ConditionalExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ContinueStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.DebuggerStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.DoWhileStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.EmptyStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ExportAllDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ExportDefaultDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ExportNamedDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ExportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ExpressionStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ForInStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ForOfStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ForStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.FunctionDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.IfStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ImportAttribute,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ImportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ImportDefaultSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ImportExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ImportNamespaceSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ImportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXAttribute,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXClosingElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXClosingFragment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXEmptyExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXExpressionContainer,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXFragment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXIdentifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXMemberExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXNamespacedName,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXOpeningElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXOpeningFragment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXSpreadAttribute,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.JSXSpreadChild,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.LabeledStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.LogicalExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.MemberExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.MetaProperty,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.MethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.NewExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.Node & { type: AST_NODE_TYPES.TSIntrinsicKeyword },
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.031337215116252606,
  "difficulty": 4.888888888888889,
  "effort": 459.61248837170496,
  "length": 23,
  "time": 25.534027131761388,
  "vocabulary": 17,
  "volume": 94.01164534875782,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ObjectExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ObjectPattern,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.PrivateIdentifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.PropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.RestElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ReturnStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.SequenceExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.SpreadElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.StaticBlock,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.SwitchCase,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.SwitchStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSAbstractKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSAbstractMethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSAbstractPropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSAnyKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSArrayType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSAsExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSAsyncKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSBigIntKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSBooleanKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSCallSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSClassImplements,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSConditionalType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSConstructSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSConstructorType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSDeclareFunction,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSDeclareKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSEnumDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSEnumMember,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSExportAssignment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSExportKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSExternalModuleReference,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSFunctionType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSImportEqualsDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSImportType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSIndexSignature,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSIndexedAccessType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSInferType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSInterfaceBody,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSInterfaceDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSInterfaceHeritage,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSIntersectionType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSLiteralType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSMappedType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSMethodSignature,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSModuleBlock,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSModuleDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSNamedTupleMember,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSNamespaceExportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSNeverKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSNonNullExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSNullKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSNumberKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSObjectKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSOptionalType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSParameterProperty,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSPrivateKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSPropertySignature,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSProtectedKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSPublicKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSQualifiedName,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSReadonlyKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSRestType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSStaticKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSStringKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSSymbolKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTemplateLiteralType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSThisType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTupleType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypeAliasDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypeAssertion,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypeLiteral,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypeOperator,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypeParameter,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypeParameterDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypeParameterInstantiation,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypePredicate,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypeQuery,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSTypeReference,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSUndefinedKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSUnionType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSUnknownKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TSVoidKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TaggedTemplateExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TemplateLiteral,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ThisExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.ThrowStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.TryStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.UnaryExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.UpdateExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.VariableDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.VariableDeclarator,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.WhileStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.WithStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(
        node: TSESTree.YieldExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(node: TSESTree.ClassBody, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(node: TSESTree.Decorator, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(node: TSESTree.JSXText, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(node: TSESTree.Literal, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(node: TSESTree.Program, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(node: TSESTree.Property, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSFunctionType\`
(node: TSESTree.Super, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.019735678496752493,
  "difficulty": 3.4285714285714284,
  "effort": 202.99555025231132,
  "length": 16,
  "time": 11.277530569572852,
  "vocabulary": 13,
  "volume": 59.207035490257475,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSIntersectionType\`
TSESTree.Node & { type: AST_NODE_TYPES.TSIntrinsicKeyword }
\` 1`] = `
Object {
  "deliveredBugs": 0.010566416671474375,
  "difficulty": 2,
  "effort": 63.39850002884625,
  "length": 10,
  "time": 3.5221388904914583,
  "vocabulary": 9,
  "volume": 31.699250014423125,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSNullKeyword\`
null
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ArrayExpression?: (
        node: TSESTree.ArrayExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ArrayPattern?: (
        node: TSESTree.ArrayPattern,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ArrowFunctionExpression?: (
        node: TSESTree.ArrowFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
AssignmentExpression?: (
        node: TSESTree.AssignmentExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
AssignmentPattern?: (
        node: TSESTree.AssignmentPattern,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
AwaitExpression?: (
        node: TSESTree.AwaitExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
BinaryExpression?: (
        node: TSESTree.BinaryExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
BlockStatement?: (
        node: TSESTree.BlockStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
BreakStatement?: (
        node: TSESTree.BreakStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
CallExpression?: (
        node: TSESTree.CallExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
CatchClause?: (
        node: TSESTree.CatchClause,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ChainExpression?: (
        node: TSESTree.ChainExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ClassBody?: (node: TSESTree.ClassBody, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ClassDeclaration?: (
        node: TSESTree.ClassDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ClassExpression?: (
        node: TSESTree.ClassExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ConditionalExpression?: (
        node: TSESTree.ConditionalExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ContinueStatement?: (
        node: TSESTree.ContinueStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
DebuggerStatement?: (
        node: TSESTree.DebuggerStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
Decorator?: (node: TSESTree.Decorator, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
DoWhileStatement?: (
        node: TSESTree.DoWhileStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
EmptyStatement?: (
        node: TSESTree.EmptyStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ExportAllDeclaration?: (
        node: TSESTree.ExportAllDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ExportDefaultDeclaration?: (
        node: TSESTree.ExportDefaultDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ExportNamedDeclaration?: (
        node: TSESTree.ExportNamedDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ExportSpecifier?: (
        node: TSESTree.ExportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ExpressionStatement?: (
        node: TSESTree.ExpressionStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ForInStatement?: (
        node: TSESTree.ForInStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ForOfStatement?: (
        node: TSESTree.ForOfStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ForStatement?: (
        node: TSESTree.ForStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
FunctionDeclaration?: (
        node: TSESTree.FunctionDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
FunctionExpression?: (
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
Identifier?: (
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
IfStatement?: (
        node: TSESTree.IfStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ImportAttribute?: (
        node: TSESTree.ImportAttribute,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ImportDeclaration?: (
        node: TSESTree.ImportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ImportDefaultSpecifier?: (
        node: TSESTree.ImportDefaultSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ImportExpression?: (
        node: TSESTree.ImportExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ImportNamespaceSpecifier?: (
        node: TSESTree.ImportNamespaceSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ImportSpecifier?: (
        node: TSESTree.ImportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXAttribute?: (
        node: TSESTree.JSXAttribute,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXClosingElement?: (
        node: TSESTree.JSXClosingElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXClosingFragment?: (
        node: TSESTree.JSXClosingFragment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXElement?: (
        node: TSESTree.JSXElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXEmptyExpression?: (
        node: TSESTree.JSXEmptyExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXExpressionContainer?: (
        node: TSESTree.JSXExpressionContainer,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXFragment?: (
        node: TSESTree.JSXFragment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXIdentifier?: (
        node: TSESTree.JSXIdentifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXMemberExpression?: (
        node: TSESTree.JSXMemberExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXNamespacedName?: (
        node: TSESTree.JSXNamespacedName,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXOpeningElement?: (
        node: TSESTree.JSXOpeningElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXOpeningFragment?: (
        node: TSESTree.JSXOpeningFragment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXSpreadAttribute?: (
        node: TSESTree.JSXSpreadAttribute,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXSpreadChild?: (
        node: TSESTree.JSXSpreadChild,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
JSXText?: (node: TSESTree.JSXText, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
LabeledStatement?: (
        node: TSESTree.LabeledStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
Literal?: (node: TSESTree.Literal, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
LogicalExpression?: (
        node: TSESTree.LogicalExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
MemberExpression?: (
        node: TSESTree.MemberExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
MetaProperty?: (
        node: TSESTree.MetaProperty,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
MethodDefinition?: (
        node: TSESTree.MethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
NewExpression?: (
        node: TSESTree.NewExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ObjectExpression?: (
        node: TSESTree.ObjectExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ObjectPattern?: (
        node: TSESTree.ObjectPattern,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
PrivateIdentifier?: (
        node: TSESTree.PrivateIdentifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
Program?: (node: TSESTree.Program, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
Property?: (node: TSESTree.Property, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
PropertyDefinition?: (
        node: TSESTree.PropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
RestElement?: (
        node: TSESTree.RestElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ReturnStatement?: (
        node: TSESTree.ReturnStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
SequenceExpression?: (
        node: TSESTree.SequenceExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
SpreadElement?: (
        node: TSESTree.SpreadElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
StaticBlock?: (
        node: TSESTree.StaticBlock,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
Super?: (node: TSESTree.Super, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
SwitchCase?: (
        node: TSESTree.SwitchCase,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
SwitchStatement?: (
        node: TSESTree.SwitchStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSAbstractKeyword?: (
        node: TSESTree.TSAbstractKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSAbstractMethodDefinition?: (
        node: TSESTree.TSAbstractMethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSAbstractPropertyDefinition?: (
        node: TSESTree.TSAbstractPropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSAnyKeyword?: (
        node: TSESTree.TSAnyKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSArrayType?: (
        node: TSESTree.TSArrayType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSAsExpression?: (
        node: TSESTree.TSAsExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSAsyncKeyword?: (
        node: TSESTree.TSAsyncKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSBigIntKeyword?: (
        node: TSESTree.TSBigIntKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSBooleanKeyword?: (
        node: TSESTree.TSBooleanKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSCallSignatureDeclaration?: (
        node: TSESTree.TSCallSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSClassImplements?: (
        node: TSESTree.TSClassImplements,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSConditionalType?: (
        node: TSESTree.TSConditionalType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSConstructSignatureDeclaration?: (
        node: TSESTree.TSConstructSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSConstructorType?: (
        node: TSESTree.TSConstructorType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSDeclareFunction?: (
        node: TSESTree.TSDeclareFunction,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSDeclareKeyword?: (
        node: TSESTree.TSDeclareKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSEmptyBodyFunctionExpression?: (
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSEnumDeclaration?: (
        node: TSESTree.TSEnumDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSEnumMember?: (
        node: TSESTree.TSEnumMember,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSExportAssignment?: (
        node: TSESTree.TSExportAssignment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSExportKeyword?: (
        node: TSESTree.TSExportKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSExternalModuleReference?: (
        node: TSESTree.TSExternalModuleReference,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSFunctionType?: (
        node: TSESTree.TSFunctionType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSImportEqualsDeclaration?: (
        node: TSESTree.TSImportEqualsDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSImportType?: (
        node: TSESTree.TSImportType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSIndexSignature?: (
        node: TSESTree.TSIndexSignature,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSIndexedAccessType?: (
        node: TSESTree.TSIndexedAccessType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSInferType?: (
        node: TSESTree.TSInferType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSInterfaceBody?: (
        node: TSESTree.TSInterfaceBody,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSInterfaceDeclaration?: (
        node: TSESTree.TSInterfaceDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSInterfaceHeritage?: (
        node: TSESTree.TSInterfaceHeritage,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSIntersectionType?: (
        node: TSESTree.TSIntersectionType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSIntrinsicKeyword?: (
        node: TSESTree.Node & { type: AST_NODE_TYPES.TSIntrinsicKeyword },
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.036139350012500036,
  "difficulty": 6,
  "effort": 650.5083002250007,
  "length": 26,
  "time": 36.13935001250004,
  "vocabulary": 18,
  "volume": 108.41805003750011,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSLiteralType?: (
        node: TSESTree.TSLiteralType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSMappedType?: (
        node: TSESTree.TSMappedType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSMethodSignature?: (
        node: TSESTree.TSMethodSignature,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSModuleBlock?: (
        node: TSESTree.TSModuleBlock,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSModuleDeclaration?: (
        node: TSESTree.TSModuleDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSNamedTupleMember?: (
        node: TSESTree.TSNamedTupleMember,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSNamespaceExportDeclaration?: (
        node: TSESTree.TSNamespaceExportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSNeverKeyword?: (
        node: TSESTree.TSNeverKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSNonNullExpression?: (
        node: TSESTree.TSNonNullExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSNullKeyword?: (
        node: TSESTree.TSNullKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSNumberKeyword?: (
        node: TSESTree.TSNumberKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSObjectKeyword?: (
        node: TSESTree.TSObjectKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSOptionalType?: (
        node: TSESTree.TSOptionalType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSParameterProperty?: (
        node: TSESTree.TSParameterProperty,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSPrivateKeyword?: (
        node: TSESTree.TSPrivateKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSPropertySignature?: (
        node: TSESTree.TSPropertySignature,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSProtectedKeyword?: (
        node: TSESTree.TSProtectedKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSPublicKeyword?: (
        node: TSESTree.TSPublicKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSQualifiedName?: (
        node: TSESTree.TSQualifiedName,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSReadonlyKeyword?: (
        node: TSESTree.TSReadonlyKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSRestType?: (
        node: TSESTree.TSRestType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSStaticKeyword?: (
        node: TSESTree.TSStaticKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSStringKeyword?: (
        node: TSESTree.TSStringKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSSymbolKeyword?: (
        node: TSESTree.TSSymbolKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTemplateLiteralType?: (
        node: TSESTree.TSTemplateLiteralType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSThisType?: (
        node: TSESTree.TSThisType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTupleType?: (
        node: TSESTree.TSTupleType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypeAliasDeclaration?: (
        node: TSESTree.TSTypeAliasDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypeAnnotation?: (
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypeAssertion?: (
        node: TSESTree.TSTypeAssertion,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypeLiteral?: (
        node: TSESTree.TSTypeLiteral,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypeOperator?: (
        node: TSESTree.TSTypeOperator,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypeParameter?: (
        node: TSESTree.TSTypeParameter,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypeParameterDeclaration?: (
        node: TSESTree.TSTypeParameterDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypeParameterInstantiation?: (
        node: TSESTree.TSTypeParameterInstantiation,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypePredicate?: (
        node: TSESTree.TSTypePredicate,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypeQuery?: (
        node: TSESTree.TSTypeQuery,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSTypeReference?: (
        node: TSESTree.TSTypeReference,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSUndefinedKeyword?: (
        node: TSESTree.TSUndefinedKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSUnionType?: (
        node: TSESTree.TSUnionType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSUnknownKeyword?: (
        node: TSESTree.TSUnknownKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TSVoidKeyword?: (
        node: TSESTree.TSVoidKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TaggedTemplateExpression?: (
        node: TSESTree.TaggedTemplateExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TemplateElement?: (
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TemplateLiteral?: (
        node: TSESTree.TemplateLiteral,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ThisExpression?: (
        node: TSESTree.ThisExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
ThrowStatement?: (
        node: TSESTree.ThrowStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
TryStatement?: (
        node: TSESTree.TryStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
UnaryExpression?: (
        node: TSESTree.UnaryExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
UpdateExpression?: (
        node: TSESTree.UpdateExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
VariableDeclaration?: (
        node: TSESTree.VariableDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
VariableDeclarator?: (
        node: TSESTree.VariableDeclarator,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
WhileStatement?: (
        node: TSESTree.WhileStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
WithStatement?: (
        node: TSESTree.WithStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
YieldExpression?: (
        node: TSESTree.YieldExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 4.5,
  "effort": 325.5288458359251,
  "length": 19,
  "time": 18.084935879773617,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSPropertySignature\`
type: AST_NODE_TYPES.TSIntrinsicKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAliasDeclaration\`
type Visitor = {
    ArrayExpression?: (
        node: TSESTree.ArrayExpression,
        parent: TSESTree.Node | null,
    ) => void
    ArrayPattern?: (
        node: TSESTree.ArrayPattern,
        parent: TSESTree.Node | null,
    ) => void
    ArrowFunctionExpression?: (
        node: TSESTree.ArrowFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    AssignmentExpression?: (
        node: TSESTree.AssignmentExpression,
        parent: TSESTree.Node | null,
    ) => void
    AssignmentPattern?: (
        node: TSESTree.AssignmentPattern,
        parent: TSESTree.Node | null,
    ) => void
    AwaitExpression?: (
        node: TSESTree.AwaitExpression,
        parent: TSESTree.Node | null,
    ) => void
    BinaryExpression?: (
        node: TSESTree.BinaryExpression,
        parent: TSESTree.Node | null,
    ) => void
    BlockStatement?: (
        node: TSESTree.BlockStatement,
        parent: TSESTree.Node | null,
    ) => void
    BreakStatement?: (
        node: TSESTree.BreakStatement,
        parent: TSESTree.Node | null,
    ) => void
    CallExpression?: (
        node: TSESTree.CallExpression,
        parent: TSESTree.Node | null,
    ) => void
    CatchClause?: (
        node: TSESTree.CatchClause,
        parent: TSESTree.Node | null,
    ) => void
    ChainExpression?: (
        node: TSESTree.ChainExpression,
        parent: TSESTree.Node | null,
    ) => void
    ClassBody?: (node: TSESTree.ClassBody, parent: TSESTree.Node | null) => void
    ClassDeclaration?: (
        node: TSESTree.ClassDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ClassExpression?: (
        node: TSESTree.ClassExpression,
        parent: TSESTree.Node | null,
    ) => void
    ConditionalExpression?: (
        node: TSESTree.ConditionalExpression,
        parent: TSESTree.Node | null,
    ) => void
    ContinueStatement?: (
        node: TSESTree.ContinueStatement,
        parent: TSESTree.Node | null,
    ) => void
    DebuggerStatement?: (
        node: TSESTree.DebuggerStatement,
        parent: TSESTree.Node | null,
    ) => void
    Decorator?: (node: TSESTree.Decorator, parent: TSESTree.Node | null) => void
    DoWhileStatement?: (
        node: TSESTree.DoWhileStatement,
        parent: TSESTree.Node | null,
    ) => void
    EmptyStatement?: (
        node: TSESTree.EmptyStatement,
        parent: TSESTree.Node | null,
    ) => void
    ExportAllDeclaration?: (
        node: TSESTree.ExportAllDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportDefaultDeclaration?: (
        node: TSESTree.ExportDefaultDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportNamedDeclaration?: (
        node: TSESTree.ExportNamedDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportSpecifier?: (
        node: TSESTree.ExportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ExpressionStatement?: (
        node: TSESTree.ExpressionStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForInStatement?: (
        node: TSESTree.ForInStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForOfStatement?: (
        node: TSESTree.ForOfStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForStatement?: (
        node: TSESTree.ForStatement,
        parent: TSESTree.Node | null,
    ) => void
    FunctionDeclaration?: (
        node: TSESTree.FunctionDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    FunctionExpression?: (
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    Identifier?: (
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) => void
    IfStatement?: (
        node: TSESTree.IfStatement,
        parent: TSESTree.Node | null,
    ) => void
    ImportAttribute?: (
        node: TSESTree.ImportAttribute,
        parent: TSESTree.Node | null,
    ) => void
    ImportDeclaration?: (
        node: TSESTree.ImportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ImportDefaultSpecifier?: (
        node: TSESTree.ImportDefaultSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ImportExpression?: (
        node: TSESTree.ImportExpression,
        parent: TSESTree.Node | null,
    ) => void
    ImportNamespaceSpecifier?: (
        node: TSESTree.ImportNamespaceSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ImportSpecifier?: (
        node: TSESTree.ImportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    JSXAttribute?: (
        node: TSESTree.JSXAttribute,
        parent: TSESTree.Node | null,
    ) => void
    JSXClosingElement?: (
        node: TSESTree.JSXClosingElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXClosingFragment?: (
        node: TSESTree.JSXClosingFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXElement?: (
        node: TSESTree.JSXElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXEmptyExpression?: (
        node: TSESTree.JSXEmptyExpression,
        parent: TSESTree.Node | null,
    ) => void
    JSXExpressionContainer?: (
        node: TSESTree.JSXExpressionContainer,
        parent: TSESTree.Node | null,
    ) => void
    JSXFragment?: (
        node: TSESTree.JSXFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXIdentifier?: (
        node: TSESTree.JSXIdentifier,
        parent: TSESTree.Node | null,
    ) => void
    JSXMemberExpression?: (
        node: TSESTree.JSXMemberExpression,
        parent: TSESTree.Node | null,
    ) => void
    JSXNamespacedName?: (
        node: TSESTree.JSXNamespacedName,
        parent: TSESTree.Node | null,
    ) => void
    JSXOpeningElement?: (
        node: TSESTree.JSXOpeningElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXOpeningFragment?: (
        node: TSESTree.JSXOpeningFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXSpreadAttribute?: (
        node: TSESTree.JSXSpreadAttribute,
        parent: TSESTree.Node | null,
    ) => void
    JSXSpreadChild?: (
        node: TSESTree.JSXSpreadChild,
        parent: TSESTree.Node | null,
    ) => void
    JSXText?: (node: TSESTree.JSXText, parent: TSESTree.Node | null) => void
    LabeledStatement?: (
        node: TSESTree.LabeledStatement,
        parent: TSESTree.Node | null,
    ) => void
    Literal?: (node: TSESTree.Literal, parent: TSESTree.Node | null) => void
    LogicalExpression?: (
        node: TSESTree.LogicalExpression,
        parent: TSESTree.Node | null,
    ) => void
    MemberExpression?: (
        node: TSESTree.MemberExpression,
        parent: TSESTree.Node | null,
    ) => void
    MetaProperty?: (
        node: TSESTree.MetaProperty,
        parent: TSESTree.Node | null,
    ) => void
    MethodDefinition?: (
        node: TSESTree.MethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
    NewExpression?: (
        node: TSESTree.NewExpression,
        parent: TSESTree.Node | null,
    ) => void
    ObjectExpression?: (
        node: TSESTree.ObjectExpression,
        parent: TSESTree.Node | null,
    ) => void
    ObjectPattern?: (
        node: TSESTree.ObjectPattern,
        parent: TSESTree.Node | null,
    ) => void
    PrivateIdentifier?: (
        node: TSESTree.PrivateIdentifier,
        parent: TSESTree.Node | null,
    ) => void
    Program?: (node: TSESTree.Program, parent: TSESTree.Node | null) => void
    Property?: (node: TSESTree.Property, parent: TSESTree.Node | null) => void
    PropertyDefinition?: (
        node: TSESTree.PropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
    RestElement?: (
        node: TSESTree.RestElement,
        parent: TSESTree.Node | null,
    ) => void
    ReturnStatement?: (
        node: TSESTree.ReturnStatement,
        parent: TSESTree.Node | null,
    ) => void
    SequenceExpression?: (
        node: TSESTree.SequenceExpression,
        parent: TSESTree.Node | null,
    ) => void
    SpreadElement?: (
        node: TSESTree.SpreadElement,
        parent: TSESTree.Node | null,
    ) => void
    StaticBlock?: (
        node: TSESTree.StaticBlock,
        parent: TSESTree.Node | null,
    ) => void
    Super?: (node: TSESTree.Super, parent: TSESTree.Node | null) => void
    SwitchCase?: (
        node: TSESTree.SwitchCase,
        parent: TSESTree.Node | null,
    ) => void
    SwitchStatement?: (
        node: TSESTree.SwitchStatement,
        parent: TSESTree.Node | null,
    ) => void
    TaggedTemplateExpression?: (
        node: TSESTree.TaggedTemplateExpression,
        parent: TSESTree.Node | null,
    ) => void
    TemplateElement?: (
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) => void
    TemplateLiteral?: (
        node: TSESTree.TemplateLiteral,
        parent: TSESTree.Node | null,
    ) => void
    ThisExpression?: (
        node: TSESTree.ThisExpression,
        parent: TSESTree.Node | null,
    ) => void
    ThrowStatement?: (
        node: TSESTree.ThrowStatement,
        parent: TSESTree.Node | null,
    ) => void
    TryStatement?: (
        node: TSESTree.TryStatement,
        parent: TSESTree.Node | null,
    ) => void
    UnaryExpression?: (
        node: TSESTree.UnaryExpression,
        parent: TSESTree.Node | null,
    ) => void
    UpdateExpression?: (
        node: TSESTree.UpdateExpression,
        parent: TSESTree.Node | null,
    ) => void
    VariableDeclaration?: (
        node: TSESTree.VariableDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    VariableDeclarator?: (
        node: TSESTree.VariableDeclarator,
        parent: TSESTree.Node | null,
    ) => void
    WhileStatement?: (
        node: TSESTree.WhileStatement,
        parent: TSESTree.Node | null,
    ) => void
    WithStatement?: (
        node: TSESTree.WithStatement,
        parent: TSESTree.Node | null,
    ) => void
    YieldExpression?: (
        node: TSESTree.YieldExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractKeyword?: (
        node: TSESTree.TSAbstractKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractMethodDefinition?: (
        node: TSESTree.TSAbstractMethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractPropertyDefinition?: (
        node: TSESTree.TSAbstractPropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
    TSAnyKeyword?: (
        node: TSESTree.TSAnyKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSArrayType?: (
        node: TSESTree.TSArrayType,
        parent: TSESTree.Node | null,
    ) => void
    TSAsExpression?: (
        node: TSESTree.TSAsExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSAsyncKeyword?: (
        node: TSESTree.TSAsyncKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSBigIntKeyword?: (
        node: TSESTree.TSBigIntKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSBooleanKeyword?: (
        node: TSESTree.TSBooleanKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSCallSignatureDeclaration?: (
        node: TSESTree.TSCallSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSClassImplements?: (
        node: TSESTree.TSClassImplements,
        parent: TSESTree.Node | null,
    ) => void
    TSConditionalType?: (
        node: TSESTree.TSConditionalType,
        parent: TSESTree.Node | null,
    ) => void
    TSConstructorType?: (
        node: TSESTree.TSConstructorType,
        parent: TSESTree.Node | null,
    ) => void
    TSConstructSignatureDeclaration?: (
        node: TSESTree.TSConstructSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSDeclareFunction?: (
        node: TSESTree.TSDeclareFunction,
        parent: TSESTree.Node | null,
    ) => void
    TSDeclareKeyword?: (
        node: TSESTree.TSDeclareKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSEmptyBodyFunctionExpression?: (
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSEnumDeclaration?: (
        node: TSESTree.TSEnumDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSEnumMember?: (
        node: TSESTree.TSEnumMember,
        parent: TSESTree.Node | null,
    ) => void
    TSExportAssignment?: (
        node: TSESTree.TSExportAssignment,
        parent: TSESTree.Node | null,
    ) => void
    TSExportKeyword?: (
        node: TSESTree.TSExportKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSExternalModuleReference?: (
        node: TSESTree.TSExternalModuleReference,
        parent: TSESTree.Node | null,
    ) => void
    TSFunctionType?: (
        node: TSESTree.TSFunctionType,
        parent: TSESTree.Node | null,
    ) => void
    TSImportEqualsDeclaration?: (
        node: TSESTree.TSImportEqualsDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSImportType?: (
        node: TSESTree.TSImportType,
        parent: TSESTree.Node | null,
    ) => void
    TSIndexedAccessType?: (
        node: TSESTree.TSIndexedAccessType,
        parent: TSESTree.Node | null,
    ) => void
    TSIndexSignature?: (
        node: TSESTree.TSIndexSignature,
        parent: TSESTree.Node | null,
    ) => void
    TSInferType?: (
        node: TSESTree.TSInferType,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceBody?: (
        node: TSESTree.TSInterfaceBody,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceDeclaration?: (
        node: TSESTree.TSInterfaceDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceHeritage?: (
        node: TSESTree.TSInterfaceHeritage,
        parent: TSESTree.Node | null,
    ) => void
    TSIntersectionType?: (
        node: TSESTree.TSIntersectionType,
        parent: TSESTree.Node | null,
    ) => void
    TSIntrinsicKeyword?: (
        node: TSESTree.Node & { type: AST_NODE_TYPES.TSIntrinsicKeyword },
        parent: TSESTree.Node | null,
    ) => void
    TSLiteralType?: (
        node: TSESTree.TSLiteralType,
        parent: TSESTree.Node | null,
    ) => void
    TSMappedType?: (
        node: TSESTree.TSMappedType,
        parent: TSESTree.Node | null,
    ) => void
    TSMethodSignature?: (
        node: TSESTree.TSMethodSignature,
        parent: TSESTree.Node | null,
    ) => void
    TSModuleBlock?: (
        node: TSESTree.TSModuleBlock,
        parent: TSESTree.Node | null,
    ) => void
    TSModuleDeclaration?: (
        node: TSESTree.TSModuleDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSNamedTupleMember?: (
        node: TSESTree.TSNamedTupleMember,
        parent: TSESTree.Node | null,
    ) => void
    TSNamespaceExportDeclaration?: (
        node: TSESTree.TSNamespaceExportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSNeverKeyword?: (
        node: TSESTree.TSNeverKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSNonNullExpression?: (
        node: TSESTree.TSNonNullExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSNullKeyword?: (
        node: TSESTree.TSNullKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSNumberKeyword?: (
        node: TSESTree.TSNumberKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSObjectKeyword?: (
        node: TSESTree.TSObjectKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSOptionalType?: (
        node: TSESTree.TSOptionalType,
        parent: TSESTree.Node | null,
    ) => void
    TSParameterProperty?: (
        node: TSESTree.TSParameterProperty,
        parent: TSESTree.Node | null,
    ) => void
    TSPrivateKeyword?: (
        node: TSESTree.TSPrivateKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSPropertySignature?: (
        node: TSESTree.TSPropertySignature,
        parent: TSESTree.Node | null,
    ) => void
    TSProtectedKeyword?: (
        node: TSESTree.TSProtectedKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSPublicKeyword?: (
        node: TSESTree.TSPublicKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSQualifiedName?: (
        node: TSESTree.TSQualifiedName,
        parent: TSESTree.Node | null,
    ) => void
    TSReadonlyKeyword?: (
        node: TSESTree.TSReadonlyKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSRestType?: (
        node: TSESTree.TSRestType,
        parent: TSESTree.Node | null,
    ) => void
    TSStaticKeyword?: (
        node: TSESTree.TSStaticKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSStringKeyword?: (
        node: TSESTree.TSStringKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSSymbolKeyword?: (
        node: TSESTree.TSSymbolKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSTemplateLiteralType?: (
        node: TSESTree.TSTemplateLiteralType,
        parent: TSESTree.Node | null,
    ) => void
    TSThisType?: (
        node: TSESTree.TSThisType,
        parent: TSESTree.Node | null,
    ) => void
    TSTupleType?: (
        node: TSESTree.TSTupleType,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAliasDeclaration?: (
        node: TSESTree.TSTypeAliasDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAnnotation?: (
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAssertion?: (
        node: TSESTree.TSTypeAssertion,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeLiteral?: (
        node: TSESTree.TSTypeLiteral,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeOperator?: (
        node: TSESTree.TSTypeOperator,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameter?: (
        node: TSESTree.TSTypeParameter,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameterDeclaration?: (
        node: TSESTree.TSTypeParameterDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameterInstantiation?: (
        node: TSESTree.TSTypeParameterInstantiation,
        parent: TSESTree.Node | null,
    ) => void
    TSTypePredicate?: (
        node: TSESTree.TSTypePredicate,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeQuery?: (
        node: TSESTree.TSTypeQuery,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeReference?: (
        node: TSESTree.TSTypeReference,
        parent: TSESTree.Node | null,
    ) => void
    TSUndefinedKeyword?: (
        node: TSESTree.TSUndefinedKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSUnionType?: (
        node: TSESTree.TSUnionType,
        parent: TSESTree.Node | null,
    ) => void
    TSUnknownKeyword?: (
        node: TSESTree.TSUnknownKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSVoidKeyword?: (
        node: TSESTree.TSVoidKeyword,
        parent: TSESTree.Node | null,
    ) => void
}
\` 1`] = `
Object {
  "deliveredBugs": 7.786265032462269,
  "difficulty": 47.037790697674424,
  "effort": 1098746.114740744,
  "length": 3108,
  "time": 61041.45081893022,
  "vocabulary": 183,
  "volume": 23358.795097386806,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ArrayExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ArrayPattern,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ArrowFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.AssignmentExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.AssignmentPattern,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.AwaitExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.BinaryExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.BlockStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.BreakStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.CallExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.CatchClause,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ChainExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ClassDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ClassExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ConditionalExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ContinueStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.DebuggerStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.DoWhileStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.EmptyStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ExportAllDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ExportDefaultDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ExportNamedDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ExportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ExpressionStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ForInStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ForOfStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ForStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.FunctionDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.IfStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ImportAttribute,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ImportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ImportDefaultSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ImportExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ImportNamespaceSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ImportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXAttribute,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXClosingElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXClosingFragment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXEmptyExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXExpressionContainer,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXFragment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXIdentifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXMemberExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXNamespacedName,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXOpeningElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXOpeningFragment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXSpreadAttribute,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.JSXSpreadChild,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.LabeledStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.LogicalExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.MemberExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.MetaProperty,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.MethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.NewExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.Node & { type: AST_NODE_TYPES.TSIntrinsicKeyword },
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.03269970273000272,
  "difficulty": 4.888888888888889,
  "effort": 479.59564004003994,
  "length": 24,
  "time": 26.644202224446662,
  "vocabulary": 17,
  "volume": 98.09910819000817,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ObjectExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ObjectPattern,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.PrivateIdentifier,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.PropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.RestElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ReturnStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.SequenceExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.SpreadElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.StaticBlock,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.SwitchCase,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.SwitchStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSAbstractKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSAbstractMethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSAbstractPropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSAnyKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSArrayType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSAsExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSAsyncKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSBigIntKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSBooleanKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSCallSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSClassImplements,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSConditionalType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSConstructSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSConstructorType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSDeclareFunction,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSDeclareKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSEnumDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSEnumMember,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSExportAssignment,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSExportKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSExternalModuleReference,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSFunctionType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSImportEqualsDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSImportType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSIndexSignature,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSIndexedAccessType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSInferType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSInterfaceBody,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSInterfaceDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSInterfaceHeritage,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSIntersectionType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSLiteralType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSMappedType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSMethodSignature,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSModuleBlock,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSModuleDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSNamedTupleMember,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSNamespaceExportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSNeverKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSNonNullExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSNullKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSNumberKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSObjectKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSOptionalType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSParameterProperty,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSPrivateKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSPropertySignature,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSProtectedKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSPublicKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSQualifiedName,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSReadonlyKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSRestType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSStaticKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSStringKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSSymbolKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTemplateLiteralType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSThisType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTupleType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypeAliasDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypeAssertion,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypeLiteral,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypeOperator,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypeParameter,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypeParameterDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypeParameterInstantiation,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypePredicate,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypeQuery,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSTypeReference,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSUndefinedKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSUnionType,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSUnknownKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TSVoidKeyword,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TaggedTemplateExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TemplateLiteral,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ThisExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.ThrowStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.TryStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.UnaryExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.UpdateExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.VariableDeclaration,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.VariableDeclarator,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.WhileStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.WithStatement,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (
        node: TSESTree.YieldExpression,
        parent: TSESTree.Node | null,
    ) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (node: TSESTree.ClassBody, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (node: TSESTree.Decorator, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (node: TSESTree.JSXText, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (node: TSESTree.Literal, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (node: TSESTree.Program, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (node: TSESTree.Property, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: (node: TSESTree.Super, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.02096915840279952,
  "difficulty": 3.4285714285714284,
  "effort": 215.6827721430808,
  "length": 17,
  "time": 11.982376230171155,
  "vocabulary": 13,
  "volume": 62.907475208398566,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: AST_NODE_TYPES.TSIntrinsicKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ArrayExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ArrayPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ArrowFunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.AssignmentExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.AssignmentPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.AwaitExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.BinaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.BlockStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.BreakStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.CallExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.CatchClause
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ChainExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ClassBody
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ClassDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ClassExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ConditionalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ContinueStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.DebuggerStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.Decorator
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.DoWhileStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.EmptyStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ExportAllDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ExportDefaultDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ExportNamedDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ExportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ExpressionStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ForInStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ForOfStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ForStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.FunctionDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.FunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.Identifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.IfStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ImportAttribute
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ImportDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ImportDefaultSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ImportExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ImportNamespaceSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ImportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXAttribute
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXClosingElement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXClosingFragment
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXElement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXEmptyExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXExpressionContainer
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXFragment
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXIdentifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXMemberExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXNamespacedName
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXOpeningElement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXOpeningFragment
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXSpreadAttribute
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXSpreadChild
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.JSXText
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.LabeledStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.Literal
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.LogicalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.MemberExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.MetaProperty
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.MethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.NewExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.Node & { type: AST_NODE_TYPES.TSIntrinsicKeyword }
\` 1`] = `
Object {
  "deliveredBugs": 0.011623058338621813,
  "difficulty": 2,
  "effort": 69.73835003173087,
  "length": 11,
  "time": 3.874352779540604,
  "vocabulary": 9,
  "volume": 34.86917501586544,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.Node | null
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ObjectExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ObjectPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.PrivateIdentifier
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.Program
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.Property
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.PropertyDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.RestElement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ReturnStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.SequenceExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.SpreadElement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.StaticBlock
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.Super
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.SwitchCase
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.SwitchStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSAbstractKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSAbstractMethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSAbstractPropertyDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSAnyKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSArrayType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSAsExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSAsyncKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSBigIntKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSBooleanKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSCallSignatureDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSClassImplements
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSConditionalType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSConstructSignatureDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSConstructorType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSDeclareFunction
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSDeclareKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSEmptyBodyFunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSEnumDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSEnumMember
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSExportAssignment
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSExportKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSExternalModuleReference
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSFunctionType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSImportEqualsDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSImportType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSIndexSignature
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSIndexedAccessType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSInferType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSInterfaceBody
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSInterfaceDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSInterfaceHeritage
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSIntersectionType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSLiteralType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSMappedType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSMethodSignature
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSModuleBlock
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSModuleDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSNamedTupleMember
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSNamespaceExportDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSNeverKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSNonNullExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSNullKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSNumberKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSObjectKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSOptionalType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSParameterProperty
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSPrivateKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSPropertySignature
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSProtectedKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSPublicKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSQualifiedName
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSReadonlyKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSRestType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSStaticKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSStringKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSSymbolKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTemplateLiteralType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSThisType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTupleType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypeAliasDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypeAnnotation
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypeAssertion
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypeLiteral
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypeOperator
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypeParameter
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypeParameterDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypeParameterInstantiation
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypePredicate
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypeQuery
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSTypeReference
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSUndefinedKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSUnionType
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSUnknownKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TSVoidKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TaggedTemplateExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TemplateElement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TemplateLiteral
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ThisExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.ThrowStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.TryStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.UnaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.UpdateExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.VariableDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.VariableDeclarator
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.WhileStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.WithStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
: TSESTree.YieldExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeAnnotation\`
=> void
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeLiteral\`
{
    ArrayExpression?: (
        node: TSESTree.ArrayExpression,
        parent: TSESTree.Node | null,
    ) => void
    ArrayPattern?: (
        node: TSESTree.ArrayPattern,
        parent: TSESTree.Node | null,
    ) => void
    ArrowFunctionExpression?: (
        node: TSESTree.ArrowFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    AssignmentExpression?: (
        node: TSESTree.AssignmentExpression,
        parent: TSESTree.Node | null,
    ) => void
    AssignmentPattern?: (
        node: TSESTree.AssignmentPattern,
        parent: TSESTree.Node | null,
    ) => void
    AwaitExpression?: (
        node: TSESTree.AwaitExpression,
        parent: TSESTree.Node | null,
    ) => void
    BinaryExpression?: (
        node: TSESTree.BinaryExpression,
        parent: TSESTree.Node | null,
    ) => void
    BlockStatement?: (
        node: TSESTree.BlockStatement,
        parent: TSESTree.Node | null,
    ) => void
    BreakStatement?: (
        node: TSESTree.BreakStatement,
        parent: TSESTree.Node | null,
    ) => void
    CallExpression?: (
        node: TSESTree.CallExpression,
        parent: TSESTree.Node | null,
    ) => void
    CatchClause?: (
        node: TSESTree.CatchClause,
        parent: TSESTree.Node | null,
    ) => void
    ChainExpression?: (
        node: TSESTree.ChainExpression,
        parent: TSESTree.Node | null,
    ) => void
    ClassBody?: (node: TSESTree.ClassBody, parent: TSESTree.Node | null) => void
    ClassDeclaration?: (
        node: TSESTree.ClassDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ClassExpression?: (
        node: TSESTree.ClassExpression,
        parent: TSESTree.Node | null,
    ) => void
    ConditionalExpression?: (
        node: TSESTree.ConditionalExpression,
        parent: TSESTree.Node | null,
    ) => void
    ContinueStatement?: (
        node: TSESTree.ContinueStatement,
        parent: TSESTree.Node | null,
    ) => void
    DebuggerStatement?: (
        node: TSESTree.DebuggerStatement,
        parent: TSESTree.Node | null,
    ) => void
    Decorator?: (node: TSESTree.Decorator, parent: TSESTree.Node | null) => void
    DoWhileStatement?: (
        node: TSESTree.DoWhileStatement,
        parent: TSESTree.Node | null,
    ) => void
    EmptyStatement?: (
        node: TSESTree.EmptyStatement,
        parent: TSESTree.Node | null,
    ) => void
    ExportAllDeclaration?: (
        node: TSESTree.ExportAllDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportDefaultDeclaration?: (
        node: TSESTree.ExportDefaultDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportNamedDeclaration?: (
        node: TSESTree.ExportNamedDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ExportSpecifier?: (
        node: TSESTree.ExportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ExpressionStatement?: (
        node: TSESTree.ExpressionStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForInStatement?: (
        node: TSESTree.ForInStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForOfStatement?: (
        node: TSESTree.ForOfStatement,
        parent: TSESTree.Node | null,
    ) => void
    ForStatement?: (
        node: TSESTree.ForStatement,
        parent: TSESTree.Node | null,
    ) => void
    FunctionDeclaration?: (
        node: TSESTree.FunctionDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    FunctionExpression?: (
        node: TSESTree.FunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    Identifier?: (
        node: TSESTree.Identifier,
        parent: TSESTree.Node | null,
    ) => void
    IfStatement?: (
        node: TSESTree.IfStatement,
        parent: TSESTree.Node | null,
    ) => void
    ImportAttribute?: (
        node: TSESTree.ImportAttribute,
        parent: TSESTree.Node | null,
    ) => void
    ImportDeclaration?: (
        node: TSESTree.ImportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    ImportDefaultSpecifier?: (
        node: TSESTree.ImportDefaultSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ImportExpression?: (
        node: TSESTree.ImportExpression,
        parent: TSESTree.Node | null,
    ) => void
    ImportNamespaceSpecifier?: (
        node: TSESTree.ImportNamespaceSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    ImportSpecifier?: (
        node: TSESTree.ImportSpecifier,
        parent: TSESTree.Node | null,
    ) => void
    JSXAttribute?: (
        node: TSESTree.JSXAttribute,
        parent: TSESTree.Node | null,
    ) => void
    JSXClosingElement?: (
        node: TSESTree.JSXClosingElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXClosingFragment?: (
        node: TSESTree.JSXClosingFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXElement?: (
        node: TSESTree.JSXElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXEmptyExpression?: (
        node: TSESTree.JSXEmptyExpression,
        parent: TSESTree.Node | null,
    ) => void
    JSXExpressionContainer?: (
        node: TSESTree.JSXExpressionContainer,
        parent: TSESTree.Node | null,
    ) => void
    JSXFragment?: (
        node: TSESTree.JSXFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXIdentifier?: (
        node: TSESTree.JSXIdentifier,
        parent: TSESTree.Node | null,
    ) => void
    JSXMemberExpression?: (
        node: TSESTree.JSXMemberExpression,
        parent: TSESTree.Node | null,
    ) => void
    JSXNamespacedName?: (
        node: TSESTree.JSXNamespacedName,
        parent: TSESTree.Node | null,
    ) => void
    JSXOpeningElement?: (
        node: TSESTree.JSXOpeningElement,
        parent: TSESTree.Node | null,
    ) => void
    JSXOpeningFragment?: (
        node: TSESTree.JSXOpeningFragment,
        parent: TSESTree.Node | null,
    ) => void
    JSXSpreadAttribute?: (
        node: TSESTree.JSXSpreadAttribute,
        parent: TSESTree.Node | null,
    ) => void
    JSXSpreadChild?: (
        node: TSESTree.JSXSpreadChild,
        parent: TSESTree.Node | null,
    ) => void
    JSXText?: (node: TSESTree.JSXText, parent: TSESTree.Node | null) => void
    LabeledStatement?: (
        node: TSESTree.LabeledStatement,
        parent: TSESTree.Node | null,
    ) => void
    Literal?: (node: TSESTree.Literal, parent: TSESTree.Node | null) => void
    LogicalExpression?: (
        node: TSESTree.LogicalExpression,
        parent: TSESTree.Node | null,
    ) => void
    MemberExpression?: (
        node: TSESTree.MemberExpression,
        parent: TSESTree.Node | null,
    ) => void
    MetaProperty?: (
        node: TSESTree.MetaProperty,
        parent: TSESTree.Node | null,
    ) => void
    MethodDefinition?: (
        node: TSESTree.MethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
    NewExpression?: (
        node: TSESTree.NewExpression,
        parent: TSESTree.Node | null,
    ) => void
    ObjectExpression?: (
        node: TSESTree.ObjectExpression,
        parent: TSESTree.Node | null,
    ) => void
    ObjectPattern?: (
        node: TSESTree.ObjectPattern,
        parent: TSESTree.Node | null,
    ) => void
    PrivateIdentifier?: (
        node: TSESTree.PrivateIdentifier,
        parent: TSESTree.Node | null,
    ) => void
    Program?: (node: TSESTree.Program, parent: TSESTree.Node | null) => void
    Property?: (node: TSESTree.Property, parent: TSESTree.Node | null) => void
    PropertyDefinition?: (
        node: TSESTree.PropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
    RestElement?: (
        node: TSESTree.RestElement,
        parent: TSESTree.Node | null,
    ) => void
    ReturnStatement?: (
        node: TSESTree.ReturnStatement,
        parent: TSESTree.Node | null,
    ) => void
    SequenceExpression?: (
        node: TSESTree.SequenceExpression,
        parent: TSESTree.Node | null,
    ) => void
    SpreadElement?: (
        node: TSESTree.SpreadElement,
        parent: TSESTree.Node | null,
    ) => void
    StaticBlock?: (
        node: TSESTree.StaticBlock,
        parent: TSESTree.Node | null,
    ) => void
    Super?: (node: TSESTree.Super, parent: TSESTree.Node | null) => void
    SwitchCase?: (
        node: TSESTree.SwitchCase,
        parent: TSESTree.Node | null,
    ) => void
    SwitchStatement?: (
        node: TSESTree.SwitchStatement,
        parent: TSESTree.Node | null,
    ) => void
    TaggedTemplateExpression?: (
        node: TSESTree.TaggedTemplateExpression,
        parent: TSESTree.Node | null,
    ) => void
    TemplateElement?: (
        node: TSESTree.TemplateElement,
        parent: TSESTree.Node | null,
    ) => void
    TemplateLiteral?: (
        node: TSESTree.TemplateLiteral,
        parent: TSESTree.Node | null,
    ) => void
    ThisExpression?: (
        node: TSESTree.ThisExpression,
        parent: TSESTree.Node | null,
    ) => void
    ThrowStatement?: (
        node: TSESTree.ThrowStatement,
        parent: TSESTree.Node | null,
    ) => void
    TryStatement?: (
        node: TSESTree.TryStatement,
        parent: TSESTree.Node | null,
    ) => void
    UnaryExpression?: (
        node: TSESTree.UnaryExpression,
        parent: TSESTree.Node | null,
    ) => void
    UpdateExpression?: (
        node: TSESTree.UpdateExpression,
        parent: TSESTree.Node | null,
    ) => void
    VariableDeclaration?: (
        node: TSESTree.VariableDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    VariableDeclarator?: (
        node: TSESTree.VariableDeclarator,
        parent: TSESTree.Node | null,
    ) => void
    WhileStatement?: (
        node: TSESTree.WhileStatement,
        parent: TSESTree.Node | null,
    ) => void
    WithStatement?: (
        node: TSESTree.WithStatement,
        parent: TSESTree.Node | null,
    ) => void
    YieldExpression?: (
        node: TSESTree.YieldExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractKeyword?: (
        node: TSESTree.TSAbstractKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractMethodDefinition?: (
        node: TSESTree.TSAbstractMethodDefinition,
        parent: TSESTree.Node | null,
    ) => void
    TSAbstractPropertyDefinition?: (
        node: TSESTree.TSAbstractPropertyDefinition,
        parent: TSESTree.Node | null,
    ) => void
    TSAnyKeyword?: (
        node: TSESTree.TSAnyKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSArrayType?: (
        node: TSESTree.TSArrayType,
        parent: TSESTree.Node | null,
    ) => void
    TSAsExpression?: (
        node: TSESTree.TSAsExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSAsyncKeyword?: (
        node: TSESTree.TSAsyncKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSBigIntKeyword?: (
        node: TSESTree.TSBigIntKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSBooleanKeyword?: (
        node: TSESTree.TSBooleanKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSCallSignatureDeclaration?: (
        node: TSESTree.TSCallSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSClassImplements?: (
        node: TSESTree.TSClassImplements,
        parent: TSESTree.Node | null,
    ) => void
    TSConditionalType?: (
        node: TSESTree.TSConditionalType,
        parent: TSESTree.Node | null,
    ) => void
    TSConstructorType?: (
        node: TSESTree.TSConstructorType,
        parent: TSESTree.Node | null,
    ) => void
    TSConstructSignatureDeclaration?: (
        node: TSESTree.TSConstructSignatureDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSDeclareFunction?: (
        node: TSESTree.TSDeclareFunction,
        parent: TSESTree.Node | null,
    ) => void
    TSDeclareKeyword?: (
        node: TSESTree.TSDeclareKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSEmptyBodyFunctionExpression?: (
        node: TSESTree.TSEmptyBodyFunctionExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSEnumDeclaration?: (
        node: TSESTree.TSEnumDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSEnumMember?: (
        node: TSESTree.TSEnumMember,
        parent: TSESTree.Node | null,
    ) => void
    TSExportAssignment?: (
        node: TSESTree.TSExportAssignment,
        parent: TSESTree.Node | null,
    ) => void
    TSExportKeyword?: (
        node: TSESTree.TSExportKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSExternalModuleReference?: (
        node: TSESTree.TSExternalModuleReference,
        parent: TSESTree.Node | null,
    ) => void
    TSFunctionType?: (
        node: TSESTree.TSFunctionType,
        parent: TSESTree.Node | null,
    ) => void
    TSImportEqualsDeclaration?: (
        node: TSESTree.TSImportEqualsDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSImportType?: (
        node: TSESTree.TSImportType,
        parent: TSESTree.Node | null,
    ) => void
    TSIndexedAccessType?: (
        node: TSESTree.TSIndexedAccessType,
        parent: TSESTree.Node | null,
    ) => void
    TSIndexSignature?: (
        node: TSESTree.TSIndexSignature,
        parent: TSESTree.Node | null,
    ) => void
    TSInferType?: (
        node: TSESTree.TSInferType,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceBody?: (
        node: TSESTree.TSInterfaceBody,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceDeclaration?: (
        node: TSESTree.TSInterfaceDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSInterfaceHeritage?: (
        node: TSESTree.TSInterfaceHeritage,
        parent: TSESTree.Node | null,
    ) => void
    TSIntersectionType?: (
        node: TSESTree.TSIntersectionType,
        parent: TSESTree.Node | null,
    ) => void
    TSIntrinsicKeyword?: (
        node: TSESTree.Node & { type: AST_NODE_TYPES.TSIntrinsicKeyword },
        parent: TSESTree.Node | null,
    ) => void
    TSLiteralType?: (
        node: TSESTree.TSLiteralType,
        parent: TSESTree.Node | null,
    ) => void
    TSMappedType?: (
        node: TSESTree.TSMappedType,
        parent: TSESTree.Node | null,
    ) => void
    TSMethodSignature?: (
        node: TSESTree.TSMethodSignature,
        parent: TSESTree.Node | null,
    ) => void
    TSModuleBlock?: (
        node: TSESTree.TSModuleBlock,
        parent: TSESTree.Node | null,
    ) => void
    TSModuleDeclaration?: (
        node: TSESTree.TSModuleDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSNamedTupleMember?: (
        node: TSESTree.TSNamedTupleMember,
        parent: TSESTree.Node | null,
    ) => void
    TSNamespaceExportDeclaration?: (
        node: TSESTree.TSNamespaceExportDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSNeverKeyword?: (
        node: TSESTree.TSNeverKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSNonNullExpression?: (
        node: TSESTree.TSNonNullExpression,
        parent: TSESTree.Node | null,
    ) => void
    TSNullKeyword?: (
        node: TSESTree.TSNullKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSNumberKeyword?: (
        node: TSESTree.TSNumberKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSObjectKeyword?: (
        node: TSESTree.TSObjectKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSOptionalType?: (
        node: TSESTree.TSOptionalType,
        parent: TSESTree.Node | null,
    ) => void
    TSParameterProperty?: (
        node: TSESTree.TSParameterProperty,
        parent: TSESTree.Node | null,
    ) => void
    TSPrivateKeyword?: (
        node: TSESTree.TSPrivateKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSPropertySignature?: (
        node: TSESTree.TSPropertySignature,
        parent: TSESTree.Node | null,
    ) => void
    TSProtectedKeyword?: (
        node: TSESTree.TSProtectedKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSPublicKeyword?: (
        node: TSESTree.TSPublicKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSQualifiedName?: (
        node: TSESTree.TSQualifiedName,
        parent: TSESTree.Node | null,
    ) => void
    TSReadonlyKeyword?: (
        node: TSESTree.TSReadonlyKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSRestType?: (
        node: TSESTree.TSRestType,
        parent: TSESTree.Node | null,
    ) => void
    TSStaticKeyword?: (
        node: TSESTree.TSStaticKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSStringKeyword?: (
        node: TSESTree.TSStringKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSSymbolKeyword?: (
        node: TSESTree.TSSymbolKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSTemplateLiteralType?: (
        node: TSESTree.TSTemplateLiteralType,
        parent: TSESTree.Node | null,
    ) => void
    TSThisType?: (
        node: TSESTree.TSThisType,
        parent: TSESTree.Node | null,
    ) => void
    TSTupleType?: (
        node: TSESTree.TSTupleType,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAliasDeclaration?: (
        node: TSESTree.TSTypeAliasDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAnnotation?: (
        node: TSESTree.TSTypeAnnotation,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeAssertion?: (
        node: TSESTree.TSTypeAssertion,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeLiteral?: (
        node: TSESTree.TSTypeLiteral,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeOperator?: (
        node: TSESTree.TSTypeOperator,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameter?: (
        node: TSESTree.TSTypeParameter,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameterDeclaration?: (
        node: TSESTree.TSTypeParameterDeclaration,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeParameterInstantiation?: (
        node: TSESTree.TSTypeParameterInstantiation,
        parent: TSESTree.Node | null,
    ) => void
    TSTypePredicate?: (
        node: TSESTree.TSTypePredicate,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeQuery?: (
        node: TSESTree.TSTypeQuery,
        parent: TSESTree.Node | null,
    ) => void
    TSTypeReference?: (
        node: TSESTree.TSTypeReference,
        parent: TSESTree.Node | null,
    ) => void
    TSUndefinedKeyword?: (
        node: TSESTree.TSUndefinedKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSUnionType?: (
        node: TSESTree.TSUnionType,
        parent: TSESTree.Node | null,
    ) => void
    TSUnknownKeyword?: (
        node: TSESTree.TSUnknownKeyword,
        parent: TSESTree.Node | null,
    ) => void
    TSVoidKeyword?: (
        node: TSESTree.TSVoidKeyword,
        parent: TSESTree.Node | null,
    ) => void
}
\` 1`] = `
Object {
  "deliveredBugs": 7.754067954701214,
  "difficulty": 38.68421052631579,
  "effort": 899879.9915850619,
  "length": 3105,
  "time": 49993.33286583677,
  "vocabulary": 180,
  "volume": 23262.20386410364,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeLiteral\`
{ type: AST_NODE_TYPES.TSIntrinsicKeyword }
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
AST_NODE_TYPES.TSIntrinsicKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ArrayExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ArrayPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ArrowFunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.AssignmentExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.AssignmentPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.AwaitExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.BinaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.BlockStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.BreakStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.CallExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.CatchClause
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ChainExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ClassBody
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ClassDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ClassExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ConditionalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ContinueStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.DebuggerStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.Decorator
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.DoWhileStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.EmptyStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ExportAllDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ExportDefaultDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ExportNamedDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ExportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ExpressionStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ForInStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ForOfStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ForStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.FunctionDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.FunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.Identifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.IfStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ImportAttribute
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ImportDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ImportDefaultSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ImportExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ImportNamespaceSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ImportSpecifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXAttribute
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXClosingElement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXClosingFragment
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXElement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXEmptyExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXExpressionContainer
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXFragment
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXIdentifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXMemberExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXNamespacedName
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXOpeningElement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXOpeningFragment
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXSpreadAttribute
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXSpreadChild
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.JSXText
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.LabeledStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.Literal
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.LogicalExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.MemberExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.MetaProperty
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.MethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.NewExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ObjectExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ObjectPattern
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.PrivateIdentifier
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.Program
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.Property
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.PropertyDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.RestElement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ReturnStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.SequenceExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.SpreadElement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.StaticBlock
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.Super
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.SwitchCase
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.SwitchStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSAbstractKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSAbstractMethodDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSAbstractPropertyDefinition
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSAnyKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSArrayType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSAsExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSAsyncKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSBigIntKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSBooleanKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSCallSignatureDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSClassImplements
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSConditionalType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSConstructSignatureDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSConstructorType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSDeclareFunction
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSDeclareKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSEmptyBodyFunctionExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSEnumDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSEnumMember
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSExportAssignment
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSExportKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSExternalModuleReference
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSFunctionType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSImportEqualsDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSImportType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSIndexSignature
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSIndexedAccessType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSInferType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSInterfaceBody
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSInterfaceDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSInterfaceHeritage
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSIntersectionType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSLiteralType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSMappedType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSMethodSignature
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSModuleBlock
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSModuleDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSNamedTupleMember
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSNamespaceExportDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSNeverKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSNonNullExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSNullKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSNumberKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSObjectKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSOptionalType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSParameterProperty
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSPrivateKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSPropertySignature
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSProtectedKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSPublicKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSQualifiedName
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSReadonlyKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSRestType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSStaticKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSStringKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSSymbolKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTemplateLiteralType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSThisType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTupleType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypeAliasDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypeAnnotation
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypeAssertion
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypeLiteral
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypeOperator
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypeParameter
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypeParameterDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypeParameterInstantiation
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypePredicate
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypeQuery
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSTypeReference
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSUndefinedKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSUnionType
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSUnknownKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TSVoidKeyword
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TaggedTemplateExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TemplateElement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TemplateLiteral
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ThisExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.ThrowStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.TryStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.UnaryExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.UpdateExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.VariableDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.VariableDeclarator
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.WhileStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.WithStatement
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSTypeReference\`
TSESTree.YieldExpression
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSUnionType\`
TSESTree.Node | null
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/visitor.ts TSVoidKeyword\`
void
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ArrayExpression\`
[
        { node, parent: null },
    ]
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ArrayExpression\`
[
    ...new Set([...visitorKeys.TSInterfaceDeclaration || [], "implements"]),
]
\` 1`] = `
Object {
  "deliveredBugs": 0.016144014220307392,
  "difficulty": 3.5,
  "effort": 169.5121493132276,
  "length": 14,
  "time": 9.417341628512645,
  "vocabulary": 11,
  "volume": 48.43204266092217,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ArrayExpression\`
[
    ...new Set([...visitorKeys.TSNamedTupleMember || [], "label"]),
]
\` 1`] = `
Object {
  "deliveredBugs": 0.016144014220307392,
  "difficulty": 3.5,
  "effort": 169.5121493132276,
  "length": 14,
  "time": 9.417341628512645,
  "vocabulary": 11,
  "volume": 48.43204266092217,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ArrayExpression\`
[...visitorKeys.TSInterfaceDeclaration || [], "implements"]
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 2.5,
  "effort": 67.5,
  "length": 9,
  "time": 3.75,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ArrayExpression\`
[...visitorKeys.TSNamedTupleMember || [], "label"]
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 2.5,
  "effort": 67.5,
  "length": 9,
  "time": 3.75,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ArrayExpression\`
[]
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0.5,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts AssignmentExpression\`
e = nodes.pop()
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BinaryExpression\`
i >= 0
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BinaryExpression\`
index >= 0
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BinaryExpression\`
keys.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BinaryExpression\`
typeof (x as any).type === "string"
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BinaryExpression\`
typeof x === "object"
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BinaryExpression\`
value.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BinaryExpression\`
x !== null
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BlockStatement\`
{
                        nodes.push({ node: v, parent: node })
                    }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BlockStatement\`
{
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
\` 1`] = `
Object {
  "deliveredBugs": 0.03269970273000272,
  "difficulty": 6.1875,
  "effort": 606.9882319256756,
  "length": 24,
  "time": 33.72156844031531,
  "vocabulary": 17,
  "volume": 98.09910819000817,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BlockStatement\`
{
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.06423934281459492,
  "difficulty": 12.272727272727273,
  "effort": 2365.175803628268,
  "length": 41,
  "time": 131.398655757126,
  "vocabulary": 26,
  "volume": 192.7180284437848,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BlockStatement\`
{
                nodes.push({ node: value, parent: node })
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.014395021744511906,
  "difficulty": 3,
  "effort": 129.55519570060716,
  "length": 13,
  "time": 7.197510872255953,
  "vocabulary": 10,
  "volume": 43.18506523353572,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BlockStatement\`
{
            const key = keys[index]
            const value = (node as any)[key]

            if (isNode(value)) {
                nodes.push({ node: value, parent: node })
            } else if (Array.isArray(value)) {
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.13736149671375916,
  "difficulty": 18,
  "effort": 7417.520822542995,
  "length": 81,
  "time": 412.0844901412775,
  "vocabulary": 34,
  "volume": 412.0844901412775,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BlockStatement\`
{
        const node = e.node
        visit(node, node.parent || e.parent)
        const keys = visitorKeys[node.type] || getKeys(node)

        for (let index = keys.length - 1; index >= 0; index--) {
            const key = keys[index]
            const value = (node as any)[key]

            if (isNode(value)) {
                nodes.push({ node: value, parent: node })
            } else if (Array.isArray(value)) {
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.22529495601689836,
  "difficulty": 23.727272727272727,
  "effort": 16036.904596475584,
  "length": 127,
  "time": 890.9391442486435,
  "vocabulary": 40,
  "volume": 675.8848680506951,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BlockStatement\`
{
    const nodes: { node: TSESTree.Node; parent: TSESTree.Node | null }[] = [
        { node, parent: null },
    ]

    let e
    while ((e = nodes.pop())) {
        const node = e.node
        visit(node, node.parent || e.parent)
        const keys = visitorKeys[node.type] || getKeys(node)

        for (let index = keys.length - 1; index >= 0; index--) {
            const key = keys[index]
            const value = (node as any)[key]

            if (isNode(value)) {
                nodes.push({ node: value, parent: node })
            } else if (Array.isArray(value)) {
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
        }
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.2982723456270787,
  "difficulty": 28.076923076923073,
  "effort": 25123.709112434703,
  "length": 162,
  "time": 1395.7616173574834,
  "vocabulary": 46,
  "volume": 894.8170368812362,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts BlockStatement\`
{
    return (
        x !== null &&
        typeof x === "object" &&
        typeof (x as any).type === "string"
    )
}
\` 1`] = `
Object {
  "deliveredBugs": 0.026045937304056792,
  "difficulty": 6,
  "effort": 468.82687147302227,
  "length": 20,
  "time": 26.045937304056793,
  "vocabulary": 15,
  "volume": 78.13781191217038,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts CallExpression\`
Array.isArray(value)
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts CallExpression\`
getKeys(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts CallExpression\`
isNode(v)
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts CallExpression\`
isNode(value)
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts CallExpression\`
nodes.pop()
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ExportNamedDeclaration\`
export function walk(
    node: TSESTree.Node,
    visit: (node: TSESTree.Node, parent: TSESTree.Node | null) => void,
): void {
    const nodes: { node: TSESTree.Node; parent: TSESTree.Node | null }[] = [
        { node, parent: null },
    ]

    let e
    while ((e = nodes.pop())) {
        const node = e.node
        visit(node, node.parent || e.parent)
        const keys = visitorKeys[node.type] || getKeys(node)

        for (let index = keys.length - 1; index >= 0; index--) {
            const key = keys[index]
            const value = (node as any)[key]

            if (isNode(value)) {
                nodes.push({ node: value, parent: node })
            } else if (Array.isArray(value)) {
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
        }
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.3630352218861757,
  "difficulty": 35.73214285714286,
  "effort": 38916.07923183416,
  "length": 192,
  "time": 2162.0044017685645,
  "vocabulary": 51,
  "volume": 1089.1056656585272,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ExpressionStatement\`
nodes.push({ node: v, parent: node })
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 3,
  "effort": 119.58941141594507,
  "length": 12,
  "time": 6.643856189774726,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ExpressionStatement\`
nodes.push({ node: value, parent: node })
\` 1`] = `
Object {
  "deliveredBugs": 0.013287712379549451,
  "difficulty": 3,
  "effort": 119.58941141594507,
  "length": 12,
  "time": 6.643856189774726,
  "vocabulary": 10,
  "volume": 39.863137138648355,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ExpressionStatement\`
visit(node, node.parent || e.parent)
\` 1`] = `
Object {
  "deliveredBugs": 0.011,
  "difficulty": 3,
  "effort": 99,
  "length": 11,
  "time": 5.5,
  "vocabulary": 8,
  "volume": 33,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ExpressionStatement\`
visitorKeys.TSInterfaceDeclaration = [
    ...new Set([...visitorKeys.TSInterfaceDeclaration || [], "implements"]),
]
\` 1`] = `
Object {
  "deliveredBugs": 0.02150977500432694,
  "difficulty": 6,
  "effort": 387.1759500778849,
  "length": 18,
  "time": 21.50977500432694,
  "vocabulary": 12,
  "volume": 64.52932501298082,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ExpressionStatement\`
visitorKeys.TSNamedTupleMember = [
    ...new Set([...visitorKeys.TSNamedTupleMember || [], "label"]),
]
\` 1`] = `
Object {
  "deliveredBugs": 0.02150977500432694,
  "difficulty": 6,
  "effort": 387.1759500778849,
  "length": 18,
  "time": 21.50977500432694,
  "vocabulary": 12,
  "volume": 64.52932501298082,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ForStatement\`
for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
\` 1`] = `
Object {
  "deliveredBugs": 0.06267252957521456,
  "difficulty": 12.272727272727273,
  "effort": 2307.4885889056272,
  "length": 40,
  "time": 128.19381049475706,
  "vocabulary": 26,
  "volume": 188.0175887256437,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ForStatement\`
for (let index = keys.length - 1; index >= 0; index--) {
            const key = keys[index]
            const value = (node as any)[key]

            if (isNode(value)) {
                nodes.push({ node: value, parent: node })
            } else if (Array.isArray(value)) {
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
        }
\` 1`] = `
Object {
  "deliveredBugs": 0.16449463186709434,
  "difficulty": 21.5,
  "effort": 10609.903755427584,
  "length": 97,
  "time": 589.4390975237546,
  "vocabulary": 34,
  "volume": 493.483895601283,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts FunctionDeclaration\`
function isNode(x: unknown): x is TSESTree.Node {
    return (
        x !== null &&
        typeof x === "object" &&
        typeof (x as any).type === "string"
    )
}
\` 1`] = `
Object {
  "deliveredBugs": 0.04756727059879784,
  "difficulty": 8.399999999999999,
  "effort": 1198.6952190897052,
  "length": 32,
  "time": 66.59417883831696,
  "vocabulary": 22,
  "volume": 142.7018117963935,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts FunctionDeclaration\`
function walk(
    node: TSESTree.Node,
    visit: (node: TSESTree.Node, parent: TSESTree.Node | null) => void,
): void {
    const nodes: { node: TSESTree.Node; parent: TSESTree.Node | null }[] = [
        { node, parent: null },
    ]

    let e
    while ((e = nodes.pop())) {
        const node = e.node
        visit(node, node.parent || e.parent)
        const keys = visitorKeys[node.type] || getKeys(node)

        for (let index = keys.length - 1; index >= 0; index--) {
            const key = keys[index]
            const value = (node as any)[key]

            if (isNode(value)) {
                nodes.push({ node: value, parent: node })
            } else if (Array.isArray(value)) {
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
        }
    }
}
\` 1`] = `
Object {
  "deliveredBugs": 0.3593255107489908,
  "difficulty": 34.17857142857143,
  "effort": 36843.697905726876,
  "length": 191,
  "time": 2046.8721058737153,
  "vocabulary": 50,
  "volume": 1077.9765322469723,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts IfStatement\`
if (Array.isArray(value)) {
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.07531522711223579,
  "difficulty": 12.115384615384615,
  "effort": 2737.418831579339,
  "length": 47,
  "time": 152.07882397662993,
  "vocabulary": 28,
  "volume": 225.94568133670737,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts IfStatement\`
if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
\` 1`] = `
Object {
  "deliveredBugs": 0.020314787504086555,
  "difficulty": 4,
  "effort": 243.77745004903863,
  "length": 17,
  "time": 13.543191669391035,
  "vocabulary": 12,
  "volume": 60.94436251225966,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts IfStatement\`
if (isNode(value)) {
                nodes.push({ node: value, parent: node })
            } else if (Array.isArray(value)) {
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
\` 1`] = `
Object {
  "deliveredBugs": 0.10525625489443073,
  "difficulty": 17.846153846153847,
  "effort": 5635.257954347984,
  "length": 65,
  "time": 313.0698863526658,
  "vocabulary": 29,
  "volume": 315.7687646832922,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ImportDeclaration\`
import {
    visitorKeys as baseVisitorKeys,
    getKeys,
} from "@typescript-eslint/visitor-keys"
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ImportDeclaration\`
import type { TSESTree } from "@typescript-eslint/types"
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ImportSpecifier\`
TSESTree
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ImportSpecifier\`
getKeys
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ImportSpecifier\`
visitorKeys as baseVisitorKeys
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Literal\`
"@typescript-eslint/types"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Literal\`
"@typescript-eslint/visitor-keys"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Literal\`
"implements"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Literal\`
"label"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Literal\`
"object"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Literal\`
"string"
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Literal\`
0
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Literal\`
1
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts LogicalExpression\`
node.parent || e.parent
\` 1`] = `
Object {
  "deliveredBugs": 0.005417832221403845,
  "difficulty": 1.3333333333333333,
  "effort": 21.67132888561538,
  "length": 7,
  "time": 1.2039627158675212,
  "vocabulary": 5,
  "volume": 16.253496664211536,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts LogicalExpression\`
visitorKeys.TSInterfaceDeclaration || []
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts LogicalExpression\`
visitorKeys.TSNamedTupleMember || []
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts LogicalExpression\`
visitorKeys[node.type] || getKeys(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.009,
  "difficulty": 2.5,
  "effort": 67.5,
  "length": 9,
  "time": 3.75,
  "vocabulary": 8,
  "volume": 27,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts LogicalExpression\`
x !== null &&
        typeof x === "object"
\` 1`] = `
Object {
  "deliveredBugs": 0.007486279792153611,
  "difficulty": 2.6666666666666665,
  "effort": 59.89023833722889,
  "length": 8,
  "time": 3.327235463179383,
  "vocabulary": 7,
  "volume": 22.458839376460833,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts LogicalExpression\`
x !== null &&
        typeof x === "object" &&
        typeof (x as any).type === "string"
\` 1`] = `
Object {
  "deliveredBugs": 0.022202638308846556,
  "difficulty": 4.666666666666666,
  "effort": 310.8369363238517,
  "length": 18,
  "time": 17.268718684658428,
  "vocabulary": 13,
  "volume": 66.60791492653966,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
(node as any)[key]
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
(x as any).type
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
Array.isArray
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
e.node
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
e.parent
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
keys.length
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
keys[index]
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
node.parent
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
node.type
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
nodes.pop
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
nodes.push
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
value.length
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
value[i]
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
visitorKeys.TSInterfaceDeclaration
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
visitorKeys.TSNamedTupleMember
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts MemberExpression\`
visitorKeys[node.type]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts NewExpression\`
new Set([...visitorKeys.TSInterfaceDeclaration || [], "implements"])
\` 1`] = `
Object {
  "deliveredBugs": 0.01383772647454919,
  "difficulty": 3.5,
  "effort": 145.2961279827665,
  "length": 12,
  "time": 8.072007110153695,
  "vocabulary": 11,
  "volume": 41.51317942364757,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts NewExpression\`
new Set([...visitorKeys.TSNamedTupleMember || [], "label"])
\` 1`] = `
Object {
  "deliveredBugs": 0.01383772647454919,
  "difficulty": 3.5,
  "effort": 145.2961279827665,
  "length": 12,
  "time": 8.072007110153695,
  "vocabulary": 11,
  "volume": 41.51317942364757,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ObjectExpression\`
{ ...baseVisitorKeys }
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 1,
  "effort": 4.754887502163468,
  "length": 3,
  "time": 0.26416041678685936,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ObjectExpression\`
{ node, parent: null }
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ObjectExpression\`
{ node: v, parent: node }
\` 1`] = `
Object {
  "deliveredBugs": 0.006893233335256416,
  "difficulty": 2,
  "effort": 41.3594000115385,
  "length": 8,
  "time": 2.2977444450854723,
  "vocabulary": 6,
  "volume": 20.67970000576925,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ObjectExpression\`
{ node: value, parent: node }
\` 1`] = `
Object {
  "deliveredBugs": 0.006893233335256416,
  "difficulty": 2,
  "effort": 41.3594000115385,
  "length": 8,
  "time": 2.2977444450854723,
  "vocabulary": 6,
  "volume": 20.67970000576925,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Program\`
import type { TSESTree } from "@typescript-eslint/types"
import {
    visitorKeys as baseVisitorKeys,
    getKeys,
} from "@typescript-eslint/visitor-keys"

const visitorKeys = { ...baseVisitorKeys }
visitorKeys.TSNamedTupleMember = [
    ...new Set([...visitorKeys.TSNamedTupleMember || [], "label"]),
]
visitorKeys.TSInterfaceDeclaration = [
    ...new Set([...visitorKeys.TSInterfaceDeclaration || [], "implements"]),
]

/**
 * Traverse node
 */
export function walk(
    node: TSESTree.Node,
    visit: (node: TSESTree.Node, parent: TSESTree.Node | null) => void,
): void {
    const nodes: { node: TSESTree.Node; parent: TSESTree.Node | null }[] = [
        { node, parent: null },
    ]

    let e
    while ((e = nodes.pop())) {
        const node = e.node
        visit(node, node.parent || e.parent)
        const keys = visitorKeys[node.type] || getKeys(node)

        for (let index = keys.length - 1; index >= 0; index--) {
            const key = keys[index]
            const value = (node as any)[key]

            if (isNode(value)) {
                nodes.push({ node: value, parent: node })
            } else if (Array.isArray(value)) {
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
        }
    }
}

/**
 * Check whether the given value is an ASTNode or not.
 */
function isNode(x: unknown): x is TSESTree.Node {
    return (
        x !== null &&
        typeof x === "object" &&
        typeof (x as any).type === "string"
    )
}

\` 1`] = `
Object {
  "deliveredBugs": 0.5816187985805783,
  "difficulty": 51.425,
  "effort": 89729.2401510187,
  "length": 281,
  "time": 4984.957786167706,
  "vocabulary": 74,
  "volume": 1744.8563957417348,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Property\`
node
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Property\`
node: v
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Property\`
node: value
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Property\`
parent: node
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts Property\`
parent: null
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts ReturnStatement\`
return (
        x !== null &&
        typeof x === "object" &&
        typeof (x as any).type === "string"
    )
\` 1`] = `
Object {
  "deliveredBugs": 0.024113247839698156,
  "difficulty": 5.333333333333333,
  "effort": 385.81196543517046,
  "length": 19,
  "time": 21.433998079731694,
  "vocabulary": 14,
  "volume": 72.33974351909447,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts SpreadElement\`
...baseVisitorKeys
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts SpreadElement\`
...new Set([...visitorKeys.TSInterfaceDeclaration || [], "implements"])
\` 1`] = `
Object {
  "deliveredBugs": 0.01499087034742829,
  "difficulty": 3.5,
  "effort": 157.40413864799703,
  "length": 13,
  "time": 8.744674369333168,
  "vocabulary": 11,
  "volume": 44.97261104228487,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts SpreadElement\`
...new Set([...visitorKeys.TSNamedTupleMember || [], "label"])
\` 1`] = `
Object {
  "deliveredBugs": 0.01499087034742829,
  "difficulty": 3.5,
  "effort": 157.40413864799703,
  "length": 13,
  "time": 8.744674369333168,
  "vocabulary": 11,
  "volume": 44.97261104228487,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts SpreadElement\`
...visitorKeys.TSInterfaceDeclaration || []
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts SpreadElement\`
...visitorKeys.TSNamedTupleMember || []
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSAnyKeyword\`
any
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSArrayType\`
{ node: TSESTree.Node; parent: TSESTree.Node | null }[]
\` 1`] = `
Object {
  "deliveredBugs": 0.01550233110947436,
  "difficulty": 3.5,
  "effort": 162.7744766494808,
  "length": 14,
  "time": 9.043026480526711,
  "vocabulary": 10,
  "volume": 46.50699332842308,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSAsExpression\`
node as any
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSAsExpression\`
x as any
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSFunctionType\`
(node: TSESTree.Node, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.01911980000384617,
  "difficulty": 4,
  "effort": 229.43760004615402,
  "length": 16,
  "time": 12.746533335897446,
  "vocabulary": 12,
  "volume": 57.359400011538504,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSNullKeyword\`
null
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSPropertySignature\`
node: TSESTree.Node;
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSPropertySignature\`
parent: TSESTree.Node | null
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 1.5,
  "effort": 29.47722668160484,
  "length": 7,
  "time": 1.6376237045336022,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypeAnnotation\`
: (node: TSESTree.Node, parent: TSESTree.Node | null) => void
\` 1`] = `
Object {
  "deliveredBugs": 0.020314787504086555,
  "difficulty": 4,
  "effort": 243.77745004903863,
  "length": 17,
  "time": 13.543191669391035,
  "vocabulary": 12,
  "volume": 60.94436251225966,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypeAnnotation\`
: { node: TSESTree.Node; parent: TSESTree.Node | null }[]
\` 1`] = `
Object {
  "deliveredBugs": 0.016609640474436815,
  "difficulty": 3.5,
  "effort": 174.40122498158655,
  "length": 15,
  "time": 9.688956943421475,
  "vocabulary": 10,
  "volume": 49.82892142331044,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypeAnnotation\`
: TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.0026666666666666666,
  "difficulty": 1,
  "effort": 8,
  "length": 4,
  "time": 0.4444444444444444,
  "vocabulary": 4,
  "volume": 8,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypeAnnotation\`
: TSESTree.Node | null
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypeAnnotation\`
: unknown
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypeAnnotation\`
: void
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypeAnnotation\`
: x is TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypeAnnotation\`
=> void
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypeLiteral\`
{ node: TSESTree.Node; parent: TSESTree.Node | null }
\` 1`] = `
Object {
  "deliveredBugs": 0.013736341672916687,
  "difficulty": 2.8,
  "effort": 115.38527005250016,
  "length": 13,
  "time": 6.410292780694453,
  "vocabulary": 9,
  "volume": 41.20902501875006,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypePredicate\`
x is TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSTypeReference\`
TSESTree.Node
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSUnionType\`
TSESTree.Node | null
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSUnknownKeyword\`
unknown
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts TSVoidKeyword\`
void
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts UnaryExpression\`
typeof (x as any).type
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 2,
  "effort": 39.302968908806456,
  "length": 7,
  "time": 2.1834982727114696,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts UnaryExpression\`
typeof x
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts UpdateExpression\`
i--
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts UpdateExpression\`
index--
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclaration\`
const key = keys[index]
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclaration\`
const keys = visitorKeys[node.type] || getKeys(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.01383772647454919,
  "difficulty": 3.5999999999999996,
  "effort": 149.44744592513123,
  "length": 12,
  "time": 8.302635884729513,
  "vocabulary": 11,
  "volume": 41.51317942364757,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclaration\`
const node = e.node
\` 1`] = `
Object {
  "deliveredBugs": 0.004643856189774725,
  "difficulty": 2.25,
  "effort": 31.34602928097939,
  "length": 6,
  "time": 1.7414460711655217,
  "vocabulary": 5,
  "volume": 13.931568569324174,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclaration\`
const nodes: { node: TSESTree.Node; parent: TSESTree.Node | null }[] = [
        { node, parent: null },
    ]
\` 1`] = `
Object {
  "deliveredBugs": 0.03172795768381336,
  "difficulty": 7.333333333333333,
  "effort": 698.015069043894,
  "length": 25,
  "time": 38.778614946882996,
  "vocabulary": 14,
  "volume": 95.18387305144009,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclaration\`
const v = value[i]
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 1.5,
  "effort": 23.264662506490403,
  "length": 6,
  "time": 1.292481250360578,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclaration\`
const value = (node as any)[key]
\` 1`] = `
Object {
  "deliveredBugs": 0.009509775004326938,
  "difficulty": 2.5,
  "effort": 71.32331253245204,
  "length": 9,
  "time": 3.962406251802891,
  "vocabulary": 9,
  "volume": 28.529325012980813,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclaration\`
const visitorKeys = { ...baseVisitorKeys }
\` 1`] = `
Object {
  "deliveredBugs": 0.005169925001442312,
  "difficulty": 2,
  "effort": 31.019550008653873,
  "length": 6,
  "time": 1.723308333814104,
  "vocabulary": 6,
  "volume": 15.509775004326936,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclaration\`
let e
\` 1`] = `
Object {
  "deliveredBugs": 0.0006666666666666666,
  "difficulty": 0.5,
  "effort": 1,
  "length": 2,
  "time": 0.05555555555555555,
  "vocabulary": 2,
  "volume": 2,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclaration\`
let i = value.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2,
  "effort": 48,
  "length": 8,
  "time": 2.6666666666666665,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclaration\`
let index = keys.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2,
  "effort": 48,
  "length": 8,
  "time": 2.6666666666666665,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclarator\`
e
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclarator\`
i = value.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 1.5,
  "effort": 29.47722668160484,
  "length": 7,
  "time": 1.6376237045336022,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclarator\`
index = keys.length - 1
\` 1`] = `
Object {
  "deliveredBugs": 0.00655049481813441,
  "difficulty": 1.5,
  "effort": 29.47722668160484,
  "length": 7,
  "time": 1.6376237045336022,
  "vocabulary": 7,
  "volume": 19.651484454403228,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclarator\`
key = keys[index]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclarator\`
keys = visitorKeys[node.type] || getKeys(node)
\` 1`] = `
Object {
  "deliveredBugs": 0.012180403014586996,
  "difficulty": 3,
  "effort": 109.62362713128296,
  "length": 11,
  "time": 6.090201507293497,
  "vocabulary": 10,
  "volume": 36.541209043760986,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclarator\`
node = e.node
\` 1`] = `
Object {
  "deliveredBugs": 0.0033333333333333335,
  "difficulty": 1.5,
  "effort": 15,
  "length": 5,
  "time": 0.8333333333333334,
  "vocabulary": 4,
  "volume": 10,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclarator\`
nodes: { node: TSESTree.Node; parent: TSESTree.Node | null }[] = [
        { node, parent: null },
    ]
\` 1`] = `
Object {
  "deliveredBugs": 0.029603517745128736,
  "difficulty": 6.416666666666666,
  "effort": 569.8677165937281,
  "length": 24,
  "time": 31.65931758854045,
  "vocabulary": 13,
  "volume": 88.81055323538621,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclarator\`
v = value[i]
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1,
  "effort": 11.60964047443681,
  "length": 5,
  "time": 0.6449800263576005,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclarator\`
value = (node as any)[key]
\` 1`] = `
Object {
  "deliveredBugs": 0.008,
  "difficulty": 2,
  "effort": 48,
  "length": 8,
  "time": 2.6666666666666665,
  "vocabulary": 8,
  "volume": 24,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts VariableDeclarator\`
visitorKeys = { ...baseVisitorKeys }
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/src/walker.ts WhileStatement\`
while ((e = nodes.pop())) {
        const node = e.node
        visit(node, node.parent || e.parent)
        const keys = visitorKeys[node.type] || getKeys(node)

        for (let index = keys.length - 1; index >= 0; index--) {
            const key = keys[index]
            const value = (node as any)[key]

            if (isNode(value)) {
                nodes.push({ node: value, parent: node })
            } else if (Array.isArray(value)) {
                for (let i = value.length - 1; i >= 0; i--) {
                    const v = value[i]
                    if (isNode(v)) {
                        nodes.push({ node: v, parent: node })
                    }
                }
            }
        }
    }
\` 1`] = `
Object {
  "deliveredBugs": 0.24085684488411796,
  "difficulty": 25.195652173913043,
  "effort": 18205.63586221909,
  "length": 134,
  "time": 1011.4242145677272,
  "vocabulary": 42,
  "volume": 722.5705346523539,
}
`;

exports[`test for halstead complexity measures /ts/variable-declaration.ts Literal\`
42
\` 1`] = `
Object {
  "deliveredBugs": 0,
  "difficulty": 0,
  "effort": 0,
  "length": 1,
  "time": 0,
  "vocabulary": 1,
  "volume": 0,
}
`;

exports[`test for halstead complexity measures /ts/variable-declaration.ts Program\`
declare const V = 42

\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/variable-declaration.ts VariableDeclaration\`
declare const V = 42
\` 1`] = `
Object {
  "deliveredBugs": 0.0038698801581456034,
  "difficulty": 1.5,
  "effort": 17.414460711655217,
  "length": 5,
  "time": 0.9674700395364009,
  "vocabulary": 5,
  "volume": 11.60964047443681,
}
`;

exports[`test for halstead complexity measures /ts/variable-declaration.ts VariableDeclarator\`
V = 42
\` 1`] = `
Object {
  "deliveredBugs": 0.001584962500721156,
  "difficulty": 0.5,
  "effort": 2.377443751081734,
  "length": 3,
  "time": 0.13208020839342968,
  "vocabulary": 3,
  "volume": 4.754887502163468,
}
`;
